// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Components|AboutTextBox Basic view 1`] = `
<div
  className="visualization"
>
  <div
    className="AboutTextBox"
  >
    <h1>
      About This Project
    </h1>
    <p>
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ac aliquet nisl. Nulla condimentum, felis vel euismod blandit, ex massa scelerisque nibh, vulputate porta quam tellus et diam. Morbi tincidunt elementum nibh ac vestibulum. Vivamus non tempor eros. Vivamus eget ultricies diam, eu feugiat nisi. Nulla facilisi. Cras non nisl semper, vulputate leo non, dictum nibh. Etiam nulla purus, interdum a tellus nec, malesuada tempus eros. Proin nulla erat, tincidunt ultrices luctus eu, tincidunt in tellus. Vivamus in tincidunt sapien, sed pharetra tortor. Mauris urna nulla, luctus non eleifend vitae, dignissim ut lectus. Nam eu luctus ipsum. Cras a viverra nulla, laoreet tincidunt ante. Phasellus dapibus facilisis semper. Pellentesque ultrices semper massa sed ornare.
    </p>
    <p>
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ac aliquet nisl. Nulla condimentum, felis vel euismod blandit, ex massa scelerisque nibh, vulputate porta quam tellus et diam. Morbi tincidunt elementum nibh ac vestibulum. Vivamus non tempor eros. Vivamus eget ultricies diam, eu feugiat nisi. Nulla facilisi. Cras non nisl semper, vulputate leo non, dictum nibh. Etiam nulla purus, interdum a tellus nec, malesuada tempus eros. Proin nulla erat, tincidunt ultrices luctus eu, tincidunt in tellus. Vivamus in tincidunt sapien, sed pharetra tortor. Mauris urna nulla, luctus non eleifend vitae, dignissim ut lectus. Nam eu luctus ipsum. Cras a viverra nulla, laoreet tincidunt ante. Phasellus dapibus facilisis semper. Pellentesque ultrices semper massa sed ornare.
    </p>
    <p>
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ac aliquet nisl. Nulla condimentum, felis vel euismod blandit, ex massa scelerisque nibh, vulputate porta quam tellus et diam. Morbi tincidunt elementum nibh ac vestibulum. Vivamus non tempor eros. Vivamus eget ultricies diam, eu feugiat nisi. Nulla facilisi. Cras non nisl semper, vulputate leo non, dictum nibh. Etiam nulla purus, interdum a tellus nec, malesuada tempus eros. Proin nulla erat, tincidunt ultrices luctus eu, tincidunt in tellus. Vivamus in tincidunt sapien, sed pharetra tortor. Mauris urna nulla, luctus non eleifend vitae, dignissim ut lectus. Nam eu luctus ipsum. Cras a viverra nulla, laoreet tincidunt ante. Phasellus dapibus facilisis semper. Pellentesque ultrices semper massa sed ornare.
    </p>
    <p>
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ac aliquet nisl. Nulla condimentum, felis vel euismod blandit, ex massa scelerisque nibh, vulputate porta quam tellus et diam. Morbi tincidunt elementum nibh ac vestibulum. Vivamus non tempor eros. Vivamus eget ultricies diam, eu feugiat nisi. Nulla facilisi. Cras non nisl semper, vulputate leo non, dictum nibh. Etiam nulla purus, interdum a tellus nec, malesuada tempus eros. Proin nulla erat, tincidunt ultrices luctus eu, tincidunt in tellus. Vivamus in tincidunt sapien, sed pharetra tortor. Mauris urna nulla, luctus non eleifend vitae, dignissim ut lectus. Nam eu luctus ipsum. Cras a viverra nulla, laoreet tincidunt ante. Phasellus dapibus facilisis semper. Pellentesque ultrices semper massa sed ornare.
    </p>
  </div>
</div>
`;

exports[`Storyshots Components|BarContainer default 1`] = `
<div
  className="visualization"
>
  <svg
    className="BarContainer"
    height="100%"
    width="100%"
  >
    <rect
      className="Bar"
      fill="green"
      height="100%"
      width="10.81081081081081%"
      x="0%"
      y={0}
    />
    <rect
      className="Bar"
      fill="red"
      height="100%"
      width="59.45945945945946%"
      x="10.810810810810814%"
      y={0}
    />
    <rect
      className="Bar"
      fill="pink"
      height="100%"
      width="29.72972972972973%"
      x="70.27027027027027%"
      y={0}
    />
  </svg>
</div>
`;

exports[`Storyshots Components|BarContainer standalone 1`] = `
<div
  className="visualization"
>
  <svg>
    <g
      className="BarContainer"
      height="100%"
      width="100%"
    >
      <rect
        className="Bar"
        fill="green"
        height="100%"
        width="10.81081081081081%"
        x="0%"
        y={0}
      />
      <rect
        className="Bar"
        fill="red"
        height="100%"
        width="59.45945945945946%"
        x="10.810810810810814%"
        y={0}
      />
      <rect
        className="Bar"
        fill="pink"
        height="100%"
        width="29.72972972972973%"
        x="70.27027027027027%"
        y={0}
      />
    </g>
  </svg>
</div>
`;

exports[`Storyshots Components|BarContainer vertical bars 1`] = `
<div
  className="visualization"
>
  <svg
    className="BarContainer"
    height="100%"
    width="100%"
  >
    <rect
      className="Bar"
      fill="green"
      height="18.181818181818183%"
      width="33.33333333333333%"
      x="0%"
      y="81.81818181818181%"
    />
    <rect
      className="Bar"
      fill="red"
      height="100%"
      width="33.33333333333333%"
      x="33.33333333333333%"
      y="0%"
    />
    <rect
      className="Bar"
      fill="pink"
      height="50%"
      width="33.33333333333333%"
      x="66.66666666666666%"
      y="50%"
    />
  </svg>
</div>
`;

exports[`Storyshots Components|BrowseByBtn browseByCompany 1`] = `
<div
  className="visualization"
>
  <button
    className="BrowseByBtn"
    focusable={true}
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={0}
    type="button"
  >
    <div
      className="BrowseByBtn-ButtonText"
    >
      <span>
        Projects by 
        <span
          className="LastWord"
        >
          Company
        </span>
      </span>
    </div>
    <svg
      className="BrowseByBtn-Wheel"
      height="41.33px"
      width="41.33px"
    >
      <defs>
        <clipPath
          id="clip-path-BrowseByBtn"
        >
          <circle
            cx="229.72368"
            cy="44.91539"
            fill="none"
            r="16.166"
          />
        </clipPath>
        <clipPath
          id="clip-path-3-BrowseByBtn"
        >
          <path
            clipPath="url(#clip-path-BrowseByBtn)"
            d="M229.7238,65.581c-.626,0-1.2583-.02832-1.87939-.085l.81152-8.96289a12.10745,12.10745,0,0,0,2.16162-.002l.82813,8.96094C231.01091,65.55173,230.36442,65.581,229.7238,65.581Zm-5.62939-.77832a20.58184,20.58184,0,0,1-3.56348-1.377l4.01074-8.05664a11.61065,11.61065,0,0,0,2.001.77344Zm11.30176-.01074-2.46777-8.6543a11.66106,11.66106,0,0,0,2.001-.77832l4.02344,8.05078A20.54793,20.54793,0,0,1,235.39616,64.792Zm-18.10693-3.36914a20.74236,20.74236,0,0,1-2.81689-2.5625l6.64258-6.07227a11.812,11.812,0,0,0,1.59521,1.45117Zm24.90137-.02441L236.757,54.22263a11.76546,11.76546,0,0,0,1.59375-1.45508l6.65039,6.06445A20.84919,20.84919,0,0,1,242.19059,61.39841ZM212.17106,55.8281a20.70023,20.70023,0,0,1-1.708-3.4082l8.38477-3.27148a11.62618,11.62618,0,0,0,.96289,1.92188Zm35.12646-.03613-7.64844-4.74219a11.67372,11.67372,0,0,0,.959-1.9248l8.3916,3.25391A20.64243,20.64243,0,0,1,247.29753,55.792Zm-37.88477-7.043a20.83977,20.83977,0,0,1-.355-3.791l9-.01758a11.76228,11.76228,0,0,0,.20068,2.14648Zm40.62939-.04395-8.84863-1.64258a11.79437,11.79437,0,0,0,.19629-2.14746l7.84717-.05859,1.15234.00293A20.90312,20.90312,0,0,1,250.04216,48.70506Zm-31.792-5.91406-8.85254-1.623a20.581,20.581,0,0,1,1.03418-3.67383l8.39941,3.23047A11.6016,11.6016,0,0,0,218.25016,42.791Zm22.93408-.07227a11.57424,11.57424,0,0,0-.59424-2.06055l8.37793-3.28711a20.5969,20.5969,0,0,1,1.05811,3.668Zm-21.39941-3.918-7.6582-4.72656a20.71109,20.71109,0,0,1,2.28955-3.04395l6.66406,6.04883A11.81428,11.81428,0,0,0,219.78483,38.80076Zm19.83691-.0625a11.69171,11.69171,0,0,0-1.3042-1.71289l6.626-6.08984a20.75265,20.75265,0,0,1,2.31006,3.03125Zm-16.9502-3.11719L217.22233,28.457a20.72237,20.72237,0,0,1,3.23633-2.01855l4.03516,8.04492A11.52708,11.52708,0,0,0,222.67155,35.62107Zm14.05029-.042a11.85456,11.85456,0,0,0-1.83545-1.12988l3.98926-8.06641a20.71039,20.71039,0,0,1,3.24365,1.99512Zm-10.22461-1.88086L224.009,25.04978a20.62037,20.62037,0,0,1,3.752-.71l.84375,8.96094A11.562,11.562,0,0,0,226.49723,33.69822Zm6.38721-.0166a11.72865,11.72865,0,0,0-2.11621-.38672l.791-8.96484a20.7184,20.7184,0,0,1,3.75.68359Z"
            fill="none"
          />
        </clipPath>
      </defs>
      <g
        clipPath="url(#clip-path-3-BrowseByBtn)"
        transform="translate(-209,-25)"
      >
        <path
          d="M229.72367,28.74937A16.15971,16.15971,0,0,0,213.569,44.6901a4.64806,4.64806,0,0,1,.682-.0119,8.36511,8.36511,0,0,1,4.22766-.1532c.45422.05676.72705.666.2525.93164a2.19442,2.19442,0,0,1,.3963.68549.43647.43647,0,0,1-.42072.59564.50171.50171,0,0,1-.17853.85272,7.45805,7.45805,0,0,1-2.25848.24951.52014.52014,0,0,1-.45776.435,3.36522,3.36522,0,0,1-1.94061-.19812,16.05186,16.05186,0,0,0,.759,2.62061q.53339-.21625,1.08362-.382a.51356.51356,0,0,1,.29846-.68927,6.72267,6.72267,0,0,1,1.38239-.39618,18.33414,18.33414,0,0,1,2.36761-.85382c.62994-.20337.84.72461.26581.96429-.0686.02863-.13818.05072-.20685.07892.34784.17181.69238.352,1.03369.5368a.40938.40938,0,0,1,.18811.10266c.17334.09558.34937.18469.52118.28442a.49421.49421,0,0,1-.04511.8714.50093.50093,0,0,1-.32434.37579c-.21735.08185-.43933.15466-.66309.22418a.53811.53811,0,0,1-.1991.54169c.10583-.05646.19879-.13165.31024-.17975a.59506.59506,0,0,1,.37958-.03381c.09277-.09991.17041-.207.26923-.30469a.50413.50413,0,0,1,.83569.48651c-.0202.09943-.06055.179-.0874.27185.04706-.0174.09137-.0365.139-.05359a.50467.50467,0,0,1,.61505.34924,1.66419,1.66419,0,0,1,.04559.238.47627.47627,0,0,1,.08331.52753.51246.51246,0,0,1,.15918.80426c-.05969.06525-.12567.12469-.18768.18781a.45948.45948,0,0,1-.01709.09161,5.84046,5.84046,0,0,1-2.702,2.94684c-.03528.05884-.07349.11511-.10883.17389a16.16,16.16,0,1,0,9.657-29.11267Z"
          fill="#fff"
        />
        <path
          d="M229.7238,24.249a20.666,20.666,0,1,0,20.666,20.666A20.68913,20.68913,0,0,0,229.7238,24.249Zm0,32.332a11.56522,11.56522,0,0,1-6.65692-2.10376c-.05566.05914-.11536.1145-.1723.17242a.45948.45948,0,0,1-.01709.09161,5.84046,5.84046,0,0,1-2.702,2.94684c-.22113.36847-.44128.7384-.68176,1.08923a.50244.50244,0,0,1-.91388-.38525,4.32932,4.32932,0,0,1,.34686-.9491.51289.51289,0,0,1-.53137-.50134c.00574-.06036.02637-.1095.03564-.16718-.03271.03467-.06842.06927-.09875.10406-.37567.43054-1.0918-.13544-.78534-.6059.02332-.03583.05444-.06573.07892-.10065l-.00073-.00055.0061-.00629a4.31931,4.31931,0,0,1,.29883-.3811.458.458,0,0,1-.21643-.6781,9.83246,9.83246,0,0,1,1.18225-1.63171c-.07-.04645-.13281-.09344-.19427-.14062a27.01894,27.01894,0,0,1-2.55389,1.28979c-.43384.18781-.953-.2135-.68408-.68414a3.53882,3.53882,0,0,1,.28534-.41876.51257.51257,0,0,1-.36865-.74786c.04425-.07245.10278-.12909.15125-.197-.36218.11615-.72351.23456-1.08661.34808a.51737.51737,0,0,1-.56171-.75641l-.02161.00641a.50229.50229,0,0,1-.38531-.91382,10.1175,10.1175,0,0,1,2.23767-.94452.51356.51356,0,0,1,.29846-.68927,6.72267,6.72267,0,0,1,1.38239-.39618,10.91729,10.91729,0,0,1,1.31714-.51538c-.12341-.35693-.23492-.71924-.32379-1.09076a7.70651,7.70651,0,0,1-2.11841.21613.52014.52014,0,0,1-.45776.435c-.91217.10223-1.99115.14026-2.51508-.74762a.47752.47752,0,0,1,.01428-.51044,5.16178,5.16178,0,0,1-.54877-.09314.50235.50235,0,0,1,.13293-.98212c.16046-.00543.32068-.00073.48108-.00244a.51305.51305,0,0,1-.12982-.30029c-.47125-.17181-.23413-.88861.23206-.94727a4.361,4.361,0,0,1,.77234-.01349,7.51426,7.51426,0,0,1,3.829-.20319A11.65916,11.65916,0,1,1,229.7238,56.581Z"
          fill="#a1a8a7"
        />
      </g>
    </svg>
  </button>
</div>
`;

exports[`Storyshots Components|BrowseByBtn browseByLocation 1`] = `
<div
  className="visualization"
>
  <button
    className="BrowseByBtn"
    focusable={true}
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={0}
    type="button"
  >
    <div
      className="BrowseByBtn-ButtonText"
    >
      <span>
        Projects by 
        <span
          className="LastWord"
        >
          Company
        </span>
      </span>
    </div>
    <svg
      className="BrowseByBtn-Wheel"
      height="41.33px"
      width="41.33px"
    >
      <defs>
        <clipPath
          id="clip-path-BrowseByBtn"
        >
          <circle
            cx="229.72368"
            cy="44.91539"
            fill="none"
            r="16.166"
          />
        </clipPath>
        <clipPath
          id="clip-path-3-BrowseByBtn"
        >
          <path
            clipPath="url(#clip-path-BrowseByBtn)"
            d="M229.7238,65.581c-.626,0-1.2583-.02832-1.87939-.085l.81152-8.96289a12.10745,12.10745,0,0,0,2.16162-.002l.82813,8.96094C231.01091,65.55173,230.36442,65.581,229.7238,65.581Zm-5.62939-.77832a20.58184,20.58184,0,0,1-3.56348-1.377l4.01074-8.05664a11.61065,11.61065,0,0,0,2.001.77344Zm11.30176-.01074-2.46777-8.6543a11.66106,11.66106,0,0,0,2.001-.77832l4.02344,8.05078A20.54793,20.54793,0,0,1,235.39616,64.792Zm-18.10693-3.36914a20.74236,20.74236,0,0,1-2.81689-2.5625l6.64258-6.07227a11.812,11.812,0,0,0,1.59521,1.45117Zm24.90137-.02441L236.757,54.22263a11.76546,11.76546,0,0,0,1.59375-1.45508l6.65039,6.06445A20.84919,20.84919,0,0,1,242.19059,61.39841ZM212.17106,55.8281a20.70023,20.70023,0,0,1-1.708-3.4082l8.38477-3.27148a11.62618,11.62618,0,0,0,.96289,1.92188Zm35.12646-.03613-7.64844-4.74219a11.67372,11.67372,0,0,0,.959-1.9248l8.3916,3.25391A20.64243,20.64243,0,0,1,247.29753,55.792Zm-37.88477-7.043a20.83977,20.83977,0,0,1-.355-3.791l9-.01758a11.76228,11.76228,0,0,0,.20068,2.14648Zm40.62939-.04395-8.84863-1.64258a11.79437,11.79437,0,0,0,.19629-2.14746l7.84717-.05859,1.15234.00293A20.90312,20.90312,0,0,1,250.04216,48.70506Zm-31.792-5.91406-8.85254-1.623a20.581,20.581,0,0,1,1.03418-3.67383l8.39941,3.23047A11.6016,11.6016,0,0,0,218.25016,42.791Zm22.93408-.07227a11.57424,11.57424,0,0,0-.59424-2.06055l8.37793-3.28711a20.5969,20.5969,0,0,1,1.05811,3.668Zm-21.39941-3.918-7.6582-4.72656a20.71109,20.71109,0,0,1,2.28955-3.04395l6.66406,6.04883A11.81428,11.81428,0,0,0,219.78483,38.80076Zm19.83691-.0625a11.69171,11.69171,0,0,0-1.3042-1.71289l6.626-6.08984a20.75265,20.75265,0,0,1,2.31006,3.03125Zm-16.9502-3.11719L217.22233,28.457a20.72237,20.72237,0,0,1,3.23633-2.01855l4.03516,8.04492A11.52708,11.52708,0,0,0,222.67155,35.62107Zm14.05029-.042a11.85456,11.85456,0,0,0-1.83545-1.12988l3.98926-8.06641a20.71039,20.71039,0,0,1,3.24365,1.99512Zm-10.22461-1.88086L224.009,25.04978a20.62037,20.62037,0,0,1,3.752-.71l.84375,8.96094A11.562,11.562,0,0,0,226.49723,33.69822Zm6.38721-.0166a11.72865,11.72865,0,0,0-2.11621-.38672l.791-8.96484a20.7184,20.7184,0,0,1,3.75.68359Z"
            fill="none"
          />
        </clipPath>
      </defs>
      <g
        clipPath="url(#clip-path-3-BrowseByBtn)"
        transform="translate(-209,-25)"
      >
        <path
          d="M229.72367,28.74937A16.15971,16.15971,0,0,0,213.569,44.6901a4.64806,4.64806,0,0,1,.682-.0119,8.36511,8.36511,0,0,1,4.22766-.1532c.45422.05676.72705.666.2525.93164a2.19442,2.19442,0,0,1,.3963.68549.43647.43647,0,0,1-.42072.59564.50171.50171,0,0,1-.17853.85272,7.45805,7.45805,0,0,1-2.25848.24951.52014.52014,0,0,1-.45776.435,3.36522,3.36522,0,0,1-1.94061-.19812,16.05186,16.05186,0,0,0,.759,2.62061q.53339-.21625,1.08362-.382a.51356.51356,0,0,1,.29846-.68927,6.72267,6.72267,0,0,1,1.38239-.39618,18.33414,18.33414,0,0,1,2.36761-.85382c.62994-.20337.84.72461.26581.96429-.0686.02863-.13818.05072-.20685.07892.34784.17181.69238.352,1.03369.5368a.40938.40938,0,0,1,.18811.10266c.17334.09558.34937.18469.52118.28442a.49421.49421,0,0,1-.04511.8714.50093.50093,0,0,1-.32434.37579c-.21735.08185-.43933.15466-.66309.22418a.53811.53811,0,0,1-.1991.54169c.10583-.05646.19879-.13165.31024-.17975a.59506.59506,0,0,1,.37958-.03381c.09277-.09991.17041-.207.26923-.30469a.50413.50413,0,0,1,.83569.48651c-.0202.09943-.06055.179-.0874.27185.04706-.0174.09137-.0365.139-.05359a.50467.50467,0,0,1,.61505.34924,1.66419,1.66419,0,0,1,.04559.238.47627.47627,0,0,1,.08331.52753.51246.51246,0,0,1,.15918.80426c-.05969.06525-.12567.12469-.18768.18781a.45948.45948,0,0,1-.01709.09161,5.84046,5.84046,0,0,1-2.702,2.94684c-.03528.05884-.07349.11511-.10883.17389a16.16,16.16,0,1,0,9.657-29.11267Z"
          fill="#fff"
        />
        <path
          d="M229.7238,24.249a20.666,20.666,0,1,0,20.666,20.666A20.68913,20.68913,0,0,0,229.7238,24.249Zm0,32.332a11.56522,11.56522,0,0,1-6.65692-2.10376c-.05566.05914-.11536.1145-.1723.17242a.45948.45948,0,0,1-.01709.09161,5.84046,5.84046,0,0,1-2.702,2.94684c-.22113.36847-.44128.7384-.68176,1.08923a.50244.50244,0,0,1-.91388-.38525,4.32932,4.32932,0,0,1,.34686-.9491.51289.51289,0,0,1-.53137-.50134c.00574-.06036.02637-.1095.03564-.16718-.03271.03467-.06842.06927-.09875.10406-.37567.43054-1.0918-.13544-.78534-.6059.02332-.03583.05444-.06573.07892-.10065l-.00073-.00055.0061-.00629a4.31931,4.31931,0,0,1,.29883-.3811.458.458,0,0,1-.21643-.6781,9.83246,9.83246,0,0,1,1.18225-1.63171c-.07-.04645-.13281-.09344-.19427-.14062a27.01894,27.01894,0,0,1-2.55389,1.28979c-.43384.18781-.953-.2135-.68408-.68414a3.53882,3.53882,0,0,1,.28534-.41876.51257.51257,0,0,1-.36865-.74786c.04425-.07245.10278-.12909.15125-.197-.36218.11615-.72351.23456-1.08661.34808a.51737.51737,0,0,1-.56171-.75641l-.02161.00641a.50229.50229,0,0,1-.38531-.91382,10.1175,10.1175,0,0,1,2.23767-.94452.51356.51356,0,0,1,.29846-.68927,6.72267,6.72267,0,0,1,1.38239-.39618,10.91729,10.91729,0,0,1,1.31714-.51538c-.12341-.35693-.23492-.71924-.32379-1.09076a7.70651,7.70651,0,0,1-2.11841.21613.52014.52014,0,0,1-.45776.435c-.91217.10223-1.99115.14026-2.51508-.74762a.47752.47752,0,0,1,.01428-.51044,5.16178,5.16178,0,0,1-.54877-.09314.50235.50235,0,0,1,.13293-.98212c.16046-.00543.32068-.00073.48108-.00244a.51305.51305,0,0,1-.12982-.30029c-.47125-.17181-.23413-.88861.23206-.94727a4.361,4.361,0,0,1,.77234-.01349,7.51426,7.51426,0,0,1,3.829-.20319A11.65916,11.65916,0,1,1,229.7238,56.581Z"
          fill="#a1a8a7"
        />
      </g>
    </svg>
  </button>
</div>
`;

exports[`Storyshots Components|BrowseByBtn with state toggle 1`] = `
<div
  className="visualization"
>
  <button
    className="BrowseByBtn"
    focusable={true}
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={0}
    type="button"
  >
    <div
      className="BrowseByBtn-ButtonText"
    >
      <span>
        Conditions by 
        <span
          className="LastWord"
        >
          Location
        </span>
      </span>
    </div>
    <svg
      className="BrowseByBtn-Wheel"
      height="41.33px"
      width="41.33px"
    >
      <defs>
        <clipPath
          id="clip-path-BrowseByBtn"
        >
          <circle
            cx="229.72368"
            cy="44.91539"
            fill="none"
            r="16.166"
          />
        </clipPath>
        <clipPath
          id="clip-path-3-BrowseByBtn"
        >
          <path
            clipPath="url(#clip-path-BrowseByBtn)"
            d="M229.7238,65.581c-.626,0-1.2583-.02832-1.87939-.085l.81152-8.96289a12.10745,12.10745,0,0,0,2.16162-.002l.82813,8.96094C231.01091,65.55173,230.36442,65.581,229.7238,65.581Zm-5.62939-.77832a20.58184,20.58184,0,0,1-3.56348-1.377l4.01074-8.05664a11.61065,11.61065,0,0,0,2.001.77344Zm11.30176-.01074-2.46777-8.6543a11.66106,11.66106,0,0,0,2.001-.77832l4.02344,8.05078A20.54793,20.54793,0,0,1,235.39616,64.792Zm-18.10693-3.36914a20.74236,20.74236,0,0,1-2.81689-2.5625l6.64258-6.07227a11.812,11.812,0,0,0,1.59521,1.45117Zm24.90137-.02441L236.757,54.22263a11.76546,11.76546,0,0,0,1.59375-1.45508l6.65039,6.06445A20.84919,20.84919,0,0,1,242.19059,61.39841ZM212.17106,55.8281a20.70023,20.70023,0,0,1-1.708-3.4082l8.38477-3.27148a11.62618,11.62618,0,0,0,.96289,1.92188Zm35.12646-.03613-7.64844-4.74219a11.67372,11.67372,0,0,0,.959-1.9248l8.3916,3.25391A20.64243,20.64243,0,0,1,247.29753,55.792Zm-37.88477-7.043a20.83977,20.83977,0,0,1-.355-3.791l9-.01758a11.76228,11.76228,0,0,0,.20068,2.14648Zm40.62939-.04395-8.84863-1.64258a11.79437,11.79437,0,0,0,.19629-2.14746l7.84717-.05859,1.15234.00293A20.90312,20.90312,0,0,1,250.04216,48.70506Zm-31.792-5.91406-8.85254-1.623a20.581,20.581,0,0,1,1.03418-3.67383l8.39941,3.23047A11.6016,11.6016,0,0,0,218.25016,42.791Zm22.93408-.07227a11.57424,11.57424,0,0,0-.59424-2.06055l8.37793-3.28711a20.5969,20.5969,0,0,1,1.05811,3.668Zm-21.39941-3.918-7.6582-4.72656a20.71109,20.71109,0,0,1,2.28955-3.04395l6.66406,6.04883A11.81428,11.81428,0,0,0,219.78483,38.80076Zm19.83691-.0625a11.69171,11.69171,0,0,0-1.3042-1.71289l6.626-6.08984a20.75265,20.75265,0,0,1,2.31006,3.03125Zm-16.9502-3.11719L217.22233,28.457a20.72237,20.72237,0,0,1,3.23633-2.01855l4.03516,8.04492A11.52708,11.52708,0,0,0,222.67155,35.62107Zm14.05029-.042a11.85456,11.85456,0,0,0-1.83545-1.12988l3.98926-8.06641a20.71039,20.71039,0,0,1,3.24365,1.99512Zm-10.22461-1.88086L224.009,25.04978a20.62037,20.62037,0,0,1,3.752-.71l.84375,8.96094A11.562,11.562,0,0,0,226.49723,33.69822Zm6.38721-.0166a11.72865,11.72865,0,0,0-2.11621-.38672l.791-8.96484a20.7184,20.7184,0,0,1,3.75.68359Z"
            fill="none"
          />
        </clipPath>
      </defs>
      <g
        clipPath="url(#clip-path-3-BrowseByBtn)"
        transform="translate(-209,-25)"
      >
        <path
          d="M229.72367,28.74937A16.15971,16.15971,0,0,0,213.569,44.6901a4.64806,4.64806,0,0,1,.682-.0119,8.36511,8.36511,0,0,1,4.22766-.1532c.45422.05676.72705.666.2525.93164a2.19442,2.19442,0,0,1,.3963.68549.43647.43647,0,0,1-.42072.59564.50171.50171,0,0,1-.17853.85272,7.45805,7.45805,0,0,1-2.25848.24951.52014.52014,0,0,1-.45776.435,3.36522,3.36522,0,0,1-1.94061-.19812,16.05186,16.05186,0,0,0,.759,2.62061q.53339-.21625,1.08362-.382a.51356.51356,0,0,1,.29846-.68927,6.72267,6.72267,0,0,1,1.38239-.39618,18.33414,18.33414,0,0,1,2.36761-.85382c.62994-.20337.84.72461.26581.96429-.0686.02863-.13818.05072-.20685.07892.34784.17181.69238.352,1.03369.5368a.40938.40938,0,0,1,.18811.10266c.17334.09558.34937.18469.52118.28442a.49421.49421,0,0,1-.04511.8714.50093.50093,0,0,1-.32434.37579c-.21735.08185-.43933.15466-.66309.22418a.53811.53811,0,0,1-.1991.54169c.10583-.05646.19879-.13165.31024-.17975a.59506.59506,0,0,1,.37958-.03381c.09277-.09991.17041-.207.26923-.30469a.50413.50413,0,0,1,.83569.48651c-.0202.09943-.06055.179-.0874.27185.04706-.0174.09137-.0365.139-.05359a.50467.50467,0,0,1,.61505.34924,1.66419,1.66419,0,0,1,.04559.238.47627.47627,0,0,1,.08331.52753.51246.51246,0,0,1,.15918.80426c-.05969.06525-.12567.12469-.18768.18781a.45948.45948,0,0,1-.01709.09161,5.84046,5.84046,0,0,1-2.702,2.94684c-.03528.05884-.07349.11511-.10883.17389a16.16,16.16,0,1,0,9.657-29.11267Z"
          fill="#fff"
        />
        <path
          d="M229.7238,24.249a20.666,20.666,0,1,0,20.666,20.666A20.68913,20.68913,0,0,0,229.7238,24.249Zm0,32.332a11.56522,11.56522,0,0,1-6.65692-2.10376c-.05566.05914-.11536.1145-.1723.17242a.45948.45948,0,0,1-.01709.09161,5.84046,5.84046,0,0,1-2.702,2.94684c-.22113.36847-.44128.7384-.68176,1.08923a.50244.50244,0,0,1-.91388-.38525,4.32932,4.32932,0,0,1,.34686-.9491.51289.51289,0,0,1-.53137-.50134c.00574-.06036.02637-.1095.03564-.16718-.03271.03467-.06842.06927-.09875.10406-.37567.43054-1.0918-.13544-.78534-.6059.02332-.03583.05444-.06573.07892-.10065l-.00073-.00055.0061-.00629a4.31931,4.31931,0,0,1,.29883-.3811.458.458,0,0,1-.21643-.6781,9.83246,9.83246,0,0,1,1.18225-1.63171c-.07-.04645-.13281-.09344-.19427-.14062a27.01894,27.01894,0,0,1-2.55389,1.28979c-.43384.18781-.953-.2135-.68408-.68414a3.53882,3.53882,0,0,1,.28534-.41876.51257.51257,0,0,1-.36865-.74786c.04425-.07245.10278-.12909.15125-.197-.36218.11615-.72351.23456-1.08661.34808a.51737.51737,0,0,1-.56171-.75641l-.02161.00641a.50229.50229,0,0,1-.38531-.91382,10.1175,10.1175,0,0,1,2.23767-.94452.51356.51356,0,0,1,.29846-.68927,6.72267,6.72267,0,0,1,1.38239-.39618,10.91729,10.91729,0,0,1,1.31714-.51538c-.12341-.35693-.23492-.71924-.32379-1.09076a7.70651,7.70651,0,0,1-2.11841.21613.52014.52014,0,0,1-.45776.435c-.91217.10223-1.99115.14026-2.51508-.74762a.47752.47752,0,0,1,.01428-.51044,5.16178,5.16178,0,0,1-.54877-.09314.50235.50235,0,0,1,.13293-.98212c.16046-.00543.32068-.00073.48108-.00244a.51305.51305,0,0,1-.12982-.30029c-.47125-.17181-.23413-.88861.23206-.94727a4.361,4.361,0,0,1,.77234-.01349,7.51426,7.51426,0,0,1,3.829-.20319A11.65916,11.65916,0,1,1,229.7238,56.581Z"
          fill="#a1a8a7"
        />
      </g>
    </svg>
  </button>
</div>
`;

exports[`Storyshots Components|BubbleChart default 1`] = `
<div
  className="visualization"
>
  <svg
    className="BubbleChart"
    height="100%"
    viewBox="0 0 850 400"
    width="100%"
  >
    <g
      onMouseDown={[Function]}
      onMouseOver={[Function]}
      onMouseUp={[Function]}
    >
      <g
        className="InstrumentBubble"
      >
        <g
          className="depth-2"
          data-name="OIL"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            className="CommodityCircle"
            r={80.5}
            transform="translate(243.16912586 192.49143055)"
          />
          <path
            d="
          M 162.66912586 191.49143055
          A 80.5 80.5 0 0 1 323.66912586 191.49143055"
            id="OILpath"
            style={
              Object {
                "fill": "none",
                "stroke": "transparent",
              }
            }
          />
          <text
            className="bubbleTitle"
          >
            <textPath
              href="#OILpath"
              startOffset="50%"
              textAnchor="middle"
            >
              Oil
            </textPath>
          </text>
        </g>
        <g
          className="depth-2"
          data-name="GAS"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            className="CommodityCircle"
            r={39}
            transform="translate(367.66912586 192.49143055)"
          />
          <path
            d="
          M 328.66912586 191.49143055
          A 39 39 0 0 1 406.66912586 191.49143055"
            id="GASpath"
            style={
              Object {
                "fill": "none",
                "stroke": "transparent",
              }
            }
          />
          <text
            className="bubbleTitle"
          >
            <textPath
              href="#GASpath"
              startOffset="50%"
              textAnchor="middle"
            >
              Gas
            </textPath>
          </text>
        </g>
        <g
          className="depth-2"
          data-name="POWER"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            className="CommodityCircle"
            r={36}
            transform="translate(339.00245920 267.17892764)"
          />
          <path
            d="
          M 303.00245920 266.17892764
          A 36 36 0 0 1 375.00245920 266.17892764"
            id="POWERpath"
            style={
              Object {
                "fill": "none",
                "stroke": "transparent",
              }
            }
          />
          <text
            className="bubbleTitle"
          >
            <textPath
              href="#POWERpath"
              startOffset="50%"
              textAnchor="middle"
            >
              Power
            </textPath>
          </text>
        </g>
        <g
          className="depth-2"
          data-name="ANY_COMMODITY_TYPES"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            className="CommodityCircle"
            r={89.5}
            transform="translate(506.50737759 200.00000000)"
          />
          <path
            d="
          M 417.00737759 199.00000000
          A 89.5 89.5 0 0 1 596.00737759 199.00000000"
            id="ANY_COMMODITY_TYPESpath"
            style={
              Object {
                "fill": "none",
                "stroke": "transparent",
              }
            }
          />
          <text
            className="bubbleTitle"
          >
            <textPath
              href="#ANY_COMMODITY_TYPESpath"
              startOffset="50%"
              textAnchor="middle"
            >
              Any Commodity Types
            </textPath>
          </text>
        </g>
        <g
          className="depth-2"
          data-name="NOT_SPECIFIED"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            className="CommodityCircle"
            r={43.5}
            transform="translate(644.50737759 200.00000000)"
          />
          <path
            d="
          M 601.00737759 199.00000000
          A 43.5 43.5 0 0 1 688.00737759 199.00000000"
            id="NOT_SPECIFIEDpath"
            style={
              Object {
                "fill": "none",
                "stroke": "transparent",
              }
            }
          />
          <text
            className="bubbleTitle"
          >
            <textPath
              href="#NOT_SPECIFIEDpath"
              startOffset="50%"
              textAnchor="middle"
            >
              Not Specified
            </textPath>
          </text>
        </g>
        <g
          className="depth-3"
          data-name="XO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={40}
            style={
              Object {
                "fill": "rgb(14, 43, 140)",
              }
            }
            transform="translate(207.66912586 192.49143055)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={207.66912586371723}
            y="192.49143055"
          >
            XO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="OPSO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={33}
            style={
              Object {
                "fill": "rgb(22, 78, 248)",
              }
            }
            transform="translate(285.66912586 192.49143055)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={285.6691258637172}
            y="192.49143055"
          >
            OPSO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="OPLO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={20}
            style={
              Object {
                "fill": "rgb(22, 78, 248)",
              }
            }
            transform="translate(252.18835663 239.85215364)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={252.188356632948}
            y="239.85215364"
          >
            OPLO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="OPL"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={10}
            style={
              Object {
                "fill": "rgb(14, 43, 140)",
              }
            }
            transform="translate(367.66912586 192.49143055)"
          />
          <text
            alignmentBaseline="middle"
            fill="black"
            stroke="transparent"
            textAnchor=""
            x={379.6691258637172}
            y="192.49143055"
          >
            OPL
          </text>
        </g>
        <g
          className="depth-3"
          data-name="EPE"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={7}
            style={
              Object {
                "fill": "rgb(39, 165, 249)",
              }
            }
            transform="translate(339.00245920 267.17892764)"
          />
          <text
            alignmentBaseline="middle"
            fill="black"
            stroke="transparent"
            textAnchor=""
            x={348.00245919705054}
            y="267.17892764"
          >
            EPE
          </text>
        </g>
        <g
          className="depth-3"
          data-name="GPLO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={40}
            style={
              Object {
                "fill": "rgb(22, 78, 248)",
              }
            }
            transform="translate(478.21632047 165.65082116)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={478.216320468198}
            y="165.65082116"
          >
            GPLO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="EC"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={21}
            style={
              Object {
                "fill": "rgb(39, 165, 249)",
              }
            }
            transform="translate(544.21632047 165.65082116)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={544.216320468198}
            y="165.65082116"
          >
            EC
          </text>
        </g>
        <g
          className="depth-3"
          data-name="GPSO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={10}
            style={
              Object {
                "fill": "rgb(22, 78, 248)",
              }
            }
            transform="translate(533.52692653 232.80539552)"
          />
          <text
            alignmentBaseline="middle"
            fill="black"
            stroke="transparent"
            textAnchor=""
            x={545.5269265288041}
            y="232.80539552"
          >
            GPSO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="AO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={15}
            style={
              Object {
                "fill": "rgb(212, 169, 42)",
              }
            }
            transform="translate(621.00737759 200.00000000)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={621.0073775911517}
            y="200.00000000"
          >
            AO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="MO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={5}
            style={
              Object {
                "fill": "rgb(212, 169, 42)",
              }
            }
            transform="translate(662.00737759 200.00000000)"
          />
          <text
            alignmentBaseline="middle"
            fill="black"
            stroke="transparent"
            textAnchor=""
            x={669.0073775911517}
            y="200.00000000"
          >
            MO
          </text>
        </g>
      </g>
    </g>
  </svg>
</div>
`;

exports[`Storyshots Components|BubbleChart with OPENING type selected 1`] = `
<div
  className="visualization"
>
  <svg
    className="BubbleChart"
    height="100%"
    viewBox="0 0 850 400"
    width="100%"
  >
    <g
      onMouseDown={[Function]}
      onMouseOver={[Function]}
      onMouseUp={[Function]}
    >
      <g
        className="InstrumentBubble"
      >
        <g
          className="depth-2"
          data-name="OIL"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            className="CommodityCircle"
            r={60.5}
            transform="translate(330.50000000 200.00000000)"
          />
          <path
            d="
          M 270.00000000 199.00000000
          A 60.5 60.5 0 0 1 391.00000000 199.00000000"
            id="OILpath"
            style={
              Object {
                "fill": "none",
                "stroke": "transparent",
              }
            }
          />
          <text
            className="bubbleTitle"
          >
            <textPath
              href="#OILpath"
              startOffset="50%"
              textAnchor="middle"
            >
              Oil
            </textPath>
          </text>
        </g>
        <g
          className="depth-2"
          data-name="ANY_COMMODITY_TYPES"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            className="CommodityCircle"
            r={89.5}
            transform="translate(490.50000000 200.00000000)"
          />
          <path
            d="
          M 401.00000000 199.00000000
          A 89.5 89.5 0 0 1 580.00000000 199.00000000"
            id="ANY_COMMODITY_TYPESpath"
            style={
              Object {
                "fill": "none",
                "stroke": "transparent",
              }
            }
          />
          <text
            className="bubbleTitle"
          >
            <textPath
              href="#ANY_COMMODITY_TYPESpath"
              startOffset="50%"
              textAnchor="middle"
            >
              Any Commodity Types
            </textPath>
          </text>
        </g>
        <g
          className="depth-3"
          data-name="OPSO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={33}
            style={
              Object {
                "fill": "rgb(22, 78, 248)",
              }
            }
            transform="translate(308.00000000 200.00000000)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={308}
            y="200.00000000"
          >
            OPSO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="OPLO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={20}
            style={
              Object {
                "fill": "rgb(22, 78, 248)",
              }
            }
            transform="translate(366.00000000 200.00000000)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={366}
            y="200.00000000"
          >
            OPLO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="GPLO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={40}
            style={
              Object {
                "fill": "rgb(22, 78, 248)",
              }
            }
            transform="translate(446.00000000 200.00000000)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={446}
            y="200.00000000"
          >
            GPLO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="GPSO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={10}
            style={
              Object {
                "fill": "rgb(22, 78, 248)",
              }
            }
            transform="translate(533.00000000 200.00000000)"
          />
          <text
            alignmentBaseline="middle"
            fill="black"
            stroke="transparent"
            textAnchor=""
            x={545}
            y="200.00000000"
          >
            GPSO
          </text>
        </g>
      </g>
    </g>
  </svg>
</div>
`;

exports[`Storyshots Components|BubbleChart/InstrumentBubble default 1`] = `
<div
  className="visualization"
>
  <div
    className="BubbleChart"
  >
    <svg
      height={400}
      width={850}
    >
      <g
        className="InstrumentBubble"
      >
        <g
          className="depth-2"
          data-name="OIL"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            className="CommodityCircle"
            r={80.5}
            transform="translate(243.16912586 192.49143055)"
          />
          <path
            d="
          M 162.66912586 191.49143055
          A 80.5 80.5 0 0 1 323.66912586 191.49143055"
            id="OILpath"
            style={
              Object {
                "fill": "none",
                "stroke": "transparent",
              }
            }
          />
          <text
            className="bubbleTitle"
          >
            <textPath
              href="#OILpath"
              startOffset="50%"
              textAnchor="middle"
            >
              Oil
            </textPath>
          </text>
        </g>
        <g
          className="depth-2"
          data-name="GAS"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            className="CommodityCircle"
            r={39}
            transform="translate(367.66912586 192.49143055)"
          />
          <path
            d="
          M 328.66912586 191.49143055
          A 39 39 0 0 1 406.66912586 191.49143055"
            id="GASpath"
            style={
              Object {
                "fill": "none",
                "stroke": "transparent",
              }
            }
          />
          <text
            className="bubbleTitle"
          >
            <textPath
              href="#GASpath"
              startOffset="50%"
              textAnchor="middle"
            >
              Gas
            </textPath>
          </text>
        </g>
        <g
          className="depth-2"
          data-name="POWER"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            className="CommodityCircle"
            r={36}
            transform="translate(339.00245920 267.17892764)"
          />
          <path
            d="
          M 303.00245920 266.17892764
          A 36 36 0 0 1 375.00245920 266.17892764"
            id="POWERpath"
            style={
              Object {
                "fill": "none",
                "stroke": "transparent",
              }
            }
          />
          <text
            className="bubbleTitle"
          >
            <textPath
              href="#POWERpath"
              startOffset="50%"
              textAnchor="middle"
            >
              Power
            </textPath>
          </text>
        </g>
        <g
          className="depth-2"
          data-name="ANY_COMMODITY_TYPES"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            className="CommodityCircle"
            r={89.5}
            transform="translate(506.50737759 200.00000000)"
          />
          <path
            d="
          M 417.00737759 199.00000000
          A 89.5 89.5 0 0 1 596.00737759 199.00000000"
            id="ANY_COMMODITY_TYPESpath"
            style={
              Object {
                "fill": "none",
                "stroke": "transparent",
              }
            }
          />
          <text
            className="bubbleTitle"
          >
            <textPath
              href="#ANY_COMMODITY_TYPESpath"
              startOffset="50%"
              textAnchor="middle"
            >
              Any Commodity Types
            </textPath>
          </text>
        </g>
        <g
          className="depth-2"
          data-name="NOT_SPECIFIED"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            className="CommodityCircle"
            r={43.5}
            transform="translate(644.50737759 200.00000000)"
          />
          <path
            d="
          M 601.00737759 199.00000000
          A 43.5 43.5 0 0 1 688.00737759 199.00000000"
            id="NOT_SPECIFIEDpath"
            style={
              Object {
                "fill": "none",
                "stroke": "transparent",
              }
            }
          />
          <text
            className="bubbleTitle"
          >
            <textPath
              href="#NOT_SPECIFIEDpath"
              startOffset="50%"
              textAnchor="middle"
            >
              Not Specified
            </textPath>
          </text>
        </g>
        <g
          className="depth-3"
          data-name="XO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={40}
            style={
              Object {
                "fill": "rgb(14, 43, 140)",
              }
            }
            transform="translate(207.66912586 192.49143055)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={207.66912586371723}
            y="192.49143055"
          >
            XO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="OPSO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={33}
            style={
              Object {
                "fill": "rgb(22, 78, 248)",
              }
            }
            transform="translate(285.66912586 192.49143055)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={285.6691258637172}
            y="192.49143055"
          >
            OPSO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="OPLO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={20}
            style={
              Object {
                "fill": "rgb(22, 78, 248)",
              }
            }
            transform="translate(252.18835663 239.85215364)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={252.188356632948}
            y="239.85215364"
          >
            OPLO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="OPL"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={10}
            style={
              Object {
                "fill": "rgb(14, 43, 140)",
              }
            }
            transform="translate(367.66912586 192.49143055)"
          />
          <text
            alignmentBaseline="middle"
            fill="black"
            stroke="transparent"
            textAnchor=""
            x={379.6691258637172}
            y="192.49143055"
          >
            OPL
          </text>
        </g>
        <g
          className="depth-3"
          data-name="EPE"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={7}
            style={
              Object {
                "fill": "rgb(39, 165, 249)",
              }
            }
            transform="translate(339.00245920 267.17892764)"
          />
          <text
            alignmentBaseline="middle"
            fill="black"
            stroke="transparent"
            textAnchor=""
            x={348.00245919705054}
            y="267.17892764"
          >
            EPE
          </text>
        </g>
        <g
          className="depth-3"
          data-name="GPLO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={40}
            style={
              Object {
                "fill": "rgb(22, 78, 248)",
              }
            }
            transform="translate(478.21632047 165.65082116)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={478.216320468198}
            y="165.65082116"
          >
            GPLO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="EC"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={21}
            style={
              Object {
                "fill": "rgb(39, 165, 249)",
              }
            }
            transform="translate(544.21632047 165.65082116)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={544.216320468198}
            y="165.65082116"
          >
            EC
          </text>
        </g>
        <g
          className="depth-3"
          data-name="GPSO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={10}
            style={
              Object {
                "fill": "rgb(22, 78, 248)",
              }
            }
            transform="translate(533.52692653 232.80539552)"
          />
          <text
            alignmentBaseline="middle"
            fill="black"
            stroke="transparent"
            textAnchor=""
            x={545.5269265288041}
            y="232.80539552"
          >
            GPSO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="AO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={15}
            style={
              Object {
                "fill": "rgb(212, 169, 42)",
              }
            }
            transform="translate(621.00737759 200.00000000)"
          />
          <text
            alignmentBaseline="middle"
            fill="white"
            stroke="transparent"
            textAnchor="middle"
            x={621.0073775911517}
            y="200.00000000"
          >
            AO
          </text>
        </g>
        <g
          className="depth-3"
          data-name="MO"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <circle
            r={5}
            style={
              Object {
                "fill": "rgb(212, 169, 42)",
              }
            }
            transform="translate(662.00737759 200.00000000)"
          />
          <text
            alignmentBaseline="middle"
            fill="black"
            stroke="transparent"
            textAnchor=""
            x={669.0073775911517}
            y="200.00000000"
          >
            MO
          </text>
        </g>
      </g>
    </svg>
  </div>
</div>
`;

exports[`Storyshots Components|ChartIndicator withCircle 1`] = `
<div
  className="visualization"
>
  <svg
    height={300}
    style={
      Object {
        "border": "1px solid #000",
      }
    }
    width={300}
  >
    <g
      className="ChartIndicator"
      transform="translate(50, 30)"
    >
      <path
        className="arrow"
        d="M -5 -10 L 5 -10 L 0 0 z"
      />
      <line
        className="line"
        x1={0}
        x2={0}
        y1={5}
        y2={90}
      />
      <circle
        className="selectedCircle"
        cx={0}
        cy={130}
        r={40}
        strokeWidth={4}
      />
      <text
        alignmentBaseline="bottom"
        textAnchor="middle"
        x="0"
        y="-12"
      >
        With Circle
      </text>
    </g>
  </svg>
</div>
`;

exports[`Storyshots Components|ChartIndicator withoutCircle 1`] = `
<div
  className="visualization"
>
  <svg
    height={300}
    style={
      Object {
        "border": "1px solid #000",
      }
    }
    width={300}
  >
    <g
      className="ChartIndicator"
      transform="translate(50, 30)"
    >
      <path
        className="arrow"
        d="M -5 -10 L 5 -10 L 0 0 z"
      />
      <line
        className="line"
        x1={0}
        x2={0}
        y1={5}
        y2={90}
      />
      <text
        alignmentBaseline="bottom"
        textAnchor="middle"
        x="0"
        y="-12"
      >
        Without circle
      </text>
    </g>
  </svg>
</div>
`;

exports[`Storyshots Components|CircleContainer default 1`] = `
<div
  className="visualization"
>
  <div
    className="CircleContainer"
    style={
      Object {
        "height": 60,
        "width": 60,
      }
    }
  >
    <div>
       
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|CircleContainer with icon 1`] = `
<div
  className="visualization"
>
  <div
    className="CircleContainer"
    style={
      Object {
        "height": 60,
        "width": 60,
      }
    }
  >
    <div>
      &lt;
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|CircleContainer with prop: className 1`] = `
<div
  className="visualization"
>
  <div
    className="CircleContainer blue"
    style={
      Object {
        "height": 60,
        "width": 60,
      }
    }
  >
    <div>
       
    </div>
  </div>
  <style
    dangerouslySetInnerHTML={
      Object {
        "__html": ".CircleContainer.blue { background: blue } ",
      }
    }
  />
</div>
`;

exports[`Storyshots Components|CircleContainer with prop: onClick  1`] = `
<div
  className="visualization"
>
  <div
    className="CircleContainer"
    focusable={true}
    onClick={[Function]}
    onKeyPress={[Function]}
    style={
      Object {
        "height": 60,
        "width": 60,
      }
    }
    tabIndex={0}
  >
    <div>
       
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|CircleContainer with text 1`] = `
<div
  className="visualization"
>
  <div
    className="CircleContainer"
    style={
      Object {
        "height": 60,
        "width": 60,
      }
    }
  >
    <div>
      150
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|ConditionDetails default 1`] = `
<div
  className="visualization"
>
  <section
    className="ConditionDetails"
  >
    <div
      className="main"
    >
      <div
        className="ProjectHeader"
      >
        <h1>
          Selected Project: 
        </h1>
        <button
          className="openProject"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
          type="button"
        >
          <h2>
            Keystone XL
            <span
              className="asterisk"
            >
              *
            </span>
          </h2>
        </button>
      </div>
      <div
        className="listPane"
      >
        <div
          className="ConditionList"
        >
          <div
            className="List"
            onWheel={[Function]}
          >
            <ul>
              <li
                className="List-Item"
              >
                <div
                  className="List-Item-Content"
                  focusable={true}
                  onClick={[Function]}
                  onKeyPress={[Function]}
                  tabIndex={0}
                >
                  <div>
                    <div
                      className="unmarked"
                    />
                    <h4>
                      XO-001-2018
                    </h4>
                  </div>
                </div>
              </li>
              <li
                className="List-Item"
              >
                <div
                  className="List-Item-Content"
                  focusable={true}
                  onClick={[Function]}
                  onKeyPress={[Function]}
                  tabIndex={0}
                >
                  <div>
                    <div
                      className="barMarker marked"
                    />
                    <svg
                      className="BarContainer binnedValue-3"
                      height="100%"
                      width="100%"
                    >
                      <rect
                        className="Bar"
                        fill="pink"
                        height="100%"
                        width="50%"
                        x="0%"
                        y={0}
                      />
                      <rect
                        className="Bar"
                        fill="green"
                        height="100%"
                        width="50%"
                        x="50%"
                        y={0}
                      />
                    </svg>
                  </div>
                </div>
              </li>
              <li
                className="List-Item"
              >
                <div
                  className="List-Item-Content"
                  focusable={true}
                  onClick={[Function]}
                  onKeyPress={[Function]}
                  tabIndex={0}
                >
                  <div>
                    <div
                      className="barMarker"
                    />
                    <svg
                      className="BarContainer binnedValue-2"
                      height="100%"
                      width="100%"
                    >
                      <rect
                        className="Bar"
                        fill="blue"
                        height="100%"
                        width="50%"
                        x="0%"
                        y={0}
                      />
                      <rect
                        className="Bar"
                        fill="red"
                        height="100%"
                        width="50%"
                        x="50%"
                        y={0}
                      />
                    </svg>
                  </div>
                </div>
              </li>
              <li
                className="List-Item selected"
              >
                <div
                  className="CircleContainer arrowPrevious"
                  focusable={true}
                  onClick={[Function]}
                  onKeyPress={[Function]}
                  style={
                    Object {
                      "height": 24,
                      "width": 24,
                    }
                  }
                  tabIndex={0}
                >
                  <div>
                    <div
                      className="Icon"
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-angle-up fa-w-10 fa-1x "
                        color=""
                        data-icon="angle-up"
                        data-prefix="fas"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 320 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <div
                  className="List-Item-Content"
                  focusable={true}
                  onClick={[Function]}
                  onKeyPress={[Function]}
                  tabIndex={0}
                >
                  <div>
                    <div
                      className="unmarked"
                    />
                    <h4>
                      XO-003-2018
                    </h4>
                  </div>
                </div>
                <div
                  className="CircleContainer arrowNext"
                  focusable={true}
                  onClick={[Function]}
                  onKeyPress={[Function]}
                  style={
                    Object {
                      "height": 24,
                      "width": 24,
                    }
                  }
                  tabIndex={0}
                >
                  <div>
                    <div
                      className="Icon"
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-angle-down fa-w-10 fa-1x "
                        color=""
                        data-icon="angle-down"
                        data-prefix="fas"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 320 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </div>
                  </div>
                </div>
              </li>
              <li
                className="List-Item"
              >
                <div
                  className="List-Item-Content"
                  focusable={true}
                  onClick={[Function]}
                  onKeyPress={[Function]}
                  tabIndex={0}
                >
                  <div>
                    <div
                      className="barMarker"
                    />
                    <svg
                      className="BarContainer binnedValue-1"
                      height="100%"
                      width="100%"
                    >
                      <rect
                        className="Bar"
                        fill="red"
                        height="100%"
                        width="100%"
                        x="0%"
                        y={0}
                      />
                    </svg>
                  </div>
                </div>
              </li>
              <li
                className="List-Item"
              >
                <div
                  className="List-Item-Content"
                  focusable={true}
                  onClick={[Function]}
                  onKeyPress={[Function]}
                  tabIndex={0}
                >
                  <div>
                    <div
                      className="barMarker"
                    />
                    <svg
                      className="BarContainer binnedValue-2"
                      height="100%"
                      width="100%"
                    >
                      <rect
                        className="Bar"
                        fill="red"
                        height="100%"
                        width="100%"
                        x="0%"
                        y={0}
                      />
                    </svg>
                  </div>
                </div>
              </li>
              <li
                className="List-Item"
              >
                <div
                  className="List-Item-Content"
                  focusable={true}
                  onClick={[Function]}
                  onKeyPress={[Function]}
                  tabIndex={0}
                >
                  <div>
                    <div
                      className="unmarked"
                    />
                    <h4>
                      XO-005-2018
                    </h4>
                  </div>
                </div>
              </li>
              <li
                className="List-Item"
              >
                <div
                  className="List-Item-Content"
                  focusable={true}
                  onClick={[Function]}
                  onKeyPress={[Function]}
                  tabIndex={0}
                >
                  <div>
                    <div
                      className="barMarker marked"
                    />
                    <svg
                      className="BarContainer binnedValue-3"
                      height="100%"
                      width="100%"
                    >
                      <rect
                        className="Bar"
                        fill="orange"
                        height="100%"
                        width="33.33333333333333%"
                        x="0%"
                        y={0}
                      />
                      <rect
                        className="Bar"
                        fill="yellow"
                        height="100%"
                        width="33.33333333333333%"
                        x="33.33333333333333%"
                        y={0}
                      />
                      <rect
                        className="Bar"
                        fill="teal"
                        height="100%"
                        width="33.33333333333333%"
                        x="66.66666666666666%"
                        y={0}
                      />
                    </svg>
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </div>
      </div>
      <div
        className="contentPane"
      >
        <div
          className="Content"
        >
          <div
            className="ContentBlock half"
          >
            <span
              className="contentHeading"
            >
              Issuance Date
            </span>
            : 
            2014-10-24
          </div>
          <div
            className="ContentBlock half"
          >
            <span
              className="contentHeading"
            >
              Instrument Number
            </span>
            : 
            <button
              className="instrumentLink"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={0}
              type="button"
            >
              XO-003-2018
            </button>
          </div>
          <div
            className="ContentBlock half"
          >
            <span
              className="contentHeading"
            >
              Effective Date
            </span>
            : 
            2014-10-24
          </div>
          <div
            className="ContentBlock half"
          >
            <span
              className="contentHeading"
            >
              Instrument Status
            </span>
            : 
            <span>
              In Progress
            </span>
          </div>
          <div
            className="ContentBlock half"
          >
            <span
              className="contentHeading"
            >
              Sunset Date
            </span>
            : 
            2019-01-30
          </div>
          <div
            className="ContentBlock half"
          >
            <span
              className="contentHeading"
            >
              Location
            </span>
            : 
            Albuquerque, NM
          </div>
          <div
            className="ContentBlock "
          >
            <span
              className="contentHeading"
            >
              Instrument Type
            </span>
            : 
            Construction of Oil Pipeline
          </div>
          <p
            className="contentText"
          >
            <span
              className="contentHeading"
            >
              Instrument Activity
            </span>
            : 
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris facilisis est non mi euismod, eu bibendum purus varius. 
          </p>
          <p
            className="contentText"
          >
            Donec mattis porta sem sed malesuada. Nulla luctus elit at suscipit tempor. Aenean maximus leo eu massa eleifend gravida. Integer nulla tortor, pulvinar quis arcu non, gravida finibus nulla. 
          </p>
          <p
            className="contentText"
          >
            Quisque in velit sed odio tempor viverra quis id neque. Suspendisse id arcu sed elit feugiat bibendum eu a sem. 
          </p>
          <p
            className="contentText"
          >
            Etiam tincidunt massa ut nisi dictum, vitae ultrices mi sagittis. Nulla facilisi. In convallis massa ac orci dictum semper. 
          </p>
          <p
            className="contentText"
          >
            Maecenas tincidunt sem nec turpis fringilla, et gravida dui congue.
          </p>
          <p
            className="contentText"
          >
            Suspendisse sed ultrices orci. Donec elementum sem aliquet, malesuada tortor at, finibus elit.
          </p>
          <p
            className="contentText"
          >
            Nulla posuere aliquet nibh sit amet porta. Sed tristique arcu non consectetur euismod. Aenean maximus arcu non urna volutpat viverra.
          </p>
          <p
            className="contentText"
          >
            Maecenas sit amet pretium leo, ut vestibulum arcu. Etiam in est ultricies, finibus mi non, aliquam elit. Morbi nec cursus turpis, at dictum massa.
          </p>
          <p
            className="contentText"
          >
            Quisque eu lobortis velit, quis viverra elit.
          </p>
        </div>
      </div>
    </div>
  </section>
</div>
`;

exports[`Storyshots Components|ConditionDetails expandable 1`] = `
<div
  className="visualization"
>
  <div
    style={
      Object {
        "border": "1px dashed magenta",
        "width": 800,
      }
    }
  >
    <section
      className="ConditionDetails"
    >
      <div
        className="popout left"
      >
        <div
          className="filler"
        />
      </div>
      <div
        className="main expandable"
      >
        <div
          className="ProjectHeader"
        >
          <h1>
            Selected Project: 
          </h1>
          <button
            className="openProject"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
            type="button"
          >
            <h2>
              Keystone XL
              <span
                className="asterisk"
              >
                *
              </span>
            </h2>
          </button>
          <button
            className="toggleExpand"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
            type="button"
          >
            <h1
              className="upperCase"
            >
              Less
            </h1>
            <svg
              className="arrow"
              viewBox="0 0 16 24"
            >
              <polyline
                points="4,4 12,12.5 4,20 4,4"
              />
            </svg>
          </button>
        </div>
        <div
          className="listPane"
        >
          <div
            className="ConditionList"
          >
            <div
              className="List"
              onWheel={[Function]}
            >
              <ul>
                <li
                  className="List-Item"
                >
                  <div
                    className="List-Item-Content"
                    focusable={true}
                    onClick={[Function]}
                    onKeyPress={[Function]}
                    tabIndex={0}
                  >
                    <div>
                      <div
                        className="unmarked"
                      />
                      <h4>
                        XO-001-2018
                      </h4>
                    </div>
                  </div>
                </li>
                <li
                  className="List-Item"
                >
                  <div
                    className="List-Item-Content"
                    focusable={true}
                    onClick={[Function]}
                    onKeyPress={[Function]}
                    tabIndex={0}
                  >
                    <div>
                      <div
                        className="barMarker marked"
                      />
                      <svg
                        className="BarContainer binnedValue-3"
                        height="100%"
                        width="100%"
                      >
                        <rect
                          className="Bar"
                          fill="pink"
                          height="100%"
                          width="50%"
                          x="0%"
                          y={0}
                        />
                        <rect
                          className="Bar"
                          fill="green"
                          height="100%"
                          width="50%"
                          x="50%"
                          y={0}
                        />
                      </svg>
                    </div>
                  </div>
                </li>
                <li
                  className="List-Item"
                >
                  <div
                    className="List-Item-Content"
                    focusable={true}
                    onClick={[Function]}
                    onKeyPress={[Function]}
                    tabIndex={0}
                  >
                    <div>
                      <div
                        className="barMarker"
                      />
                      <svg
                        className="BarContainer binnedValue-2"
                        height="100%"
                        width="100%"
                      >
                        <rect
                          className="Bar"
                          fill="blue"
                          height="100%"
                          width="50%"
                          x="0%"
                          y={0}
                        />
                        <rect
                          className="Bar"
                          fill="red"
                          height="100%"
                          width="50%"
                          x="50%"
                          y={0}
                        />
                      </svg>
                    </div>
                  </div>
                </li>
                <li
                  className="List-Item selected"
                >
                  <div
                    className="CircleContainer arrowPrevious"
                    focusable={true}
                    onClick={[Function]}
                    onKeyPress={[Function]}
                    style={
                      Object {
                        "height": 24,
                        "width": 24,
                      }
                    }
                    tabIndex={0}
                  >
                    <div>
                      <div
                        className="Icon"
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-angle-up fa-w-10 fa-1x "
                          color=""
                          data-icon="angle-up"
                          data-prefix="fas"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 320 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                  <div
                    className="List-Item-Content"
                    focusable={true}
                    onClick={[Function]}
                    onKeyPress={[Function]}
                    tabIndex={0}
                  >
                    <div>
                      <div
                        className="unmarked"
                      />
                      <h4>
                        XO-003-2018
                      </h4>
                    </div>
                  </div>
                  <div
                    className="CircleContainer arrowNext"
                    focusable={true}
                    onClick={[Function]}
                    onKeyPress={[Function]}
                    style={
                      Object {
                        "height": 24,
                        "width": 24,
                      }
                    }
                    tabIndex={0}
                  >
                    <div>
                      <div
                        className="Icon"
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-angle-down fa-w-10 fa-1x "
                          color=""
                          data-icon="angle-down"
                          data-prefix="fas"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 320 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                </li>
                <li
                  className="List-Item"
                >
                  <div
                    className="List-Item-Content"
                    focusable={true}
                    onClick={[Function]}
                    onKeyPress={[Function]}
                    tabIndex={0}
                  >
                    <div>
                      <div
                        className="barMarker"
                      />
                      <svg
                        className="BarContainer binnedValue-1"
                        height="100%"
                        width="100%"
                      >
                        <rect
                          className="Bar"
                          fill="red"
                          height="100%"
                          width="100%"
                          x="0%"
                          y={0}
                        />
                      </svg>
                    </div>
                  </div>
                </li>
                <li
                  className="List-Item"
                >
                  <div
                    className="List-Item-Content"
                    focusable={true}
                    onClick={[Function]}
                    onKeyPress={[Function]}
                    tabIndex={0}
                  >
                    <div>
                      <div
                        className="barMarker"
                      />
                      <svg
                        className="BarContainer binnedValue-2"
                        height="100%"
                        width="100%"
                      >
                        <rect
                          className="Bar"
                          fill="red"
                          height="100%"
                          width="100%"
                          x="0%"
                          y={0}
                        />
                      </svg>
                    </div>
                  </div>
                </li>
                <li
                  className="List-Item"
                >
                  <div
                    className="List-Item-Content"
                    focusable={true}
                    onClick={[Function]}
                    onKeyPress={[Function]}
                    tabIndex={0}
                  >
                    <div>
                      <div
                        className="unmarked"
                      />
                      <h4>
                        XO-005-2018
                      </h4>
                    </div>
                  </div>
                </li>
                <li
                  className="List-Item"
                >
                  <div
                    className="List-Item-Content"
                    focusable={true}
                    onClick={[Function]}
                    onKeyPress={[Function]}
                    tabIndex={0}
                  >
                    <div>
                      <div
                        className="barMarker marked"
                      />
                      <svg
                        className="BarContainer binnedValue-3"
                        height="100%"
                        width="100%"
                      >
                        <rect
                          className="Bar"
                          fill="orange"
                          height="100%"
                          width="33.33333333333333%"
                          x="0%"
                          y={0}
                        />
                        <rect
                          className="Bar"
                          fill="yellow"
                          height="100%"
                          width="33.33333333333333%"
                          x="33.33333333333333%"
                          y={0}
                        />
                        <rect
                          className="Bar"
                          fill="teal"
                          height="100%"
                          width="33.33333333333333%"
                          x="66.66666666666666%"
                          y={0}
                        />
                      </svg>
                    </div>
                  </div>
                </li>
              </ul>
            </div>
          </div>
        </div>
        <div
          className="contentPane"
        >
          <div
            className="Content"
          >
            <div
              className="ContentBlock half"
            >
              <span
                className="contentHeading"
              >
                Issuance Date
              </span>
              : 
              2014-10-24
            </div>
            <div
              className="ContentBlock half"
            >
              <span
                className="contentHeading"
              >
                Instrument Number
              </span>
              : 
              <button
                className="instrumentLink"
                focusable={true}
                onClick={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
                type="button"
              >
                XO-003-2018
              </button>
            </div>
            <div
              className="ContentBlock half"
            >
              <span
                className="contentHeading"
              >
                Effective Date
              </span>
              : 
              2014-10-24
            </div>
            <div
              className="ContentBlock half"
            >
              <span
                className="contentHeading"
              >
                Instrument Status
              </span>
              : 
              <span>
                In Progress
              </span>
            </div>
            <div
              className="ContentBlock half"
            >
              <span
                className="contentHeading"
              >
                Sunset Date
              </span>
              : 
              2019-01-30
            </div>
            <div
              className="ContentBlock half"
            >
              <span
                className="contentHeading"
              >
                Location
              </span>
              : 
              Albuquerque, NM
            </div>
            <div
              className="ContentBlock "
            >
              <span
                className="contentHeading"
              >
                Instrument Type
              </span>
              : 
              Construction of Oil Pipeline
            </div>
            <p
              className="contentText"
            >
              <span
                className="contentHeading"
              >
                Instrument Activity
              </span>
              : 
              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris facilisis est non mi euismod, eu bibendum purus varius. 
            </p>
            <p
              className="contentText"
            >
              Donec mattis porta sem sed malesuada. Nulla luctus elit at suscipit tempor. Aenean maximus leo eu massa eleifend gravida. Integer nulla tortor, pulvinar quis arcu non, gravida finibus nulla. 
            </p>
            <p
              className="contentText"
            >
              Quisque in velit sed odio tempor viverra quis id neque. Suspendisse id arcu sed elit feugiat bibendum eu a sem. 
            </p>
            <p
              className="contentText"
            >
              Etiam tincidunt massa ut nisi dictum, vitae ultrices mi sagittis. Nulla facilisi. In convallis massa ac orci dictum semper. 
            </p>
            <p
              className="contentText"
            >
              Maecenas tincidunt sem nec turpis fringilla, et gravida dui congue.
            </p>
            <p
              className="contentText"
            >
              Suspendisse sed ultrices orci. Donec elementum sem aliquet, malesuada tortor at, finibus elit.
            </p>
            <p
              className="contentText"
            >
              Nulla posuere aliquet nibh sit amet porta. Sed tristique arcu non consectetur euismod. Aenean maximus arcu non urna volutpat viverra.
            </p>
            <p
              className="contentText"
            >
              Maecenas sit amet pretium leo, ut vestibulum arcu. Etiam in est ultricies, finibus mi non, aliquam elit. Morbi nec cursus turpis, at dictum massa.
            </p>
            <p
              className="contentText"
            >
              Quisque eu lobortis velit, quis viverra elit.
            </p>
          </div>
        </div>
      </div>
      <div
        className="popout right expanded"
      >
        <div
          className="Details"
        >
          <div
            className="filler"
          />
          <div
            className="content"
          />
        </div>
      </div>
    </section>
  </div>
</div>
`;

exports[`Storyshots Components|ConditionDetails/ConditionList default 1`] = `
<div
  className="visualization"
>
  <div
    className="ConditionDetails"
  >
    <div
      className="ConditionList"
    >
      <div
        className="List"
        onWheel={[Function]}
      >
        <ul>
          <li
            className="List-Item"
          >
            <div
              className="List-Item-Content"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={0}
            >
              <div>
                <div
                  className="unmarked"
                />
                <h4>
                  XO-001-2018
                </h4>
              </div>
            </div>
          </li>
          <li
            className="List-Item"
          >
            <div
              className="List-Item-Content"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={0}
            >
              <div>
                <div
                  className="barMarker marked"
                />
                <svg
                  className="BarContainer binnedValue-3"
                  height="100%"
                  width="100%"
                >
                  <rect
                    className="Bar"
                    fill="pink"
                    height="100%"
                    width="100%"
                    x="0%"
                    y={0}
                  />
                </svg>
              </div>
            </div>
          </li>
          <li
            className="List-Item"
          >
            <div
              className="List-Item-Content"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={0}
            >
              <div>
                <div
                  className="barMarker"
                />
                <svg
                  className="BarContainer binnedValue-2"
                  height="100%"
                  width="100%"
                >
                  <rect
                    className="Bar"
                    fill="blue"
                    height="100%"
                    width="100%"
                    x="0%"
                    y={0}
                  />
                </svg>
              </div>
            </div>
          </li>
          <li
            className="List-Item selected"
          >
            <div
              className="CircleContainer arrowPrevious"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              style={
                Object {
                  "height": 24,
                  "width": 24,
                }
              }
              tabIndex={0}
            >
              <div>
                <div
                  className="Icon"
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-angle-up fa-w-10 fa-1x "
                    color=""
                    data-icon="angle-up"
                    data-prefix="fas"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 320 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </div>
              </div>
            </div>
            <div
              className="List-Item-Content"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={0}
            >
              <div>
                <div
                  className="unmarked"
                />
                <h4>
                  XO-003-2018
                </h4>
              </div>
            </div>
            <div
              className="CircleContainer arrowNext"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              style={
                Object {
                  "height": 24,
                  "width": 24,
                }
              }
              tabIndex={0}
            >
              <div>
                <div
                  className="Icon"
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-angle-down fa-w-10 fa-1x "
                    color=""
                    data-icon="angle-down"
                    data-prefix="fas"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 320 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </div>
              </div>
            </div>
          </li>
          <li
            className="List-Item"
          >
            <div
              className="List-Item-Content"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={0}
            >
              <div>
                <div
                  className="barMarker"
                />
                <svg
                  className="BarContainer binnedValue-1"
                  height="100%"
                  width="100%"
                >
                  <rect
                    className="Bar"
                    fill="red"
                    height="100%"
                    width="100%"
                    x="0%"
                    y={0}
                  />
                </svg>
              </div>
            </div>
          </li>
          <li
            className="List-Item"
          >
            <div
              className="List-Item-Content"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={0}
            >
              <div>
                <div
                  className="barMarker"
                />
                <svg
                  className="BarContainer binnedValue-2"
                  height="100%"
                  width="100%"
                >
                  <rect
                    className="Bar"
                    fill="red"
                    height="100%"
                    width="100%"
                    x="0%"
                    y={0}
                  />
                </svg>
              </div>
            </div>
          </li>
          <li
            className="List-Item"
          >
            <div
              className="List-Item-Content"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={0}
            >
              <div>
                <div
                  className="unmarked"
                />
                <h4>
                  XO-005-2018
                </h4>
              </div>
            </div>
          </li>
          <li
            className="List-Item"
          >
            <div
              className="List-Item-Content"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={0}
            >
              <div>
                <div
                  className="barMarker marked"
                />
                <svg
                  className="BarContainer binnedValue-3"
                  height="100%"
                  width="100%"
                >
                  <rect
                    className="Bar"
                    fill="orange"
                    height="100%"
                    width="100%"
                    x="0%"
                    y={0}
                  />
                </svg>
              </div>
            </div>
          </li>
        </ul>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|ConditionDetails/Content condition selected 1`] = `
<div
  className="visualization"
>
  <div
    className="ConditionDetails"
  >
    <div
      className="Content"
    >
      <div
        className="ContentBlock half"
      >
        <span
          className="contentHeading"
        >
          Effective Date
        </span>
        : 
        2014-10-24
      </div>
      <div
        className="ContentBlock half"
      >
        <span
          className="contentHeading"
        >
          Instrument Number
        </span>
        : 
        <button
          className="instrumentLink"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
          type="button"
        >
          XO-001-2018
        </button>
      </div>
      <div
        className="ContentBlock "
      >
        <span
          className="contentHeading"
        >
          Keywords
        </span>
        : 
        program
      </div>
      <p
        className="contentText"
      >
        <span
          className="contentHeading"
        >
          Text
        </span>
        : 
        hello Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris facilisis est non mi euismod, eu bibendum purus varius. 
      </p>
      <p
        className="contentText"
      >
        Donec mattis porta sem sed malesuada. Nulla luctus elit at suscipit tempor. Aenean maximus leo eu massa eleifend gravida. Integer nulla tortor, pulvinar quis arcu non, gravida finibus nulla. 
      </p>
      <p
        className="contentText"
      >
        Quisque in velit sed odio tempor viverra quis id neque. Suspendisse id arcu sed elit feugiat bibendum eu a sem. 
      </p>
      <p
        className="contentText"
      >
        Etiam tincidunt massa ut nisi dictum, vitae ultrices mi sagittis. Nulla facilisi. In convallis massa ac orci dictum semper. 
      </p>
      <p
        className="contentText"
      >
        Maecenas tincidunt sem nec turpis fringilla, et gravida dui congue.
      </p>
      <p
        className="contentText"
      >
        Suspendisse sed ultrices orci. Donec elementum sem aliquet, malesuada tortor at, finibus elit.
      </p>
      <p
        className="contentText"
      >
        Nulla posuere aliquet nibh sit amet porta. Sed tristique arcu non consectetur euismod. Aenean maximus arcu non urna volutpat viverra.
      </p>
      <p
        className="contentText"
      >
        Maecenas sit amet pretium leo, ut vestibulum arcu. Etiam in est ultricies, finibus mi non, aliquam elit. Morbi nec cursus turpis, at dictum massa.
      </p>
      <p
        className="contentText"
      >
        Quisque eu lobortis velit, quis viverra elit.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|ConditionDetails/Content instrument selected 1`] = `
<div
  className="visualization"
>
  <div
    className="ConditionDetails"
  >
    <div
      className="Content"
    >
      <div
        className="ContentBlock half"
      >
        <span
          className="contentHeading"
        >
          Issuance Date
        </span>
        : 
        2014-10-24
      </div>
      <div
        className="ContentBlock half"
      >
        <span
          className="contentHeading"
        >
          Instrument Number
        </span>
        : 
        <button
          className="instrumentLink"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
          type="button"
        >
          XO-001-2018
        </button>
      </div>
      <div
        className="ContentBlock half"
      >
        <span
          className="contentHeading"
        >
          Effective Date
        </span>
        : 
        2014-10-24
      </div>
      <div
        className="ContentBlock half"
      >
        <span
          className="contentHeading"
        >
          Instrument Status
        </span>
        : 
        <span>
          In Progress
        </span>
      </div>
      <div
        className="ContentBlock half"
      >
        <span
          className="contentHeading"
        >
          Sunset Date
        </span>
        : 
        2019-01-30
      </div>
      <div
        className="ContentBlock half"
      >
        <span
          className="contentHeading"
        >
          Location
        </span>
        : 
        Albuquerque, NM
      </div>
      <div
        className="ContentBlock "
      >
        <span
          className="contentHeading"
        >
          Instrument Type
        </span>
        : 
        Construction of Oil Pipeline
      </div>
      <p
        className="contentText"
      >
        <span
          className="contentHeading"
        >
          Instrument Activity
        </span>
        : 
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris facilisis est non mi euismod, eu bibendum purus varius. 
      </p>
      <p
        className="contentText"
      >
        Donec mattis porta sem sed malesuada. Nulla luctus elit at suscipit tempor. Aenean maximus leo eu massa eleifend gravida. Integer nulla tortor, pulvinar quis arcu non, gravida finibus nulla. 
      </p>
      <p
        className="contentText"
      >
        Quisque in velit sed odio tempor viverra quis id neque. Suspendisse id arcu sed elit feugiat bibendum eu a sem. 
      </p>
      <p
        className="contentText"
      >
        Etiam tincidunt massa ut nisi dictum, vitae ultrices mi sagittis. Nulla facilisi. In convallis massa ac orci dictum semper. 
      </p>
      <p
        className="contentText"
      >
        Maecenas tincidunt sem nec turpis fringilla, et gravida dui congue.
      </p>
      <p
        className="contentText"
      >
        Suspendisse sed ultrices orci. Donec elementum sem aliquet, malesuada tortor at, finibus elit.
      </p>
      <p
        className="contentText"
      >
        Nulla posuere aliquet nibh sit amet porta. Sed tristique arcu non consectetur euismod. Aenean maximus arcu non urna volutpat viverra.
      </p>
      <p
        className="contentText"
      >
        Maecenas sit amet pretium leo, ut vestibulum arcu. Etiam in est ultricies, finibus mi non, aliquam elit. Morbi nec cursus turpis, at dictum massa.
      </p>
      <p
        className="contentText"
      >
        Quisque eu lobortis velit, quis viverra elit.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|ConditionDetails/ContentBlock full block 1`] = `
<div
  className="visualization"
>
  <div
    className="ConditionDetails"
  >
    <div
      style={
        Object {
          "height": 50,
          "width": 300,
        }
      }
    >
      <div
        className="ContentBlock "
      >
        <span
          className="contentHeading"
        >
          Theme
        </span>
        : 
        This is a full block
      </div>
      <div
        className="ContentBlock "
      >
        <span
          className="contentHeading"
        >
          Theme
        </span>
        : 
        This is a full block
      </div>
      <style
        dangerouslySetInnerHTML={
          Object {
            "__html": ".ConditionDetails { display: block; width: 100% } ",
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|ConditionDetails/ContentBlock half block 1`] = `
<div
  className="visualization"
>
  <div
    className="ConditionDetails"
  >
    <div
      style={
        Object {
          "height": 50,
          "width": 300,
        }
      }
    >
      <div
        className="ContentBlock half"
      >
        <span
          className="contentHeading"
        >
          Theme
        </span>
        : 
        This is a half block
      </div>
      <div
        className="ContentBlock half"
      >
        <span
          className="contentHeading"
        >
          Theme
        </span>
        : 
        This is a half block
      </div>
      <style
        dangerouslySetInnerHTML={
          Object {
            "__html": ".ConditionDetails { display: block; width: 100% } ",
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|ConditionDetails/Details default 1`] = `
<div
  className="visualization"
>
  <div
    className="ConditionDetails"
  >
    <div
      className="Details"
    >
      <div
        className="filler"
      />
      <div
        className="content"
      >
        <h3>
          Selected Condition Feature
        </h3>
        <div
          className="ContentBlock "
        >
          <span
            className="contentHeading"
          >
            Theme
          </span>
          : 
          <span>
            Environmental Protection
          </span>
        </div>
        <div
          className="ContentBlock "
        >
          <span
            className="contentHeading"
          >
            Instrument
          </span>
          : 
          <span>
            Construction
          </span>
        </div>
        <div
          className="ContentBlock "
        >
          <span
            className="contentHeading"
          >
            Phase
          </span>
          : 
          <span>
            During Construction Phase
          </span>
        </div>
        <div
          className="ContentBlock "
        >
          <span
            className="contentHeading"
          >
            Type
          </span>
          : 
          <span>
            Standard
          </span>
        </div>
        <div
          className="ContentBlock "
        >
          <span
            className="contentHeading"
          >
            Status
          </span>
          : 
          <span>
            In Progress
          </span>
        </div>
        <div
          className="ContentBlock "
        >
          <span
            className="contentHeading"
          >
            Filing
          </span>
          : 
          <span>
            No Filing Required
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|ConditionDetails/ProjectHeader expandable 1`] = `
<div
  className="visualization"
>
  <div
    className="ConditionDetails"
  >
    <div
      className="ProjectHeader"
    >
      <h1>
        Selected Project: 
      </h1>
      <button
        className="openProject"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
        type="button"
      >
        <h2>
          Keystone XL
          <span
            className="asterisk"
          >
            *
          </span>
        </h2>
      </button>
      <button
        className="toggleExpand"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
        type="button"
      >
        <h1
          className="upperCase"
        >
          Less
        </h1>
        <svg
          className="arrow"
          viewBox="0 0 16 24"
        >
          <polyline
            points="4,4 12,12.5 4,20 4,4"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|ConditionDetails/ProjectHeader not expandable 1`] = `
<div
  className="visualization"
>
  <div
    className="ConditionDetails"
  >
    <div
      className="ProjectHeader"
    >
      <h1>
        Selected Project: 
      </h1>
      <button
        className="openProject"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
        type="button"
      >
        <h2>
          Keystone XL
          <span
            className="asterisk"
          >
            *
          </span>
        </h2>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|ConditionExplorer default 1`] = `
<div
  className="visualization"
>
  <svg
    className="ConditionExplorer"
    height="100%"
    style={
      Object {
        "border": "1px solid #000",
      }
    }
    width="100%"
  >
    <g
      className="keyword color0 textVisible"
    >
      <text
        style={
          Object {
            "fontFamily": "Sans Serif",
            "visibility": "hidden",
          }
        }
      >
        abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ -., 0123456789 ÙÛÜŸ€ÀÂÆÇÉÈÊËÏÎÔŒ ùûüÿ€àâæçéèêëïîôœ
      </text>
      <text
        style={
          Object {
            "fontFamily": "Sans Serif",
            "visibility": "hidden",
          }
        }
      />
    </g>
  </svg>
</div>
`;

exports[`Storyshots Components|ConditionExplorer physics disabled 1`] = `
<div
  className="visualization"
>
  <svg
    className="ConditionExplorer"
    height="100%"
    style={
      Object {
        "border": "1px solid #000",
      }
    }
    width="100%"
  >
    <g
      className="keyword color0 textVisible"
    >
      <text
        style={
          Object {
            "fontFamily": "Sans Serif",
            "visibility": "hidden",
          }
        }
      >
        abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ -., 0123456789 ÙÛÜŸ€ÀÂÆÇÉÈÊËÏÎÔŒ ùûüÿ€àâæçéèêëïîôœ
      </text>
      <text
        style={
          Object {
            "fontFamily": "Sans Serif",
            "visibility": "hidden",
          }
        }
      />
    </g>
  </svg>
</div>
`;

exports[`Storyshots Components|ConditionExplorer/Fallback documentation 1`] = `
<div
  className="visualization"
>
  <div />
</div>
`;

exports[`Storyshots Components|ConditionExplorer/PhysicsVariant documentation 1`] = `
<div
  className="visualization"
>
  <div />
</div>
`;

exports[`Storyshots Components|Dropdown with interaction 1`] = `
<div
  className="visualization"
>
  <div
    className="Dropdown"
  >
    <select
      onChange={[Function]}
      value="theme"
    >
      <option
        value="theme"
      >
        Theme
      </option>
      <option
        value="instrument"
      >
        Instrument
      </option>
      <option
        value="phase"
      >
        Phase
      </option>
      <option
        value="type"
      >
        Type
      </option>
      <option
        value="status"
      >
        Status
      </option>
      <option
        value="filing"
      >
        Filing
      </option>
    </select>
  </div>
</div>
`;

exports[`Storyshots Components|FeatureDescription basic usage 1`] = `
<div
  className="visualization"
>
  <div
    aria-label="theme description"
    className="feature-description"
    role="document"
  >
    <h1>
      Theme
    </h1>
    <p>
      Subject experts at the NEB are assigned to conditions that relate to specific sub-fields (e.g. finance, environment, safety). They also track compliance. These sub-fields are called Themes here.
    </p>
  </div>
</div>
`;

exports[`Storyshots Components|FeatureFlag default 1`] = `
<div
  className="visualization"
>
  <div
    className="FeatureFlag"
  >
    <div
      className="Bar"
      style={
        Object {
          "backgroundColor": "rgb(133, 28, 133)",
          "width": "3px",
        }
      }
      title="Theme - Damage Prevention - 1"
    />
  </div>
</div>
`;

exports[`Storyshots Components|FeatureFlag with tip 1`] = `
<div
  className="visualization"
>
  <div
    className="FeatureFlag"
  >
    <div
      className="Bar"
      style={
        Object {
          "backgroundColor": "rgb(221, 10, 10)",
          "width": "30px",
        }
      }
      title="Theme - Security - 20"
    />
    <div
      className="FlagTip"
      style={
        Object {
          "borderLeftColor": "rgb(221, 10, 10)",
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots Components|FeatureFlag without tip 1`] = `
<div
  className="visualization"
>
  <div
    className="FeatureFlag"
  >
    <div
      className="Bar"
      style={
        Object {
          "backgroundColor": "rgb(247, 193, 97)",
          "width": "30px",
        }
      }
      title="Theme - Financial - 10"
    />
  </div>
</div>
`;

exports[`Storyshots Components|FeatureTypesDescription default 1`] = `
<div
  className="visualization"
>
  <div
    className="FeatureTypesDescription"
  >
    <h4
      data-heading="ADMINISTRATIVE"
    >
      Administrative
    </h4>
    <p>
      <span>
        types of conditions that ensure filings are made.
      </span>
    </p>
    <h4
      data-heading="DAMAGE_PREVENTION"
    >
      Damage Prevention
    </h4>
    <p>
      <span>
        types of conditions that ensure reduction and prevention of damage.
      </span>
    </p>
    <h4
      data-heading="EMERGENCY_MANAGEMENT"
    >
      Emergency Management
    </h4>
    <p>
      <span>
        types of conditions that ensure appropriate measures are in place and updated, in case of an emergency.
      </span>
    </p>
    <h4
      data-heading="ENFORCEMENT"
    >
      Enforcement
    </h4>
    <p>
      <span>
        types of conditions that provide NEB officers with tools to ensure conditions are being fulfilled.
      </span>
    </p>
    <h4
      data-heading="ENVIRONMENTAL_PROTECTION"
    >
      Environmental Protection
    </h4>
    <p>
      <span>
        types of conditions that ensure that risk to the environment is minimized, monitored, and mitigated.
      </span>
    </p>
    <h4
      data-heading="FINANCIAL"
    >
      Financial
    </h4>
    <p>
      <span>
        types of conditions that ensure a company’s financial resposibilities are met.
      </span>
    </p>
    <h4
      data-heading="INTEGRITY_MANAGEMENT"
    >
      Integrity Management
    </h4>
    <p>
      <span>
        types of conditions that ensure that projects are designed, built and upkept in order to prevent toxic spills and emissions escape.
      </span>
    </p>
    <h4
      data-heading="MANAGEMENT_SYSTEM"
    >
      Management System
    </h4>
    <p>
      <span>
        types of conditions that apply when a project is transeferred to another company. Ensures all Management systems are in place and the new company knows its requirements.
      </span>
    </p>
    <h4
      data-heading="SAFETY_MANAGEMENT"
    >
      Safety Management
    </h4>
    <p>
      <span>
        types of conditions that ensure that work on a project is safe for workers and affected individuals and communities.
      </span>
    </p>
    <h4
      data-heading="SECURITY"
    >
      Security
    </h4>
    <p>
      <span>
        types of conditions that ensure that project facilities are monitored and secured.
      </span>
    </p>
    <h4
      data-heading="SOCIO_ECONOMIC"
    >
      Socio-Economic
    </h4>
    <p>
      <span>
        types of conditions that ensure that the concerns of affected communities and indigenous groups (e.g.traditional land use investigations, noise assesssments, etc).
      </span>
    </p>
    <h4
      data-heading="STANDARD_CONDITION"
    >
      Standard Condition
    </h4>
    <p>
      <span>
        types of conditions which clearly state the compliance objective to be met by the company; promote due diligence by the Company, are enforceable by NEB compliance staff.
      </span>
    </p>
    <h4
      data-heading="SUNSET_CLAUSE"
    >
      Sunset Clause
    </h4>
    <p>
      <span>
        types of conditions that ensure that projects/phases begin in a specific period of time.
      </span>
    </p>
  </div>
</div>
`;

exports[`Storyshots Components|FeatureTypesDescription instrument types 1`] = `
<div
  className="visualization"
>
  <div
    className="FeatureTypesDescription"
  >
    <h4
      data-heading="ROUTING"
    >
      Routing
    </h4>
    <p>
      <span
        style={
          Object {
            "color": "rgb(14, 43, 140)",
          }
        }
      >
        Missing
        :
      </span>
      <span>
         description
      </span>
    </p>
    <h4
      data-heading="CONSTRUCTION"
    >
      Construction
    </h4>
    <p>
      <span
        style={
          Object {
            "color": "rgb(39, 165, 249)",
          }
        }
      >
        Missing
        :
      </span>
      <span>
         description
      </span>
    </p>
    <h4
      data-heading="ABANDONMENT"
    >
      Abandonment
    </h4>
    <p>
      <span
        style={
          Object {
            "color": "rgb(22, 78, 248)",
          }
        }
      >
        Missing
        :
      </span>
      <span>
         description
      </span>
    </p>
    <h4
      data-heading="OPENING"
    >
      Opening
    </h4>
    <p>
      <span
        style={
          Object {
            "color": "rgb(22, 78, 248)",
          }
        }
      >
        Missing
        :
      </span>
      <span>
         description
      </span>
    </p>
    <h4
      data-heading="MISC"
    >
      Misc.
    </h4>
    <p>
      <span
        style={
          Object {
            "color": "rgb(212, 169, 42)",
          }
        }
      >
        Missing
        :
      </span>
      <span>
         description
      </span>
    </p>
    <h4
      data-heading="SAFETY"
    >
      Safety
    </h4>
    <p>
      <span
        style={
          Object {
            "color": "rgb(201, 4, 194)",
          }
        }
      >
        Missing
        :
      </span>
      <span>
         description
      </span>
    </p>
    <h4
      data-heading="TARIFFS"
    >
      Tariffs
    </h4>
    <p>
      <span
        style={
          Object {
            "color": "rgb(195, 230, 179)",
          }
        }
      >
        Missing
        :
      </span>
      <span>
         description
      </span>
    </p>
  </div>
</div>
`;

exports[`Storyshots Components|FeaturesLegend Location Legend 1`] = `
<div
  className="visualization"
>
  <div
    className="FeaturesLegend"
  >
    <div
      className="LegendItem disabled"
    >
      <div
        className="color"
        style={
          Object {
            "backgroundColor": "rgb(221, 10, 10)",
          }
        }
      />
      <div
        className="text"
      >
        <span>
          Security
        </span>
      </div>
    </div>
    <div
      className="LegendItem"
    >
      <div
        className="color"
        style={
          Object {
            "backgroundColor": "rgb(36, 91, 64)",
          }
        }
      />
      <div
        className="text"
      >
        <span>
          Management System
        </span>
      </div>
    </div>
    <div
      className="LegendItem"
    >
      <div
        className="color"
        style={
          Object {
            "backgroundColor": "rgb(247, 193, 97)",
          }
        }
      />
      <div
        className="text"
      >
        <span>
          Financial
        </span>
      </div>
    </div>
    <div
      className="LegendItem"
    >
      <div
        className="color"
        style={
          Object {
            "backgroundColor": "rgb(133, 28, 133)",
          }
        }
      />
      <div
        className="text"
      >
        <span>
          Damage Prevention
        </span>
      </div>
    </div>
    <div
      className="LegendItem"
    >
      <div
        className="color"
        style={
          Object {
            "backgroundColor": "rgb(153, 153, 255)",
          }
        }
      />
      <div
        className="text"
      >
        <span>
          Socio-Economic
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|FeaturesLegend Project Legend 1`] = `
<div
  className="visualization"
>
  <div
    className="FeaturesLegend"
  >
    <div
      className="LegendItem disabled"
    >
      <div
        className="color"
        style={
          Object {
            "backgroundColor": "rgb(221, 10, 10)",
          }
        }
      />
      <div
        className="text"
      >
        <span>
          Security
        </span>
      </div>
    </div>
    <div
      className="LegendItem"
    >
      <div
        className="color"
        style={
          Object {
            "backgroundColor": "rgb(36, 91, 64)",
          }
        }
      />
      <div
        className="text"
      >
        <span>
          Management System
        </span>
      </div>
    </div>
    <div
      className="LegendItem"
    >
      <div
        className="color"
        style={
          Object {
            "backgroundColor": "rgb(247, 193, 97)",
          }
        }
      />
      <div
        className="text"
      >
        <span>
          Financial
        </span>
      </div>
    </div>
    <div
      className="LegendItem"
    >
      <div
        className="color"
        style={
          Object {
            "backgroundColor": "rgb(133, 28, 133)",
          }
        }
      />
      <div
        className="text"
      >
        <span>
          Damage Prevention
        </span>
      </div>
    </div>
    <div
      className="LegendItem"
    >
      <div
        className="color"
        style={
          Object {
            "backgroundColor": "rgb(153, 153, 255)",
          }
        }
      />
      <div
        className="text"
      >
        <span>
          Socio-Economic
        </span>
      </div>
    </div>
    <div
      className="Footer"
    >
      <h3
        className="Title"
      >
        <span>
          Number of Conditions
        </span>
      </h3>
      <div
        className="ChartLegend"
      >
        <div
          className="FeatureFlag"
        >
          <div
            className="Bar"
            style={
              Object {
                "backgroundColor": "transparent",
                "width": "0px",
              }
            }
            title="Zero Conditions"
          />
        </div>
        <div
          className="FlagDesc"
        >
          0
        </div>
        <div
          className="FeatureFlag"
        >
          <div
            className="Bar"
            style={
              Object {
                "backgroundColor": "transparent",
                "width": "30px",
              }
            }
            title="Ten Conditions"
          />
        </div>
        <div
          className="FlagDesc"
        >
          10
        </div>
        <div
          className="FeatureFlag"
        >
          <div
            className="Bar"
            style={
              Object {
                "backgroundColor": "transparent",
                "width": "30px",
              }
            }
            title="Greater than Ten Conditions"
          />
          <div
            className="FlagTip"
            style={
              Object {
                "borderLeftColor": "transparent",
              }
            }
          />
        </div>
        <div
          className="FlagDesc"
        >
           &gt;10 
        </div>
      </div>
      <div
        className="CircleContainer ConditionsIcon"
        style={
          Object {
            "height": 24,
            "width": 24,
          }
        }
      >
        <div>
          #
        </div>
      </div>
      <div
        className="ConditionsDesc"
      >
        <span>
          Total Number of Conditions for Project
        </span>
      </div>
      <div
        className="AssociatedComp"
      >
        <h3
          className="Asterisk"
        >
          *
        </h3>
        <div
          className="AssociatedDesc"
        >
          <span>
            Associated Companies
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|FeaturesLegend/LegendItem default 1`] = `
<div
  className="visualization"
>
  <div
    className="FeaturesLegend"
  >
    <div
      className="LegendItem"
    >
      <div
        className="color"
        style={
          Object {
            "backgroundColor": "rgb(221, 10, 10)",
          }
        }
      />
      <div
        className="text"
      >
        <span>
          Security
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|FeaturesMenu basic usage 1`] = `
<div
  className="visualization"
>
  <div
    className="FeaturesMenu"
  >
    <span
      className="title"
    >
      Trends & Definitions
    </span>
    <div
      className="List guideLine"
      onWheel={[Function]}
    >
      <ul>
        <li
          className="List-Item selected"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <span>
              Instrument
            </span>
          </div>
          <div
            className="CircleContainer arrowNext"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
            tabIndex={0}
          >
            <div>
              <div
                className="Icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-angle-down fa-w-10 fa-1x "
                  color=""
                  data-icon="angle-down"
                  data-prefix="fas"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <span>
              Theme
            </span>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <span>
              Phase
            </span>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <span>
              Status
            </span>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <span>
              Type
            </span>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <span>
              Filing
            </span>
          </div>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|FeaturesMenu drop down 1`] = `
<div
  className="visualization"
>
  <div
    className="FeaturesMenu dropDown"
  >
    <span
      className="title"
    >
      Feature
    </span>
    <div
      className="Dropdown"
    >
      <select
        onChange={[Function]}
        value="instrument"
      >
        <option
          value="instrument"
        >
          Instrument
        </option>
        <option
          value="theme"
        >
          Theme
        </option>
        <option
          value="phase"
        >
          Phase
        </option>
        <option
          value="status"
        >
          Status
        </option>
        <option
          value="type"
        >
          Type
        </option>
        <option
          value="filing"
        >
          Filing
        </option>
      </select>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|Icon default icon 1`] = `
<div
  className="visualization"
>
  <div
    className="Icon"
  >
    <svg
      aria-hidden="true"
      className="svg-inline--fa fa-angle-right fa-w-8 "
      color=""
      data-icon="angle-right"
      data-prefix="fas"
      role="img"
      style={Object {}}
      viewBox="0 0 256 512"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
        fill="currentColor"
        style={Object {}}
      />
    </svg>
  </div>
</div>
`;

exports[`Storyshots Components|Icon with props: color 1`] = `
<div
  className="visualization"
>
  <div
    className="Icon"
  >
    <svg
      aria-hidden="true"
      className="svg-inline--fa fa-angle-right fa-w-8 "
      color="blue"
      data-icon="angle-right"
      data-prefix="fas"
      role="img"
      style={Object {}}
      viewBox="0 0 256 512"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
        fill="currentColor"
        style={Object {}}
      />
    </svg>
  </div>
</div>
`;

exports[`Storyshots Components|Icon with props: prefix 1`] = `
<div
  className="visualization"
>
  <div
    className="Icon"
  >
    <svg
      aria-hidden="true"
      className="svg-inline--fa fa-twitter fa-w-16 "
      color=""
      data-icon="twitter"
      data-prefix="fab"
      role="img"
      style={Object {}}
      viewBox="0 0 512 512"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"
        fill="currentColor"
        style={Object {}}
      />
    </svg>
  </div>
</div>
`;

exports[`Storyshots Components|Icon with props: size 1`] = `
<div
  className="visualization"
>
  <div
    className="Icon"
  >
    <svg
      aria-hidden="true"
      className="svg-inline--fa fa-angle-right fa-w-8 fa-10x "
      color=""
      data-icon="angle-right"
      data-prefix="fas"
      role="img"
      style={Object {}}
      viewBox="0 0 256 512"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
        fill="currentColor"
        style={Object {}}
      />
    </svg>
  </div>
</div>
`;

exports[`Storyshots Components|InstrumentsLegend basic usage 1`] = `
<div
  className="visualization"
>
  <div
    className="InstrumentsLegend"
  >
    <span
      className="headers"
    >
      <span
        className="indicator"
      >
        Oil
      </span>
      <span
        className="indicator"
      >
        Gas
      </span>
      <span
        className="indicator"
      >
        Power
      </span>
      <span
        className="indicator"
      >
        Not Specified
      </span>
    </span>
    <div
      className="List guideLine"
      onWheel={[Function]}
    >
      <ul>
        <li
          className="List-Item selected"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="indicators"
              />
              <span>
                All Instruments
              </span>
            </div>
          </div>
          <div
            className="CircleContainer arrowNext"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
            tabIndex={0}
          >
            <div>
              <div
                className="Icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-angle-down fa-w-10 fa-1x "
                  color=""
                  data-icon="angle-down"
                  data-prefix="fas"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="indicators"
              >
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(14, 43, 140)",
                    }
                  }
                />
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(14, 43, 140)",
                    }
                  }
                />
                <div
                  className="indicator"
                  style={Object {}}
                />
                <div
                  className="indicator"
                  style={Object {}}
                />
              </span>
              <span>
                Routing
              </span>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="indicators"
              >
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(39, 165, 249)",
                    }
                  }
                />
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(39, 165, 249)",
                    }
                  }
                />
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(39, 165, 249)",
                    }
                  }
                />
                <div
                  className="indicator"
                  style={Object {}}
                />
              </span>
              <span>
                Construction
              </span>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="indicators"
              >
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(22, 78, 248)",
                    }
                  }
                />
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(22, 78, 248)",
                    }
                  }
                />
                <div
                  className="indicator"
                  style={Object {}}
                />
                <div
                  className="indicator"
                  style={Object {}}
                />
              </span>
              <span>
                Opening
              </span>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="indicators"
              >
                <div
                  className="indicator"
                  style={Object {}}
                />
                <div
                  className="indicator"
                  style={Object {}}
                />
                <div
                  className="indicator"
                  style={Object {}}
                />
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(212, 169, 42)",
                    }
                  }
                />
              </span>
              <span>
                Misc.
              </span>
            </div>
          </div>
        </li>
      </ul>
    </div>
    <div
      className="BubbleLegend BubbleLegend"
    >
      <span>
        Number of Conditions
      </span>
      <svg
        viewBox="-200 0 260 300"
      >
        <g
          transform="translate(0, 0)"
        >
          <ellipse
            className="Ellipse"
            cx={-3}
            cy="3"
            rx={3}
            ry={3}
            transform="translate(0, 23)"
          />
          <text
            className="Text"
            x="30"
            y={30}
          >
            10
          </text>
        </g>
        <g
          transform="translate(0, 20)"
        >
          <ellipse
            className="Ellipse"
            cx={-6.25}
            cy="3"
            rx={6.25}
            ry={4}
            transform="translate(0, 23)"
          />
          <text
            className="Text"
            x="30"
            y={30}
          >
            100
          </text>
        </g>
        <g
          transform="translate(0, 40)"
        >
          <ellipse
            className="Ellipse"
            cx={-62.5}
            cy="3"
            rx={62.5}
            ry={5}
            transform="translate(0, 23)"
          />
          <text
            className="Text"
            x="30"
            y={30}
          >
            1000
          </text>
        </g>
        <g
          transform="translate(0, 60)"
        >
          <ellipse
            className="Ellipse"
            cx={-100}
            cy="3"
            rx={100}
            ry={6}
            transform="translate(0, 23)"
          />
          <text
            className="Text"
            x="30"
            y={30}
          >
            1600
          </text>
        </g>
      </svg>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|InstrumentsLegend selected 1`] = `
<div
  className="visualization"
>
  <div
    className="InstrumentsLegend"
  >
    <span
      className="headers"
    >
      <span
        className="indicator"
      >
        Oil
      </span>
      <span
        className="indicator"
      >
        Gas
      </span>
      <span
        className="indicator"
      >
        Power
      </span>
      <span
        className="indicator"
      >
        Not Specified
      </span>
    </span>
    <div
      className="List guideLine"
      onWheel={[Function]}
    >
      <ul>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="indicators"
              />
              <span>
                All Instruments
              </span>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="indicators"
              >
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(14, 43, 140)",
                    }
                  }
                />
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(14, 43, 140)",
                    }
                  }
                />
                <div
                  className="indicator"
                  style={Object {}}
                />
                <div
                  className="indicator"
                  style={Object {}}
                />
              </span>
              <span>
                Routing
              </span>
            </div>
          </div>
        </li>
        <li
          className="List-Item selected"
        >
          <div
            className="CircleContainer arrowPrevious"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
            tabIndex={0}
          >
            <div>
              <div
                className="Icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-angle-up fa-w-10 fa-1x "
                  color=""
                  data-icon="angle-up"
                  data-prefix="fas"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </div>
          </div>
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="indicators"
              >
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(39, 165, 249)",
                    }
                  }
                />
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(39, 165, 249)",
                    }
                  }
                />
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(39, 165, 249)",
                    }
                  }
                />
                <div
                  className="indicator"
                  style={Object {}}
                />
              </span>
              <span>
                Construction
              </span>
            </div>
          </div>
          <div
            className="CircleContainer arrowNext"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
            tabIndex={0}
          >
            <div>
              <div
                className="Icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-angle-down fa-w-10 fa-1x "
                  color=""
                  data-icon="angle-down"
                  data-prefix="fas"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="indicators"
              >
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(22, 78, 248)",
                    }
                  }
                />
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(22, 78, 248)",
                    }
                  }
                />
                <div
                  className="indicator"
                  style={Object {}}
                />
                <div
                  className="indicator"
                  style={Object {}}
                />
              </span>
              <span>
                Opening
              </span>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="indicators"
              >
                <div
                  className="indicator"
                  style={Object {}}
                />
                <div
                  className="indicator"
                  style={Object {}}
                />
                <div
                  className="indicator"
                  style={Object {}}
                />
                <div
                  className="indicator"
                  style={
                    Object {
                      "backgroundColor": "rgb(212, 169, 42)",
                    }
                  }
                />
              </span>
              <span>
                Misc.
              </span>
            </div>
          </div>
        </li>
      </ul>
    </div>
    <div
      className="BubbleLegend BubbleLegend"
    >
      <span>
        Number of Conditions
      </span>
      <svg
        viewBox="-200 0 260 300"
      >
        <g
          transform="translate(0, 0)"
        >
          <ellipse
            className="Ellipse"
            cx={-3}
            cy="3"
            rx={3}
            ry={3}
            transform="translate(0, 23)"
          />
          <text
            className="Text"
            x="30"
            y={30}
          >
            10
          </text>
        </g>
        <g
          transform="translate(0, 20)"
        >
          <ellipse
            className="Ellipse"
            cx={-6.25}
            cy="3"
            rx={6.25}
            ry={4}
            transform="translate(0, 23)"
          />
          <text
            className="Text"
            x="30"
            y={30}
          >
            100
          </text>
        </g>
        <g
          transform="translate(0, 40)"
        >
          <ellipse
            className="Ellipse"
            cx={-62.5}
            cy="3"
            rx={62.5}
            ry={5}
            transform="translate(0, 23)"
          />
          <text
            className="Text"
            x="30"
            y={30}
          >
            1000
          </text>
        </g>
        <g
          transform="translate(0, 60)"
        >
          <ellipse
            className="Ellipse"
            cx={-100}
            cy="3"
            rx={100}
            ry={6}
            transform="translate(0, 23)"
          />
          <text
            className="Text"
            x="30"
            y={30}
          >
            1600
          </text>
        </g>
      </svg>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|InstrumentsLegend/BubbleLegend default 1`] = `
<div
  className="visualization"
>
  <div
    className="InstrumentsLegend"
  >
    <div
      className="BubbleLegend BubbleLegend"
    >
      <span>
        Number of Conditions
      </span>
      <svg
        viewBox="-200 0 260 300"
      >
        <g
          transform="translate(0, 0)"
        >
          <ellipse
            className="Ellipse"
            cx={-3}
            cy="3"
            rx={3}
            ry={3}
            transform="translate(0, 23)"
          />
          <text
            className="Text"
            x="30"
            y={30}
          >
            10
          </text>
        </g>
        <g
          transform="translate(0, 20)"
        >
          <ellipse
            className="Ellipse"
            cx={-6.25}
            cy="3"
            rx={6.25}
            ry={4}
            transform="translate(0, 23)"
          />
          <text
            className="Text"
            x="30"
            y={30}
          >
            100
          </text>
        </g>
        <g
          transform="translate(0, 40)"
        >
          <ellipse
            className="Ellipse"
            cx={-62.5}
            cy="3"
            rx={62.5}
            ry={5}
            transform="translate(0, 23)"
          />
          <text
            className="Text"
            x="30"
            y={30}
          >
            1000
          </text>
        </g>
        <g
          transform="translate(0, 60)"
        >
          <ellipse
            className="Ellipse"
            cx={-100}
            cy="3"
            rx={100}
            ry={6}
            transform="translate(0, 23)"
          />
          <text
            className="Text"
            x="30"
            y={30}
          >
            1600
          </text>
        </g>
      </svg>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|InstrumentsLegend/LegendItem all 1`] = `
<div
  className="visualization"
>
  <div
    className="InstrumentsLegend"
  >
    <div
      className="LegendItem"
    >
      <span
        className="indicators"
      />
      <span>
        All Instruments
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|InstrumentsLegend/LegendItem basic usage 1`] = `
<div
  className="visualization"
>
  <div
    className="InstrumentsLegend"
  >
    <div
      className="LegendItem"
    >
      <span
        className="indicators"
      >
        <div
          className="indicator"
          style={
            Object {
              "backgroundColor": "rgb(14, 43, 140)",
            }
          }
        />
        <div
          className="indicator"
          style={
            Object {
              "backgroundColor": "rgb(14, 43, 140)",
            }
          }
        />
        <div
          className="indicator"
          style={Object {}}
        />
        <div
          className="indicator"
          style={
            Object {
              "backgroundColor": "rgb(14, 43, 140)",
            }
          }
        />
      </span>
      <span>
        Routing
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|List basic usage 1`] = `
<div
  className="visualization"
>
  <div
    className="List"
    onWheel={[Function]}
  >
    <ul>
      <li
        className="List-Item selected"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          Item 1
        </div>
        <div
          className="CircleContainer arrowNext"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          style={
            Object {
              "height": 24,
              "width": 24,
            }
          }
          tabIndex={0}
        >
          <div>
            <div
              className="Icon"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-angle-down fa-w-10 fa-1x "
                color=""
                data-icon="angle-down"
                data-prefix="fas"
                role="img"
                style={Object {}}
                viewBox="0 0 320 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
        </div>
      </li>
      <li
        className="List-Item"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          Item 2
        </div>
      </li>
      <li
        className="List-Item"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          Item 3
        </div>
      </li>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Components|List component items 1`] = `
<div
  className="visualization"
>
  <div
    className="List"
    onWheel={[Function]}
  >
    <ul>
      <li
        className="List-Item selected"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <strong>
            Strong
          </strong>
        </div>
        <div
          className="CircleContainer arrowNext"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          style={
            Object {
              "height": 24,
              "width": 24,
            }
          }
          tabIndex={0}
        >
          <div>
            <div
              className="Icon"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-angle-down fa-w-10 fa-1x "
                color=""
                data-icon="angle-down"
                data-prefix="fas"
                role="img"
                style={Object {}}
                viewBox="0 0 320 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
        </div>
      </li>
      <li
        className="List-Item"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <em>
            Emphasis
          </em>
        </div>
      </li>
      <li
        className="List-Item"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <div
            style={
              Object {
                "background": "red",
                "height": 50,
                "width": 50,
              }
            }
          />
        </div>
      </li>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Components|List guide line 1`] = `
<div
  className="visualization"
>
  <div
    className="List guideLine"
    onWheel={[Function]}
  >
    <ul>
      <li
        className="List-Item selected"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          Item 1
        </div>
        <div
          className="CircleContainer arrowNext"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          style={
            Object {
              "height": 24,
              "width": 24,
            }
          }
          tabIndex={0}
        >
          <div>
            <div
              className="Icon"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-angle-down fa-w-10 fa-1x "
                color=""
                data-icon="angle-down"
                data-prefix="fas"
                role="img"
                style={Object {}}
                viewBox="0 0 320 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
        </div>
      </li>
      <li
        className="List-Item"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          Item 2
        </div>
      </li>
      <li
        className="List-Item"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          Item 3
        </div>
      </li>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Components|List horizontal 1`] = `
<div
  className="visualization"
>
  <div
    className="List horizontal"
    onWheel={[Function]}
  >
    <ul>
      <li
        className="List-Item selected"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          Item 1
        </div>
        <div
          className="CircleContainer arrowNext"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          style={
            Object {
              "height": 24,
              "width": 24,
            }
          }
          tabIndex={0}
        >
          <div>
            <div
              className="Icon"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-angle-right fa-w-8 fa-1x "
                color=""
                data-icon="angle-right"
                data-prefix="fas"
                role="img"
                style={Object {}}
                viewBox="0 0 256 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
        </div>
      </li>
      <li
        className="List-Item"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          Item 2
        </div>
      </li>
      <li
        className="List-Item"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          Item 3
        </div>
      </li>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Components|List itemInteractions 1`] = `
<div
  className="visualization"
>
  <div
    className="List"
    onWheel={[Function]}
  >
    <ul>
      <li
        className="List-Item selected"
      >
        <div
          className="List-Item-Content"
        >
          Item 1
        </div>
        <div
          className="CircleContainer arrowNext"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          style={
            Object {
              "height": 24,
              "width": 24,
            }
          }
          tabIndex={0}
        >
          <div>
            <div
              className="Icon"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-angle-down fa-w-10 fa-1x "
                color=""
                data-icon="angle-down"
                data-prefix="fas"
                role="img"
                style={Object {}}
                viewBox="0 0 320 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
        </div>
      </li>
      <li
        className="List-Item"
      >
        <div
          className="List-Item-Content"
        >
          Item 2
        </div>
      </li>
      <li
        className="List-Item"
      >
        <div
          className="List-Item-Content"
        >
          Item 3
        </div>
      </li>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Components|List selected 1`] = `
<div
  className="visualization"
>
  <div
    className="List"
    onWheel={[Function]}
  >
    <ul>
      <li
        className="List-Item selected"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          Item 1
        </div>
        <div
          className="CircleContainer arrowNext"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          style={
            Object {
              "height": 24,
              "width": 24,
            }
          }
          tabIndex={0}
        >
          <div>
            <div
              className="Icon"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-angle-down fa-w-10 fa-1x "
                color=""
                data-icon="angle-down"
                data-prefix="fas"
                role="img"
                style={Object {}}
                viewBox="0 0 320 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
        </div>
      </li>
      <li
        className="List-Item"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          Item 2
        </div>
      </li>
      <li
        className="List-Item"
      >
        <div
          className="List-Item-Content"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          Item 3
        </div>
      </li>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Components|LocationWheelMinimap default 1`] = `
<div
  className="visualization"
/>
`;

exports[`Storyshots Components|MainInfoBar default 1`] = `
<div
  className="visualization"
>
  <div
    className="MainInfoBar"
  >
    <hr />
    <button
      className="TextButton "
      id="About"
      onClick={[Function]}
      type="button"
    >
      About
    </button>
    <button
      className="TextButton "
      id="Methodology"
      onClick={[Function]}
      type="button"
    >
      Methodology
    </button>
    <button
      className="TextButton "
      id="Downloads"
      onClick={[Function]}
      type="button"
    >
      Downloads
    </button>
    <br />
    <div
      className="TextBox"
    />
    <br />
    <div
      className="ShareIcons"
    >
      <div
        className="ShareIcon"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
      >
        <div
          className="CircleContainer"
          style={
            Object {
              "height": 20,
              "width": 20,
            }
          }
        >
          <div>
            <div
              className="Icon"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-envelope fa-w-16 fa-1x "
                color=""
                data-icon="envelope"
                data-prefix="fas"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
        </div>
      </div>
      <div
        className="ShareIcon"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
      >
        <div
          className="CircleContainer"
          style={
            Object {
              "height": 20,
              "width": 20,
            }
          }
        >
          <div>
            <div
              className="Icon"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-twitter fa-w-16 fa-1x "
                color=""
                data-icon="twitter"
                data-prefix="fab"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
        </div>
      </div>
      <div
        className="ShareIcon"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
      >
        <div
          className="CircleContainer"
          style={
            Object {
              "height": 20,
              "width": 20,
            }
          }
        >
          <div>
            <div
              className="Icon"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-facebook fa-w-14 fa-1x "
                color=""
                data-icon="facebook"
                data-prefix="fab"
                role="img"
                style={Object {}}
                viewBox="0 0 448 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M448 56.7v398.5c0 13.7-11.1 24.7-24.7 24.7H309.1V306.5h58.2l8.7-67.6h-67v-43.2c0-19.6 5.4-32.9 33.5-32.9h35.8v-60.5c-6.2-.8-27.4-2.7-52.2-2.7-51.6 0-87 31.5-87 89.4v49.9h-58.4v67.6h58.4V480H24.7C11.1 480 0 468.9 0 455.3V56.7C0 43.1 11.1 32 24.7 32h398.5c13.7 0 24.8 11.1 24.8 24.7z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
        </div>
      </div>
      <div
        className="ShareIcon"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
      >
        <div
          className="CircleContainer"
          style={
            Object {
              "height": 20,
              "width": 20,
            }
          }
        >
          <div>
            <div
              className="Icon"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-linkedin fa-w-14 fa-1x "
                color=""
                data-icon="linkedin"
                data-prefix="fab"
                role="img"
                style={Object {}}
                viewBox="0 0 448 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
    <br />
  </div>
</div>
`;

exports[`Storyshots Components|MainInfoBar/DownloadsTextBox Basic view 1`] = `
<div
  className="visualization"
>
  <div
    className="MainInfoBar"
  >
    <div
      className="DownloadsTextBox"
    >
      <svg
        viewBox="0 0 300 50"
      >
        <g
          icon="file-download"
        >
          <path
            d="M2.9,13.3s-.4-.3,0-.3H4.5V9.2c0-.1.1-.2.3-.2H7c.1,0,.2.1.3.2v3.7H8.8c.5,0,.2.3.2.3L6.1,16Z"
            fill="#666"
          />
          <polygon
            fill="none"
            points="0 0 0 11.6 3.4 11.6 3.4 6.7 8.3 6.7 8.3 11.6 11.6 11.6 11.6 0 0 0"
          />
          <line
            strokeMiterlimit="10"
            x1="0.5"
            x2="11.2"
            y1="11.1"
            y2="11.1"
          />
          <rect
            fill="none"
            height="11.6"
            width="11.6"
          />
          <path
            d="M7.8,1l2.8,2.9v6.8H1V1.1H7.8M8.2,0H0V11.6H11.6V3.4L8.2,0Z"
            fill="#666"
          />
          <line
            stroke="#666"
            strokeWidth="0.75p"
            x1="7.7"
            x2="7.7"
            y1="0.4"
            y2="4"
          />
          <line
            stroke="#666"
            strokeWidth="0.75px"
            x1="11.2"
            x2="7.3"
            y1="4"
            y2="4"
          />
        </g>
      </svg>
      <h1>
        Download Data
      </h1>
      <p>
        Click
        <button
          onClick={[Function]}
          type="button"
        >
          here
        </button>
        to download the dataset in Microsoft Excel format (.xlsx)
      </p>
      <svg
        viewBox="0 0 300 50"
      >
        <g
          icon="image-download"
        >
          <rect
            fill="#666"
            height="11.6"
            width="11.6"
          />
          <polygon
            fill="#666"
            points="0 0 0 11.6 3.4 11.6 3.4 6.7 8.3 6.7 8.3 11.6 11.6 11.6 11.6 0 0 0"
          />
          <polygon
            fill="#e6e6e6"
            points="11.1 11.6 8.2 4.8 6.8 5.8 4.8 1.8 0.5 11.6 11.1 11.6"
          />
          <path
            d="M2.9,13.3s-.4-.3,0-.3H4.5V9.1c0-.1.1-.2.3-.2H7c.1,0,.2.1.3.2v3.7H8.8c.5,0,.2.3.2.3L5.9,16Z"
            fill="#666"
          />
          <line
            fill="none"
            stroke="#666"
            strokeMiterlimit={10}
            x1="0.5"
            x2="11.2"
            y1="11.1"
            y2="11.1"
          />
          <circle
            cx="9.6"
            cy="2.4"
            fill="#e6e6e6"
            r="1"
          />
        </g>
      </svg>
      <h1>
        Download Image
      </h1>
      <p>
        Click
        <button
          onClick={[Function]}
          type="button"
        >
          here
        </button>
        to download a screenshot of your current view.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|MainInfoBar/MethodologyTextBox Basic view 1`] = `
<div
  className="visualization"
>
  <div
    className="MainInfoBar"
  >
    <div
      className="MethodologyTextBox"
    >
      <h1>
        Methodology
      </h1>
      <p>
        Click
        <a
          href="???"
          target="_blank"
        >
          here
        </a>
        to download a PDF file explaining our data collection methodology
      </p>
      <h1>
        Keywords
      </h1>
      <p>
        [Placeholder for an explanation of...]
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|Modal Data Download 1`] = `
<div
  className="visualization"
>
  <dialog
    className="Modal"
    onClose={[Function]}
    style={
      Object {
        "height": "600px",
        "width": "600px",
      }
    }
  >
    <div
      className="ModalContent"
    >
      <div
        className="header"
      >
        <span
          className="title"
        >
          <span>
            Data Download
          </span>
        </span>
        <svg
          className="closeIcon"
          focusable={true}
          height="20"
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
          version="1.1"
          width="20"
        >
          <line
            strokeLinecap="round"
            x1="0"
            x2="20"
            y1="20"
            y2="0"
          />
          <line
            strokeLinecap="round"
            x1="0"
            x2="20"
            y1="0"
            y2="20"
          />
        </svg>
      </div>
      <div
        className="content"
      >
        <div>
          data here 
        </div>
      </div>
      <div
        className="footer"
      />
    </div>
  </dialog>
</div>
`;

exports[`Storyshots Components|Modal Image Download 1`] = `
<div
  className="visualization"
>
  <dialog
    className="Modal"
    onClose={[Function]}
    style={
      Object {
        "height": "600px",
        "width": "600px",
      }
    }
  >
    <div
      className="ModalContent"
    >
      <div
        className="header"
      >
        <span
          className="title"
        >
          <span>
            Image Download
          </span>
        </span>
        <svg
          className="closeIcon"
          focusable={true}
          height="20"
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
          version="1.1"
          width="20"
        >
          <line
            strokeLinecap="round"
            x1="0"
            x2="20"
            y1="20"
            y2="0"
          />
          <line
            strokeLinecap="round"
            x1="0"
            x2="20"
            y1="0"
            y2="20"
          />
        </svg>
      </div>
      <div
        className="content"
      >
        <div>
           image here
        </div>
      </div>
      <div
        className="footer"
      >
        <button
          className="textButton"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
          type="button"
        >
          <span>
            Save Image
          </span>
        </button>
      </div>
    </div>
  </dialog>
</div>
`;

exports[`Storyshots Components|ProjectMenu Default Props 1`] = `
<div
  className="visualization"
>
  <div
    className="ProjectMenu"
  >
    <div
      className="EmptyListItems"
    />
    <div
      className="List horizontal"
      onWheel={[Function]}
    >
      <ul>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="ProjectChart "
            >
              <div
                className="ConditionPipe"
              >
                <div
                  className="CircleContainer ConditionCount"
                  style={
                    Object {
                      "height": 24,
                      "width": 24,
                    }
                  }
                >
                  <div>
                    29
                  </div>
                </div>
              </div>
              <div
                className="FlagWrapper"
              >
                <div
                  className="FeatureFlag"
                >
                  <div
                    className="Bar"
                    style={
                      Object {
                        "backgroundColor": "rgb(221, 10, 10)",
                        "width": "30px",
                      }
                    }
                    title="Theme - Security - 10"
                  />
                </div>
                <div
                  className="FeatureFlag"
                >
                  <div
                    className="Bar"
                    style={
                      Object {
                        "backgroundColor": "rgb(36, 91, 64)",
                        "width": "30px",
                      }
                    }
                    title="Theme - Management System - 19"
                  />
                  <div
                    className="FlagTip"
                    style={
                      Object {
                        "borderLeftColor": "rgb(36, 91, 64)",
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="ProjectName"
              >
                <p>
                  2. Section 21.(1) application
                </p>
              </div>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="ProjectChart "
            >
              <div
                className="ConditionPipe"
              >
                <div
                  className="CircleContainer ConditionCount"
                  style={
                    Object {
                      "height": 24,
                      "width": 24,
                    }
                  }
                >
                  <div>
                    33
                  </div>
                </div>
              </div>
              <div
                className="FlagWrapper"
              >
                <div
                  className="FeatureFlag"
                >
                  <div
                    className="Bar"
                    style={
                      Object {
                        "backgroundColor": "rgb(221, 10, 10)",
                        "width": "12px",
                      }
                    }
                    title="Theme - Security - 4"
                  />
                </div>
                <div
                  className="FeatureFlag"
                >
                  <div
                    className="Bar"
                    style={
                      Object {
                        "backgroundColor": "rgb(36, 91, 64)",
                        "width": "30px",
                      }
                    }
                    title="Theme - Management System - 29"
                  />
                  <div
                    className="FlagTip"
                    style={
                      Object {
                        "borderLeftColor": "rgb(36, 91, 64)",
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="ProjectName"
              >
                <p>
                  3. Section 21.(1) application
                </p>
              </div>
            </div>
          </div>
        </li>
        <li
          className="List-Item selected"
        >
          <div
            className="CircleContainer arrowPrevious"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
            tabIndex={0}
          >
            <div>
              <div
                className="Icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-angle-left fa-w-8 fa-1x "
                  color=""
                  data-icon="angle-left"
                  data-prefix="fas"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 256 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </div>
          </div>
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="ProjectChart selected"
            >
              <div
                className="ConditionPipe"
              >
                <div
                  className="CircleContainer ConditionCount"
                  style={
                    Object {
                      "height": 24,
                      "width": 24,
                    }
                  }
                >
                  <div>
                    28
                  </div>
                </div>
              </div>
              <div
                className="FlagWrapper"
              >
                <div
                  className="FeatureFlag"
                >
                  <div
                    className="Bar"
                    style={
                      Object {
                        "backgroundColor": "rgb(221, 10, 10)",
                        "width": "18px",
                      }
                    }
                    title="Theme - Security - 6"
                  />
                </div>
                <div
                  className="FeatureFlag"
                >
                  <div
                    className="Bar"
                    style={
                      Object {
                        "backgroundColor": "rgb(36, 91, 64)",
                        "width": "30px",
                      }
                    }
                    title="Theme - Management System - 22"
                  />
                  <div
                    className="FlagTip"
                    style={
                      Object {
                        "borderLeftColor": "rgb(36, 91, 64)",
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="ProjectName"
              />
            </div>
          </div>
          <div
            className="CircleContainer arrowNext"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
            tabIndex={0}
          >
            <div>
              <div
                className="Icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-angle-right fa-w-8 fa-1x "
                  color=""
                  data-icon="angle-right"
                  data-prefix="fas"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 256 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="ProjectChart "
            >
              <div
                className="ConditionPipe"
              >
                <div
                  className="CircleContainer ConditionCount"
                  style={
                    Object {
                      "height": 24,
                      "width": 24,
                    }
                  }
                >
                  <div>
                    5
                  </div>
                </div>
              </div>
              <div
                className="FlagWrapper"
              >
                <div
                  className="FeatureFlag"
                >
                  <div
                    className="Bar"
                    style={
                      Object {
                        "backgroundColor": "rgb(221, 10, 10)",
                        "width": "15px",
                      }
                    }
                    title="Theme - Security - 5"
                  />
                </div>
                <div
                  className="FeatureFlag"
                >
                  <div
                    className="Bar"
                    style={
                      Object {
                        "backgroundColor": "rgb(36, 91, 64)",
                        "width": "0px",
                      }
                    }
                    title="Theme - Management System - 0"
                  />
                </div>
              </div>
              <div
                className="ProjectName"
              >
                <p>
                  5. Section 21.(1) application
                </p>
              </div>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="ProjectChart "
            >
              <div
                className="ConditionPipe"
              >
                <div
                  className="CircleContainer ConditionCount"
                  style={
                    Object {
                      "height": 24,
                      "width": 24,
                    }
                  }
                >
                  <div>
                    29
                  </div>
                </div>
              </div>
              <div
                className="FlagWrapper"
              >
                <div
                  className="FeatureFlag"
                >
                  <div
                    className="Bar"
                    style={
                      Object {
                        "backgroundColor": "rgb(221, 10, 10)",
                        "width": "30px",
                      }
                    }
                    title="Theme - Security - 10"
                  />
                </div>
                <div
                  className="FeatureFlag"
                >
                  <div
                    className="Bar"
                    style={
                      Object {
                        "backgroundColor": "rgb(36, 91, 64)",
                        "width": "30px",
                      }
                    }
                    title="Theme - Management System - 19"
                  />
                  <div
                    className="FlagTip"
                    style={
                      Object {
                        "borderLeftColor": "rgb(36, 91, 64)",
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="ProjectName"
              >
                <p>
                  6. Section 21.(1) application
                </p>
              </div>
            </div>
          </div>
        </li>
      </ul>
    </div>
    <div
      className="EmptyListItems"
    />
  </div>
</div>
`;

exports[`Storyshots Components|ProjectMenu/ProjectChart Empty graphData 1`] = `
<div
  className="visualization"
>
  <div
    className="ProjectMenu"
  >
    <div
      className="ProjectChart "
    >
      <div
        className="ConditionPipe"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|ProjectMenu/ProjectChart With legend items 1`] = `
<div
  className="visualization"
>
  <div
    className="ProjectMenu"
  >
    <div
      className="ProjectChart selected"
    >
      <div
        className="ConditionPipe"
      >
        <div
          className="CircleContainer ConditionCount"
          style={
            Object {
              "height": 24,
              "width": 24,
            }
          }
        >
          <div>
            143
          </div>
        </div>
      </div>
      <div
        className="FlagWrapper"
      >
        <div
          className="FeatureFlag"
        >
          <div
            className="Bar"
            style={
              Object {
                "backgroundColor": "rgb(221, 10, 10)",
                "width": "3px",
              }
            }
            title="Theme - Security - 1"
          />
        </div>
        <div
          className="FeatureFlag"
        >
          <div
            className="Bar"
            style={
              Object {
                "backgroundColor": "rgb(36, 91, 64)",
                "width": "30px",
              }
            }
            title="Theme - Management System - 45"
          />
          <div
            className="FlagTip"
            style={
              Object {
                "borderLeftColor": "rgb(36, 91, 64)",
              }
            }
          />
        </div>
        <div
          className="FeatureFlag"
        >
          <div
            className="Bar"
            style={
              Object {
                "backgroundColor": "rgb(247, 193, 97)",
                "width": "30px",
              }
            }
            title="Theme - Financial - 55"
          />
          <div
            className="FlagTip"
            style={
              Object {
                "borderLeftColor": "rgb(247, 193, 97)",
              }
            }
          />
        </div>
        <div
          className="FeatureFlag"
        >
          <div
            className="Bar"
            style={
              Object {
                "backgroundColor": "rgb(133, 28, 133)",
                "width": "30px",
              }
            }
            title="Theme - Damage Prevention - 23"
          />
          <div
            className="FlagTip"
            style={
              Object {
                "borderLeftColor": "rgb(133, 28, 133)",
              }
            }
          />
        </div>
        <div
          className="FeatureFlag"
        >
          <div
            className="Bar"
            style={
              Object {
                "backgroundColor": "rgb(68, 34, 149)",
                "width": "9px",
              }
            }
            title="Theme - Safety Management - 3"
          />
        </div>
        <div
          className="FeatureFlag"
        >
          <div
            className="Bar"
            style={
              Object {
                "backgroundColor": "rgb(153, 153, 255)",
                "width": "30px",
              }
            }
            title="Theme - Socio-Economic - 13"
          />
          <div
            className="FlagTip"
            style={
              Object {
                "borderLeftColor": "rgb(153, 153, 255)",
              }
            }
          />
        </div>
        <div
          className="FeatureFlag"
        >
          <div
            className="Bar"
            style={
              Object {
                "backgroundColor": "rgb(11, 121, 153)",
                "width": "9px",
              }
            }
            title="Theme - Emergency Management - 3"
          />
        </div>
      </div>
      <div
        className="ProjectName"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|RegionCompanies default 1`] = `
<div
  className="visualization"
>
  <div
    className="RegionCompanies"
  >
    <div
      className="title"
    >
      <span>
        Companies in Selected Region:
      </span>
    </div>
    <ul>
      <li>
        Alberta Trans-Alta e
      </li>
      <li>
        Alberta Trans-Alta è
      </li>
      <li>
        Canada-Montana Pipe Line Company
      </li>
      <li>
        Express Pipeline Ltd.
      </li>
      <li>
        Kinder Morgan Cochin Ulc.
        <button
          className="asterisk"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
          type="button"
        >
          *
        </button>
      </li>
      <li>
        Nova Gas Transmission Ltd.
      </li>
      <li>
        Power Plants R Us
      </li>
      <li>
        Z-Anti
      </li>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Components|RegionConditionSummary with no data 1`] = `
<div
  className="visualization"
>
  <div
    className="RegionConditionSummary"
  >
    <div
      className="ChartContainer"
    >
      <div
        className="BorderBottom"
      />
      <div
        className="RegionConditionSummaryTitle"
      >
        <span>
          Total Conditions for Selected Region
        </span>
      </div>
      <div
        className="RegionConditionChart"
      />
    </div>
    <svg
      className="YAxis"
      viewBox="0 0 100 200"
    >
      <text
        fill="rgb(161, 168, 167)"
        x="45"
        y="11"
      >
        100
      </text>
      <rect
        fill="#e4e4e4"
        height="3"
        width="10"
        x="85"
        y="0"
      />
      <text
        fill="rgb(161, 168, 167)"
        x="58"
        y="110"
      >
        0
      </text>
      <rect
        fill="#e4e4e4"
        height="3"
        width="10"
        x="85"
        y="50"
      />
    </svg>
  </div>
</div>
`;

exports[`Storyshots Components|RegionConditionSummary with theme data 1`] = `
<div
  className="visualization"
>
  <div
    className="RegionConditionSummary"
  >
    <div
      className="ChartContainer"
    >
      <div
        className="BorderBottom"
      />
      <div
        className="RegionConditionSummaryTitle"
      >
        <span>
          Total Conditions for Selected Region
        </span>
      </div>
      <div
        className="RegionConditionChart"
      >
        <svg
          className="BarContainer"
          height="100%"
          width="100%"
        >
          <rect
            className="Bar"
            fill="rgb(181, 11, 128)"
            height="100%"
            width="7.142857142857142%"
            x="0%"
            y="0%"
          />
          <rect
            className="Bar"
            fill="rgb(153, 82, 255)"
            height="40%"
            width="7.142857142857142%"
            x="7.142857142857142%"
            y="60%"
          />
          <rect
            className="Bar"
            fill="rgb(33, 181, 115)"
            height="86%"
            width="7.142857142857142%"
            x="14.285714285714285%"
            y="14%"
          />
          <rect
            className="Bar"
            fill="rgb(201, 215, 65)"
            height="30%"
            width="7.142857142857142%"
            x="21.428571428571427%"
            y="70%"
          />
          <rect
            className="Bar"
            fill="rgb(41, 41, 218)"
            height="10%"
            width="7.142857142857142%"
            x="28.571428571428566%"
            y="90%"
          />
          <rect
            className="Bar"
            fill="rgb(74, 166, 255)"
            height="30%"
            width="7.142857142857142%"
            x="35.71428571428571%"
            y="70%"
          />
          <rect
            className="Bar"
            fill="rgb(11, 121, 153)"
            height="6%"
            width="7.142857142857142%"
            x="42.85714285714285%"
            y="94%"
          />
          <rect
            className="Bar"
            fill="rgb(153, 153, 255)"
            height="30%"
            width="7.142857142857142%"
            x="49.999999999999986%"
            y="70%"
          />
          <rect
            className="Bar"
            fill="rgb(68, 34, 149)"
            height="6%"
            width="7.142857142857142%"
            x="57.142857142857125%"
            y="94%"
          />
          <rect
            className="Bar"
            fill="rgb(133, 28, 133)"
            height="6%"
            width="7.142857142857142%"
            x="64.28571428571426%"
            y="94%"
          />
          <rect
            className="Bar"
            fill="rgb(247, 193, 97)"
            height="6%"
            width="7.142857142857142%"
            x="71.4285714285714%"
            y="94%"
          />
          <rect
            className="Bar"
            fill="rgb(221, 10, 10)"
            height="6%"
            width="7.142857142857142%"
            x="78.57142857142854%"
            y="94%"
          />
          <rect
            className="Bar"
            fill="rgb(36, 91, 64)"
            height="6%"
            width="7.142857142857142%"
            x="85.71428571428568%"
            y="94%"
          />
          <rect
            className="Bar"
            fill="black"
            height="8%"
            width="7.142857142857142%"
            x="92.85714285714282%"
            y="92%"
          />
        </svg>
      </div>
    </div>
    <svg
      className="YAxis"
      viewBox="0 0 100 200"
    >
      <text
        fill="rgb(161, 168, 167)"
        x="45"
        y="11"
      >
        100
      </text>
      <rect
        fill="#e4e4e4"
        height="3"
        width="10"
        x="85"
        y="0"
      />
      <text
        fill="rgb(161, 168, 167)"
        x="58"
        y="110"
      >
        0
      </text>
      <rect
        fill="#e4e4e4"
        height="3"
        width="10"
        x="85"
        y="50"
      />
    </svg>
  </div>
</div>
`;

exports[`Storyshots Components|RegionConditionSummary with type data 1`] = `
<div
  className="visualization"
>
  <div
    className="RegionConditionSummary"
  >
    <div
      className="ChartContainer"
    >
      <div
        className="BorderBottom"
      />
      <div
        className="RegionConditionSummaryTitle"
      >
        <span>
          Total Conditions for Selected Region
        </span>
      </div>
      <div
        className="RegionConditionChart"
      >
        <svg
          className="BarContainer"
          height="100%"
          width="100%"
        >
          <rect
            className="Bar"
            fill="rgb(181, 11, 128)"
            height="50%"
            width="50%"
            x="0%"
            y="50%"
          />
          <rect
            className="Bar"
            fill="rgb(77, 39, 90)"
            height="100%"
            width="50%"
            x="50%"
            y="0%"
          />
        </svg>
      </div>
    </div>
    <svg
      className="YAxis"
      viewBox="0 0 100 200"
    >
      <text
        fill="rgb(161, 168, 167)"
        x="45"
        y="11"
      >
        100
      </text>
      <rect
        fill="#e4e4e4"
        height="3"
        width="10"
        x="85"
        y="0"
      />
      <text
        fill="rgb(161, 168, 167)"
        x="58"
        y="110"
      >
        0
      </text>
      <rect
        fill="#e4e4e4"
        height="3"
        width="10"
        x="85"
        y="50"
      />
    </svg>
  </div>
</div>
`;

exports[`Storyshots Components|SearchBar SearchBar default 1`] = `
<div
  className="visualization"
>
  <div
    className="SearchBar"
  >
    <div
      className="SelectionTab"
    >
      <div
        className="Tab inactiveTab"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
      >
        <span
          className="tabText"
        >
           
          Find Words
           
        </span>
        <span
          className="iconSvg"
        >
          <svg
            viewBox="0 0 284.9 284.9"
            width={15}
          >
            <g
              className="findIcon"
            >
              <path
                d="M135,93.1l139.8,136.8c9.2,9,9.2,23.4,0,32.4l0, 0c-9.2,9-23.9,9-33.1,0L101.9,125.5c-9.2-9-9.2-23.4,0-32.4 l0,0C109.2,84.1,125.8,84.1,135,93.1z"
              />
              <ellipse
                cx="120.2"
                cy="112.3"
                rx="104.8"
                ry="102.6"
              />
            </g>
          </svg>
        </span>
      </div>
      <div
        className="rect horzDivider"
      />
      <div
        className="Tab inactiveTab"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
      >
        <span
          className="tabText"
        >
           
          Filter
           
        </span>
        <span
          className="iconSvg"
        >
          <svg
            viewBox="0 0 284.9 284.9"
            width={15}
          >
            <polygon
              className="filterIcon"
              points="37.9,3.1 107.6,142.5 107.6,281.8 177.3,212.1 177.3,142.5 247,3.1"
            />
          </svg>
        </span>
      </div>
      <div
        className="rect horzLine"
      />
    </div>
    <div
      className="HighlightSummary"
    >
      <span>
        Showing all projects from
      </span>
      <span>
         
        1970
         - 
        1980
         
      </span>
      <p>
        Highlighting conditions containing
         : 
      </p>
      <div
        className="keywordsText"
      >
        safety
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SearchBar/FilterContent with interaction 1`] = `
<div
  className="visualization"
>
  <div
    className="SearchBar"
  >
    <div
      className="FilterContent"
    >
      <div
        className="reset"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
      >
        <span
          className="upperCase"
        >
           
          Reset
           
        </span>
        <svg
          viewBox="0 0 427.5 427.5"
          width={12}
        >
          <path
            d="M316.2,329.6c-60.9,57.6-157,54.8-214.6-6.1c-54.1-57.3-55.4-146.3-3-205.2c55.8-57.5,136.1-70.5,196.1-12.3 l-55.2,56.8L427,197.5L386.8,11.2l-55.2,56.8c-76.2-71.2-195.8-67.2-267,9.1c-1.6,1.7-3.2,3.5-4.7,5.2 c-74.9,79.8-71,205.2,8.9,280.2c77.9,73.1,199.7,71.3,275.5-4L316.2,329.6z"
          />
        </svg>
      </div>
      <div
        className="titleText"
      >
        <span>
          Filter by Project Year
        </span>
      </div>
      <ul
        className="projectList"
      >
        <li
          className="regularBackground leftCurve"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1970}
        >
          <div
            className="CircleContainer regularCircle selectedOutsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              70
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1971}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              71
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1972}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              72
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1973}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              73
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1974}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              74
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1975}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              75
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1976}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              76
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1977}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              77
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1978}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              78
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1979}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              79
            </div>
          </div>
        </li>
        <li
          className="regularBackground rightCurve"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1980}
        >
          <div
            className="CircleContainer regularCircle selectedOutsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              80
            </div>
          </div>
        </li>
      </ul>
      <div
        className="titleText"
      >
        <span>
          Filter by Project Status
        </span>
      </div>
      <ul
        className="projectStatus"
      >
        <li
          className="selectedProject"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <span
            className="upperCase"
          >
             
            Open
             
          </span>
        </li>
        <li
          className="selectedProject"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <span
            className="upperCase"
          >
             
            Closed
             
          </span>
        </li>
        <li
          className="selectedProject"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <span
            className="upperCase"
          >
             
            Cancelled
             
          </span>
        </li>
      </ul>
      <button
        className="close upperCase"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
        type="button"
      >
        Close
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SearchBar/FilterContent withProjectStatus 1`] = `
<div
  className="visualization"
>
  <div
    className="SearchBar"
  >
    <div
      className="FilterContent"
    >
      <div
        className="reset"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
      >
        <span
          className="upperCase"
        >
           
          Reset
           
        </span>
        <svg
          viewBox="0 0 427.5 427.5"
          width={12}
        >
          <path
            d="M316.2,329.6c-60.9,57.6-157,54.8-214.6-6.1c-54.1-57.3-55.4-146.3-3-205.2c55.8-57.5,136.1-70.5,196.1-12.3 l-55.2,56.8L427,197.5L386.8,11.2l-55.2,56.8c-76.2-71.2-195.8-67.2-267,9.1c-1.6,1.7-3.2,3.5-4.7,5.2 c-74.9,79.8-71,205.2,8.9,280.2c77.9,73.1,199.7,71.3,275.5-4L316.2,329.6z"
          />
        </svg>
      </div>
      <div
        className="titleText"
      >
        <span>
          Filter by Project Year
        </span>
      </div>
      <ul
        className="projectList"
      >
        <li
          className="regularBackground leftCurve"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1970}
        >
          <div
            className="CircleContainer regularCircle selectedOutsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              70
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1971}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              71
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1972}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              72
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1973}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              73
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1974}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              74
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1975}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              75
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1976}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              76
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1977}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              77
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1978}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              78
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1979}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              79
            </div>
          </div>
        </li>
        <li
          className="regularBackground rightCurve"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1980}
        >
          <div
            className="CircleContainer regularCircle selectedOutsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              80
            </div>
          </div>
        </li>
      </ul>
      <div
        className="titleText"
      >
        <span>
          Filter by Project Status
        </span>
      </div>
      <ul
        className="projectStatus"
      >
        <li
          className="selectedProject"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <span
            className="upperCase"
          >
             
            Open
             
          </span>
        </li>
        <li
          className="selectedProject"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <span
            className="upperCase"
          >
             
            Closed
             
          </span>
        </li>
        <li
          className="selectedProject"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <span
            className="upperCase"
          >
             
            Cancelled
             
          </span>
        </li>
      </ul>
      <button
        className="close upperCase"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
        type="button"
      >
        Close
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SearchBar/FilterContent withYear 1`] = `
<div
  className="visualization"
>
  <div
    className="SearchBar"
  >
    <div
      className="FilterContent"
    >
      <div
        className="reset"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
      >
        <span
          className="upperCase"
        >
           
          Reset
           
        </span>
        <svg
          viewBox="0 0 427.5 427.5"
          width={12}
        >
          <path
            d="M316.2,329.6c-60.9,57.6-157,54.8-214.6-6.1c-54.1-57.3-55.4-146.3-3-205.2c55.8-57.5,136.1-70.5,196.1-12.3 l-55.2,56.8L427,197.5L386.8,11.2l-55.2,56.8c-76.2-71.2-195.8-67.2-267,9.1c-1.6,1.7-3.2,3.5-4.7,5.2 c-74.9,79.8-71,205.2,8.9,280.2c77.9,73.1,199.7,71.3,275.5-4L316.2,329.6z"
          />
        </svg>
      </div>
      <div
        className="titleText"
      >
        <span>
          Filter by Project Year
        </span>
      </div>
      <ul
        className="projectList"
      >
        <li
          className="regularBackground leftCurve"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1970}
        >
          <div
            className="CircleContainer regularCircle selectedOutsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              70
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1971}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              71
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1972}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              72
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1973}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              73
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1974}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              74
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1975}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              75
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1976}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              76
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1977}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              77
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1978}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              78
            </div>
          </div>
        </li>
        <li
          className="regularBackground"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1979}
        >
          <div
            className="CircleContainer regularCircle selectedInsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              79
            </div>
          </div>
        </li>
        <li
          className="regularBackground rightCurve"
          focusable={true}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          tabIndex={0}
          value={1980}
        >
          <div
            className="CircleContainer regularCircle selectedOutsideCircle"
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
          >
            <div>
              80
            </div>
          </div>
        </li>
      </ul>
      <div
        className="titleText"
      >
        <span>
          Filter by Project Status
        </span>
      </div>
      <ul
        className="projectStatus"
      >
        <li
          className="selectedProject"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <span
            className="upperCase"
          >
             
            Open
             
          </span>
        </li>
        <li
          className="selectedProject"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <span
            className="upperCase"
          >
             
            Closed
             
          </span>
        </li>
        <li
          className="selectedProject"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <span
            className="upperCase"
          >
             
            Cancelled
             
          </span>
        </li>
      </ul>
      <button
        className="close upperCase"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
        type="button"
      >
        Close
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SearchBar/HighlightSummary default 1`] = `
<div
  className="visualization"
>
  <div
    className="SearchBar"
  >
    <div
      className="HighlightSummary"
    >
      <span>
        Showing all projects from
      </span>
      <span>
         
        2010
         - 
        2018
         
      </span>
      <p>
        Highlighting conditions containing
         : 
      </p>
      <div
        className="keywordsText"
      >
        include1, include2
      </div>
      <p>
        Exclude conditions containing
         : 
      </p>
      <div
        className="keywordsText"
      >
        exclude1, exclude2
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SearchBar/SearchContent with interaction 1`] = `
<div
  className="visualization"
>
  <div
    className="SearchBar"
  >
    <div
      className="SearchContent"
    >
      <div
        className="includeText"
      >
        <span>
          Include any of:
        </span>
      </div>
      <div
        className="input"
      >
        <input
          className="searchBar"
          onChange={[Function]}
          onFocus={[Function]}
          value=""
        />
        <button
          className="addInput"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
          type="button"
        >
          <div
            className="Icon"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-plus-circle fa-w-16 iconInline plusIcon"
              color=""
              data-icon="plus-circle"
              data-prefix="fas"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
        </button>
      </div>
      <ul
        className="searchWords"
      />
      <div
        className="advancedSearchText"
      >
        <button
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
          type="button"
        >
          <span>
            Advanced Search
          </span>
        </button>
      </div>
      <div
        className="highlightConditions"
      >
        <div
          className="highlightText"
        >
          Highlight conditions containing
        </div>
        <div
          className="anyText"
        >
          <span>
             
            <span
              className="upperCase"
            >
               
              any
               
            </span>
             of the following:
          </span>
        </div>
        <div
          className="keywordsText"
        >
          <span>
            
             
          </span>
        </div>
        <div />
      </div>
      <div
        className="close"
      >
        <button
          className="upperCase"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
          type="button"
        >
          Close
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SearchBar/SuggestedKeywordsPopout with interaction 1`] = `
<div
  className="visualization"
>
  <div
    className="SearchBar"
  >
    <div
      className="SuggestedKeywordsPopout"
    >
      <h1
        className="keywordsTitle"
      >
         
        Suggested Keywords
          
      </h1>
      <p
        className="description"
      >
         
        Keywords capture the general idea of a condition, e.g. type of species regulated. Learn more about how we extracted keywords
          
      </p>
      <ul
        className="categories"
      >
        <li
          className="viewText"
        >
           
          View By
          :  
        </li>
        <li
          className="categoryList upperCase selectedCategory"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
           
          all
        </li>
        <li
          className="categoryList upperCase"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
           
          wildlife & habitat
        </li>
        <li
          className="categoryList upperCase"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
           
          environment
        </li>
        <li
          className="categoryList upperCase"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
           
          engineering & structures
        </li>
        <li
          className="categoryList upperCase"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
           
          administration & filings
        </li>
      </ul>
      <div
        className="rightText"
      >
        <span>
          Sort by
           
        </span>
        <span
          className={null}
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
           
          Frequency
        </span>
        |
        <span
          className={null}
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          Alphabetical
        </span>
        <span
          className="hierarchy"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
        >
          <span
            className="arrow"
          >
            <svg
              viewBox="0 0 427.5 427.5"
            >
              <g>
                <path
                  d="M405.943,290.254L302.096,425.338c-1.04, 1.354-2.66,2.146-4.374,2.146c-1.702,0-3.321-0.798-4.368-2.146L189.511,290.254 c-0.769-0.993-1.144-2.176-1.144-3.357c0-1.152,0.364-2.329, 1.108-3.322c1.499-1.975,4.125-2.707,6.434-1.809l68.76,27.166V21.01 c0-3.047,2.477-5.503,5.515-5.503h55.106c3.038,0,5.509, 2.456,5.509,5.503v287.922l68.76-27.166 c2.305-0.898,4.93-0.166,6.419,1.809C407.473,285.561, 407.461,288.28,405.943,290.254z M238.012,143.913 c0.744-0.993,1.105-2.167,1.105-3.322c0-1.176-0.379-2.367-1.142-3.36L134.125, 2.148C133.081,0.792,131.458,0,129.759,0 c-1.714,0-3.328,0.798-4.377,2.148L21.539,137.23c-1.519, 1.969-1.525,4.69-0.03,6.683c1.487,1.968,4.114,2.707,6.419,1.803 l68.766-27.163v287.919c0,3.05,2.462,5.509,5.506, 5.509h55.109c3.041,0,5.515-2.459,5.515-5.509V118.552l68.763,27.163 C233.886,146.62,236.51,145.88,238.012,143.913z"
                />
              </g>
            </svg>
          </span>
          <span
            className="upperCase"
          >
             
            none
             
          </span>
        </span>
      </div>
      <div
        className="KeywordList"
      >
        <ul>
          <li>
            <div
              className="icon"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={0}
            >
              <div
                className="Icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-minus-circle fa-w-16 selectedIcon"
                  color=""
                  data-icon="minus-circle"
                  data-prefix="fas"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zM124 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H124z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </div>
            <div
              className="keywordCategory selectedText"
            >
              deer
               
            </div>
            <svg
              className="BarContainer"
              height="8px"
              width="100%"
            >
              <rect
                className="Bar"
                fill="rgb(238,97,41)"
                height="100%"
                width="100%"
                x="0%"
                y={0}
              />
              <rect
                className="Bar"
                fill="transparent"
                height="100%"
                width="0%"
                x="100%"
                y={0}
              />
            </svg>
            <div
              className="conditionsText"
            >
              <span>
                1200 conditions
              </span>
            </div>
          </li>
          <li>
            <div
              className="icon"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={0}
            >
              <div
                className="Icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-plus-circle fa-w-16 regularIcon"
                  color=""
                  data-icon="plus-circle"
                  data-prefix="fas"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </div>
            <div
              className="keywordCategory regularText"
            >
              alberta
               
            </div>
            <svg
              className="BarContainer"
              height="8px"
              width="100%"
            >
              <rect
                className="Bar"
                fill="rgb(96,96,96)"
                height="100%"
                width="33.33333333333333%"
                x="0%"
                y={0}
              />
              <rect
                className="Bar"
                fill="transparent"
                height="100%"
                width="66.66666666666667%"
                x="33.33333333333333%"
                y={0}
              />
            </svg>
            <div
              className="conditionsText"
            >
              <span>
                400 conditions
              </span>
            </div>
          </li>
        </ul>
      </div>
      <div
        className="close"
      >
        <button
          className="upperCase"
          focusable={true}
          onClick={[Function]}
          onKeyPress={[Function]}
          tabIndex={0}
          type="button"
        >
           
          Close
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SearchBar/SuggestedKeywordsPopout/KeywordList default 1`] = `
<div
  className="visualization"
>
  <div
    className="SearchBar"
  >
    <div
      className="SuggestedKeywordsPopout"
    >
      <div
        className="KeywordList"
      >
        <ul>
          <li>
            <div
              className="icon"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={0}
            >
              <div
                className="Icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-plus-circle fa-w-16 regularIcon"
                  color=""
                  data-icon="plus-circle"
                  data-prefix="fas"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </div>
            <div
              className="keywordCategory regularText"
            >
              deer
               
            </div>
            <svg
              className="BarContainer"
              height="8px"
              width="100%"
            >
              <rect
                className="Bar"
                fill="rgb(96,96,96)"
                height="100%"
                width="100%"
                x="0%"
                y={0}
              />
              <rect
                className="Bar"
                fill="transparent"
                height="100%"
                width="0%"
                x="100%"
                y={0}
              />
            </svg>
            <div
              className="conditionsText"
            >
              <span>
                1200 conditions
              </span>
            </div>
          </li>
          <li>
            <div
              className="icon"
              focusable={true}
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={0}
            >
              <div
                className="Icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-plus-circle fa-w-16 regularIcon"
                  color=""
                  data-icon="plus-circle"
                  data-prefix="fas"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </div>
            <div
              className="keywordCategory regularText"
            >
              alberta
               
            </div>
            <svg
              className="BarContainer"
              height="8px"
              width="100%"
            >
              <rect
                className="Bar"
                fill="rgb(96,96,96)"
                height="100%"
                width="33.33333333333333%"
                x="0%"
                y={0}
              />
              <rect
                className="Bar"
                fill="transparent"
                height="100%"
                width="66.66666666666667%"
                x="33.33333333333333%"
                y={0}
              />
            </svg>
            <div
              className="conditionsText"
            >
              <span>
                400 conditions
              </span>
            </div>
          </li>
        </ul>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SearchBar/SuggestedKeywordsPrompt default 1`] = `
<div
  className="visualization"
>
  <div
    className="SearchBar"
  >
    <div
      className="SuggestedKeywordsPrompt"
    >
      <p
        className="selectFrom"
      >
        Select from
      </p>
      <p
        className="colorChange"
      >
        Suggested
      </p>
      <p
        className="colorChange"
      >
        Keywords
      </p>
      <svg
        className="arrow"
        focusable={true}
        height={20}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
        viewBox="0 0 427.5 427.5"
        width={20}
      >
        <circle
          cx="215"
          cy="213.8"
          r="213.8"
        />
        <polygon
          points="175.6,125.5 158,144.3 251.1,230.8 158,317.3 175.6,336.1 288.9,230.8 "
        />
      </svg>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SearchBar/Tab FilterTab 1`] = `
<div
  className="visualization"
>
  <div
    className="SearchBar"
  >
    <div
      className="Tab"
      focusable={true}
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={0}
    >
      <span
        className="tabText"
      >
         
        Filter
         
      </span>
      <span
        className="iconSvg"
      >
        <svg
          viewBox="0 0 284.9 284.9"
          width={15}
        >
          <polygon
            className="filterIcon"
            points="37.9,3.1 107.6,142.5 107.6,281.8 177.3,212.1 177.3,142.5 247,3.1"
          />
        </svg>
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SearchBar/Tab SearchTab 1`] = `
<div
  className="visualization"
>
  <div
    className="SearchBar"
  >
    <div
      className="Tab"
      focusable={true}
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={0}
    >
      <span
        className="tabText"
      >
         
        Find Words
         
      </span>
      <span
        className="iconSvg"
      >
        <svg
          viewBox="0 0 284.9 284.9"
          width={15}
        >
          <g
            className="findIcon"
          >
            <path
              d="M135,93.1l139.8,136.8c9.2,9,9.2,23.4,0,32.4l0, 0c-9.2,9-23.9,9-33.1,0L101.9,125.5c-9.2-9-9.2-23.4,0-32.4 l0,0C109.2,84.1,125.8,84.1,135,93.1z"
            />
            <ellipse
              cx="120.2"
              cy="112.3"
              rx="104.8"
              ry="102.6"
            />
          </g>
        </svg>
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SelectedGroupBar default 1`] = `
<div
  className="visualization"
>
  <div
    className="SelectedGroupBar"
  >
    <p
      style={
        Object {
          "background": "lightgrey",
          "fontSize": 16,
        }
      }
    >
      Selected Company
      :
      <span
        style={
          Object {
            "fontSize": 14,
          }
        }
      >
        condition
      </span>
    </p>
  </div>
</div>
`;

exports[`Storyshots Components|ShareIcon email 1`] = `
<div
  className="visualization"
>
  <div
    className="ShareIcon"
    focusable={true}
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={0}
  >
    <div
      className="CircleContainer"
      style={
        Object {
          "height": 20,
          "width": 20,
        }
      }
    >
      <div>
        <div
          className="Icon"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-envelope fa-w-16 fa-1x "
            color=""
            data-icon="envelope"
            data-prefix="fas"
            role="img"
            style={Object {}}
            viewBox="0 0 512 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|ShareIcon facebook 1`] = `
<div
  className="visualization"
>
  <div
    className="ShareIcon"
    focusable={true}
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={0}
  >
    <div
      className="CircleContainer"
      style={
        Object {
          "height": 20,
          "width": 20,
        }
      }
    >
      <div>
        <div
          className="Icon"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-facebook fa-w-14 fa-1x "
            color=""
            data-icon="facebook"
            data-prefix="fab"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M448 56.7v398.5c0 13.7-11.1 24.7-24.7 24.7H309.1V306.5h58.2l8.7-67.6h-67v-43.2c0-19.6 5.4-32.9 33.5-32.9h35.8v-60.5c-6.2-.8-27.4-2.7-52.2-2.7-51.6 0-87 31.5-87 89.4v49.9h-58.4v67.6h58.4V480H24.7C11.1 480 0 468.9 0 455.3V56.7C0 43.1 11.1 32 24.7 32h398.5c13.7 0 24.8 11.1 24.8 24.7z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|ShareIcon linkedin 1`] = `
<div
  className="visualization"
>
  <div
    className="ShareIcon"
    focusable={true}
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={0}
  >
    <div
      className="CircleContainer"
      style={
        Object {
          "height": 20,
          "width": 20,
        }
      }
    >
      <div>
        <div
          className="Icon"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-linkedin fa-w-14 fa-1x "
            color=""
            data-icon="linkedin"
            data-prefix="fab"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|ShareIcon twitter 1`] = `
<div
  className="visualization"
>
  <div
    className="ShareIcon"
    focusable={true}
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={0}
  >
    <div
      className="CircleContainer"
      style={
        Object {
          "height": 20,
          "width": 20,
        }
      }
    >
      <div>
        <div
          className="Icon"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-twitter fa-w-16 fa-1x "
            color=""
            data-icon="twitter"
            data-prefix="fab"
            role="img"
            style={Object {}}
            viewBox="0 0 512 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|ShortcutInfoBar default 1`] = `
<div
  className="visualization"
>
  <div
    className="ShortcutInfoBar"
  >
    <div
      className="Content"
    >
      <svg
        className="InfoButton"
        focusable={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
        viewBox="0 0 50 100"
      >
        <g
          transform="scale(3)"
        >
          <path
            d="M8.3.5a7.8,7.8,0,1,0,7.8,7.8A7.81,7.81,0,0,0,8.3.5"
            fill="none"
            stroke="#fff"
            strokeMiterlimit={10}
          />
          <path
            d="M6,7.2a4.3,4.3,0,0,1,1.8-.5c.9,0,1.7.5,1.7,1.3a9,9,0,0,1-.3,1.9s-.2.9-.3,1.2-.2.8.2,1,1.2-.4,1.2-.4l-.4,1.1a4,4,0,0,1-1.5.4,2.35,2.35,0,0,1-1.6-.5,2,2,0,0,1-.4-1.9c.1-.5.8-2.5.6-3S5.8,8,5.8,8Z"
            fill="#fff"
          />
          <path
            d="M7.3,4.3A1.42,1.42,0,0,1,8.7,3,1.33,1.33,0,0,1,9.9,4.4,1.42,1.42,0,0,1,8.5,5.7,1.17,1.17,0,0,1,7.3,4.3"
            fill="#fff"
          />
        </g>
      </svg>
    </div>
    <div
      className="clearfix"
    />
  </div>
</div>
`;

exports[`Storyshots Components|SmallMultiplesLegend basic usage 1`] = `
<div
  className="visualization"
>
  <div
    className="SmallMultiplesLegend"
  >
    <div
      className="List guideLine"
      onWheel={[Function]}
    >
      <ul>
        <li
          className="List-Item selected"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem all"
            >
              <span
                className="stream"
              />
              <span>
                All Themes
              </span>
            </div>
          </div>
          <div
            className="CircleContainer arrowNext"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
            tabIndex={0}
          >
            <div>
              <div
                className="Icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-angle-down fa-w-10 fa-1x "
                  color=""
                  data-icon="angle-down"
                  data-prefix="fas"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="stream"
              >
                <svg
                  height="100%"
                  preserveAspectRatio="none"
                  viewBox="0 0 100 100"
                  width="100%"
                >
                  <g
                    clipPath="url(#victory-clip-3)"
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  >
                    <defs>
                      <clipPath
                        id="victory-clip-3"
                      >
                        <rect
                          height={100}
                          role="presentation"
                          shapeRendering="auto"
                          vectorEffect="non-scaling-stroke"
                          width={100}
                          x={0}
                          y={0}
                        />
                      </clipPath>
                    </defs>
                    <path
                      d="M0,100C5.555555555555554,99.16892346105828,11.111111111111107,98.33784692211658,16.666666666666664,97.30337078651685C22.22222222222222,96.26889465091712,27.777777777777764,95.03101891865937,33.33333333333333,94.8314606741573C38.88888888888889,94.63190242965523,44.44444444444446,95.47066167290886,50,93.25842696629213C55.55555555555554,91.04619225967541,61.1111111111111,85.7829636031883,66.66666666666666,66.29213483146067C72.22222222222221,46.80130605973303,77.77777777777777,13.082877172764814,83.33333333333334,0C88.88888888888891,-13.082877172764814,94.44444444444446,-5.530202631326228,100,2.0224719101123583L100,100C94.44444444444444,100,88.88888888888889,100,83.33333333333334,100C77.7777777777778,100,72.22222222222221,100,66.66666666666666,100C61.1111111111111,100,55.555555555555564,100,50,100C44.444444444444436,100,38.888888888888886,100,33.33333333333333,100C27.777777777777768,100,22.222222222222218,100,16.666666666666664,100C11.11111111111111,100,5.555555555555555,100,0,100Z"
                      role="presentation"
                      shapeRendering="auto"
                      style={
                        Object {
                          "fill": "rgb(221, 10, 10)",
                          "stroke": "rgb(221, 10, 10)",
                        }
                      }
                    />
                  </g>
                </svg>
              </span>
              <span>
                Security
              </span>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="stream"
              >
                <svg
                  height="100%"
                  preserveAspectRatio="none"
                  viewBox="0 0 100 100"
                  width="100%"
                >
                  <g
                    clipPath="url(#victory-clip-4)"
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  >
                    <defs>
                      <clipPath
                        id="victory-clip-4"
                      >
                        <rect
                          height={100}
                          role="presentation"
                          shapeRendering="auto"
                          vectorEffect="non-scaling-stroke"
                          width={100}
                          x={0}
                          y={0}
                        />
                      </clipPath>
                    </defs>
                    <path
                      d="M0,97.52808988764045C4.761904761904763,96.6855412184443,9.523809523809526,95.84299254924815,14.285714285714285,94.8314606741573C19.047619047619044,93.81992879906645,23.809523809523796,92.63941371808086,28.57142857142857,92.35955056179775C33.33333333333334,92.07968740551463,38.0952380952381,92.70047617393406,42.857142857142854,90.78651685393258C47.619047619047606,88.8725575339311,52.380952380952365,84.4238501255087,57.14285714285714,82.69662921348315C61.90476190476191,80.9694083014576,66.66666666666669,81.9636738858289,71.42857142857143,81.57303370786516C76.19047619047618,81.18239352990143,80.95238095238095,79.40684758960265,85.71428571428571,77.75280898876404C90.47619047619047,76.09877038792544,95.23809523809524,74.56623912654699,100,73.03370786516854L100,100C95.23809523809526,100,90.47619047619048,100,85.71428571428571,100C80.95238095238093,100,76.19047619047619,100,71.42857142857143,100C66.66666666666667,100,61.904761904761905,100,57.14285714285714,100C52.38095238095237,100,47.61904761904761,100,42.857142857142854,100C38.095238095238095,100,33.333333333333336,100,28.57142857142857,100C23.809523809523803,100,19.047619047619044,100,14.285714285714285,100C9.523809523809526,100,4.761904761904763,100,0,100Z"
                      role="presentation"
                      shapeRendering="auto"
                      style={
                        Object {
                          "fill": "rgb(36, 91, 64)",
                          "stroke": "rgb(36, 91, 64)",
                        }
                      }
                    />
                  </g>
                </svg>
              </span>
              <span>
                Management System
              </span>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="stream"
              >
                <svg
                  height="100%"
                  preserveAspectRatio="none"
                  viewBox="0 0 100 100"
                  width="100%"
                >
                  <g
                    clipPath="url(#victory-clip-5)"
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  >
                    <defs>
                      <clipPath
                        id="victory-clip-5"
                      >
                        <rect
                          height={100}
                          role="presentation"
                          shapeRendering="auto"
                          vectorEffect="non-scaling-stroke"
                          width={100}
                          x={0}
                          y={0}
                        />
                      </clipPath>
                    </defs>
                    <path
                      d="M0,96.85393258426966C4.761904761904763,95.64804557683178,9.523809523809526,94.44215856939391,14.285714285714285,93.25842696629213C19.047619047619044,92.07469536319036,23.809523809523796,90.91311916442474,28.57142857142857,89.66292134831461C33.33333333333334,88.41272353220448,38.0952380952381,87.07390409874982,42.857142857142854,85.3932584269663C47.619047619047606,83.71261275518278,52.380952380952365,81.69014084507042,57.14285714285714,81.34831460674158C61.90476190476191,81.00648836841275,66.66666666666669,82.3453078018674,71.42857142857143,78.65168539325843C76.19047619047618,74.95806298464946,80.95238095238095,66.23199873397688,85.71428571428571,68.53932584269663C90.47619047619047,70.84665295141637,95.23809523809524,84.1873714195284,100,97.52808988764045L100,100C95.23809523809526,100,90.47619047619048,100,85.71428571428571,100C80.95238095238093,100,76.19047619047619,100,71.42857142857143,100C66.66666666666667,100,61.904761904761905,100,57.14285714285714,100C52.38095238095237,100,47.61904761904761,100,42.857142857142854,100C38.095238095238095,100,33.333333333333336,100,28.57142857142857,100C23.809523809523803,100,19.047619047619044,100,14.285714285714285,100C9.523809523809526,100,4.761904761904763,100,0,100Z"
                      role="presentation"
                      shapeRendering="auto"
                      style={
                        Object {
                          "fill": "rgb(247, 193, 97)",
                          "stroke": "rgb(247, 193, 97)",
                        }
                      }
                    />
                  </g>
                </svg>
              </span>
              <span>
                Financial
              </span>
            </div>
          </div>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SmallMultiplesLegend highlight 1`] = `
<div
  className="visualization"
>
  <div
    className="SmallMultiplesLegend"
  >
    <div
      className="List faded guideLine"
      onWheel={[Function]}
    >
      <ul>
        <li
          className="List-Item selected"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem all faded"
            >
              <span
                className="stream"
              />
              <span>
                All Themes
              </span>
            </div>
          </div>
          <div
            className="CircleContainer arrowNext"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
            tabIndex={0}
          >
            <div>
              <div
                className="Icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-angle-down fa-w-10 fa-1x "
                  color=""
                  data-icon="angle-down"
                  data-prefix="fas"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="stream"
              >
                <svg
                  height="100%"
                  preserveAspectRatio="none"
                  viewBox="0 0 100 100"
                  width="100%"
                >
                  <g
                    clipPath="url(#victory-clip-9)"
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  >
                    <defs>
                      <clipPath
                        id="victory-clip-9"
                      >
                        <rect
                          height={100}
                          role="presentation"
                          shapeRendering="auto"
                          vectorEffect="non-scaling-stroke"
                          width={100}
                          x={0}
                          y={0}
                        />
                      </clipPath>
                    </defs>
                    <path
                      d="M0,100C5.555555555555554,99.16892346105828,11.111111111111107,98.33784692211658,16.666666666666664,97.30337078651685C22.22222222222222,96.26889465091712,27.777777777777764,95.03101891865937,33.33333333333333,94.8314606741573C38.88888888888889,94.63190242965523,44.44444444444446,95.47066167290886,50,93.25842696629213C55.55555555555554,91.04619225967541,61.1111111111111,85.7829636031883,66.66666666666666,66.29213483146067C72.22222222222221,46.80130605973303,77.77777777777777,13.082877172764814,83.33333333333334,0C88.88888888888891,-13.082877172764814,94.44444444444446,-5.530202631326228,100,2.0224719101123583L100,100C94.44444444444444,100,88.88888888888889,100,83.33333333333334,100C77.7777777777778,100,72.22222222222221,100,66.66666666666666,100C61.1111111111111,100,55.555555555555564,100,50,100C44.444444444444436,100,38.888888888888886,100,33.33333333333333,100C27.777777777777768,100,22.222222222222218,100,16.666666666666664,100C11.11111111111111,100,5.555555555555555,100,0,100Z"
                      role="presentation"
                      shapeRendering="auto"
                      style={
                        Object {
                          "fill": "rgb(221, 10, 10)",
                          "stroke": "rgb(221, 10, 10)",
                        }
                      }
                    />
                  </g>
                </svg>
              </span>
              <span>
                Security
              </span>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem faded"
            >
              <span
                className="stream"
              >
                <svg
                  height="100%"
                  preserveAspectRatio="none"
                  viewBox="0 0 100 100"
                  width="100%"
                >
                  <g
                    clipPath="url(#victory-clip-10)"
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  >
                    <defs>
                      <clipPath
                        id="victory-clip-10"
                      >
                        <rect
                          height={100}
                          role="presentation"
                          shapeRendering="auto"
                          vectorEffect="non-scaling-stroke"
                          width={100}
                          x={0}
                          y={0}
                        />
                      </clipPath>
                    </defs>
                    <path
                      d="M0,97.52808988764045C4.761904761904763,96.6855412184443,9.523809523809526,95.84299254924815,14.285714285714285,94.8314606741573C19.047619047619044,93.81992879906645,23.809523809523796,92.63941371808086,28.57142857142857,92.35955056179775C33.33333333333334,92.07968740551463,38.0952380952381,92.70047617393406,42.857142857142854,90.78651685393258C47.619047619047606,88.8725575339311,52.380952380952365,84.4238501255087,57.14285714285714,82.69662921348315C61.90476190476191,80.9694083014576,66.66666666666669,81.9636738858289,71.42857142857143,81.57303370786516C76.19047619047618,81.18239352990143,80.95238095238095,79.40684758960265,85.71428571428571,77.75280898876404C90.47619047619047,76.09877038792544,95.23809523809524,74.56623912654699,100,73.03370786516854L100,100C95.23809523809526,100,90.47619047619048,100,85.71428571428571,100C80.95238095238093,100,76.19047619047619,100,71.42857142857143,100C66.66666666666667,100,61.904761904761905,100,57.14285714285714,100C52.38095238095237,100,47.61904761904761,100,42.857142857142854,100C38.095238095238095,100,33.333333333333336,100,28.57142857142857,100C23.809523809523803,100,19.047619047619044,100,14.285714285714285,100C9.523809523809526,100,4.761904761904763,100,0,100Z"
                      role="presentation"
                      shapeRendering="auto"
                      style={
                        Object {
                          "fill": "rgb(36, 91, 64)",
                          "stroke": "rgb(36, 91, 64)",
                        }
                      }
                    />
                  </g>
                </svg>
              </span>
              <span>
                Management System
              </span>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem faded"
            >
              <span
                className="stream"
              >
                <svg
                  height="100%"
                  preserveAspectRatio="none"
                  viewBox="0 0 100 100"
                  width="100%"
                >
                  <g
                    clipPath="url(#victory-clip-11)"
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  >
                    <defs>
                      <clipPath
                        id="victory-clip-11"
                      >
                        <rect
                          height={100}
                          role="presentation"
                          shapeRendering="auto"
                          vectorEffect="non-scaling-stroke"
                          width={100}
                          x={0}
                          y={0}
                        />
                      </clipPath>
                    </defs>
                    <path
                      d="M0,96.85393258426966C4.761904761904763,95.64804557683178,9.523809523809526,94.44215856939391,14.285714285714285,93.25842696629213C19.047619047619044,92.07469536319036,23.809523809523796,90.91311916442474,28.57142857142857,89.66292134831461C33.33333333333334,88.41272353220448,38.0952380952381,87.07390409874982,42.857142857142854,85.3932584269663C47.619047619047606,83.71261275518278,52.380952380952365,81.69014084507042,57.14285714285714,81.34831460674158C61.90476190476191,81.00648836841275,66.66666666666669,82.3453078018674,71.42857142857143,78.65168539325843C76.19047619047618,74.95806298464946,80.95238095238095,66.23199873397688,85.71428571428571,68.53932584269663C90.47619047619047,70.84665295141637,95.23809523809524,84.1873714195284,100,97.52808988764045L100,100C95.23809523809526,100,90.47619047619048,100,85.71428571428571,100C80.95238095238093,100,76.19047619047619,100,71.42857142857143,100C66.66666666666667,100,61.904761904761905,100,57.14285714285714,100C52.38095238095237,100,47.61904761904761,100,42.857142857142854,100C38.095238095238095,100,33.333333333333336,100,28.57142857142857,100C23.809523809523803,100,19.047619047619044,100,14.285714285714285,100C9.523809523809526,100,4.761904761904763,100,0,100Z"
                      role="presentation"
                      shapeRendering="auto"
                      style={
                        Object {
                          "fill": "rgb(247, 193, 97)",
                          "stroke": "rgb(247, 193, 97)",
                        }
                      }
                    />
                  </g>
                </svg>
              </span>
              <span>
                Financial
              </span>
            </div>
          </div>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SmallMultiplesLegend selected 1`] = `
<div
  className="visualization"
>
  <div
    className="SmallMultiplesLegend"
  >
    <div
      className="List guideLine"
      onWheel={[Function]}
    >
      <ul>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem all"
            >
              <span
                className="stream"
              />
              <span>
                All Themes
              </span>
            </div>
          </div>
        </li>
        <li
          className="List-Item selected"
        >
          <div
            className="CircleContainer arrowPrevious"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
            tabIndex={0}
          >
            <div>
              <div
                className="Icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-angle-up fa-w-10 fa-1x "
                  color=""
                  data-icon="angle-up"
                  data-prefix="fas"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </div>
          </div>
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="stream"
              >
                <svg
                  height="100%"
                  preserveAspectRatio="none"
                  viewBox="0 0 100 100"
                  width="100%"
                >
                  <g
                    clipPath="url(#victory-clip-6)"
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  >
                    <defs>
                      <clipPath
                        id="victory-clip-6"
                      >
                        <rect
                          height={100}
                          role="presentation"
                          shapeRendering="auto"
                          vectorEffect="non-scaling-stroke"
                          width={100}
                          x={0}
                          y={0}
                        />
                      </clipPath>
                    </defs>
                    <path
                      d="M0,100C5.555555555555554,99.16892346105828,11.111111111111107,98.33784692211658,16.666666666666664,97.30337078651685C22.22222222222222,96.26889465091712,27.777777777777764,95.03101891865937,33.33333333333333,94.8314606741573C38.88888888888889,94.63190242965523,44.44444444444446,95.47066167290886,50,93.25842696629213C55.55555555555554,91.04619225967541,61.1111111111111,85.7829636031883,66.66666666666666,66.29213483146067C72.22222222222221,46.80130605973303,77.77777777777777,13.082877172764814,83.33333333333334,0C88.88888888888891,-13.082877172764814,94.44444444444446,-5.530202631326228,100,2.0224719101123583L100,100C94.44444444444444,100,88.88888888888889,100,83.33333333333334,100C77.7777777777778,100,72.22222222222221,100,66.66666666666666,100C61.1111111111111,100,55.555555555555564,100,50,100C44.444444444444436,100,38.888888888888886,100,33.33333333333333,100C27.777777777777768,100,22.222222222222218,100,16.666666666666664,100C11.11111111111111,100,5.555555555555555,100,0,100Z"
                      role="presentation"
                      shapeRendering="auto"
                      style={
                        Object {
                          "fill": "rgb(221, 10, 10)",
                          "stroke": "rgb(221, 10, 10)",
                        }
                      }
                    />
                  </g>
                </svg>
              </span>
              <span>
                Security
              </span>
            </div>
          </div>
          <div
            className="CircleContainer arrowNext"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            style={
              Object {
                "height": 24,
                "width": 24,
              }
            }
            tabIndex={0}
          >
            <div>
              <div
                className="Icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-angle-down fa-w-10 fa-1x "
                  color=""
                  data-icon="angle-down"
                  data-prefix="fas"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="stream"
              >
                <svg
                  height="100%"
                  preserveAspectRatio="none"
                  viewBox="0 0 100 100"
                  width="100%"
                >
                  <g
                    clipPath="url(#victory-clip-7)"
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  >
                    <defs>
                      <clipPath
                        id="victory-clip-7"
                      >
                        <rect
                          height={100}
                          role="presentation"
                          shapeRendering="auto"
                          vectorEffect="non-scaling-stroke"
                          width={100}
                          x={0}
                          y={0}
                        />
                      </clipPath>
                    </defs>
                    <path
                      d="M0,97.52808988764045C4.761904761904763,96.6855412184443,9.523809523809526,95.84299254924815,14.285714285714285,94.8314606741573C19.047619047619044,93.81992879906645,23.809523809523796,92.63941371808086,28.57142857142857,92.35955056179775C33.33333333333334,92.07968740551463,38.0952380952381,92.70047617393406,42.857142857142854,90.78651685393258C47.619047619047606,88.8725575339311,52.380952380952365,84.4238501255087,57.14285714285714,82.69662921348315C61.90476190476191,80.9694083014576,66.66666666666669,81.9636738858289,71.42857142857143,81.57303370786516C76.19047619047618,81.18239352990143,80.95238095238095,79.40684758960265,85.71428571428571,77.75280898876404C90.47619047619047,76.09877038792544,95.23809523809524,74.56623912654699,100,73.03370786516854L100,100C95.23809523809526,100,90.47619047619048,100,85.71428571428571,100C80.95238095238093,100,76.19047619047619,100,71.42857142857143,100C66.66666666666667,100,61.904761904761905,100,57.14285714285714,100C52.38095238095237,100,47.61904761904761,100,42.857142857142854,100C38.095238095238095,100,33.333333333333336,100,28.57142857142857,100C23.809523809523803,100,19.047619047619044,100,14.285714285714285,100C9.523809523809526,100,4.761904761904763,100,0,100Z"
                      role="presentation"
                      shapeRendering="auto"
                      style={
                        Object {
                          "fill": "rgb(36, 91, 64)",
                          "stroke": "rgb(36, 91, 64)",
                        }
                      }
                    />
                  </g>
                </svg>
              </span>
              <span>
                Management System
              </span>
            </div>
          </div>
        </li>
        <li
          className="List-Item"
        >
          <div
            className="List-Item-Content"
            focusable={true}
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
          >
            <div
              className="LegendItem"
            >
              <span
                className="stream"
              >
                <svg
                  height="100%"
                  preserveAspectRatio="none"
                  viewBox="0 0 100 100"
                  width="100%"
                >
                  <g
                    clipPath="url(#victory-clip-8)"
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  >
                    <defs>
                      <clipPath
                        id="victory-clip-8"
                      >
                        <rect
                          height={100}
                          role="presentation"
                          shapeRendering="auto"
                          vectorEffect="non-scaling-stroke"
                          width={100}
                          x={0}
                          y={0}
                        />
                      </clipPath>
                    </defs>
                    <path
                      d="M0,96.85393258426966C4.761904761904763,95.64804557683178,9.523809523809526,94.44215856939391,14.285714285714285,93.25842696629213C19.047619047619044,92.07469536319036,23.809523809523796,90.91311916442474,28.57142857142857,89.66292134831461C33.33333333333334,88.41272353220448,38.0952380952381,87.07390409874982,42.857142857142854,85.3932584269663C47.619047619047606,83.71261275518278,52.380952380952365,81.69014084507042,57.14285714285714,81.34831460674158C61.90476190476191,81.00648836841275,66.66666666666669,82.3453078018674,71.42857142857143,78.65168539325843C76.19047619047618,74.95806298464946,80.95238095238095,66.23199873397688,85.71428571428571,68.53932584269663C90.47619047619047,70.84665295141637,95.23809523809524,84.1873714195284,100,97.52808988764045L100,100C95.23809523809526,100,90.47619047619048,100,85.71428571428571,100C80.95238095238093,100,76.19047619047619,100,71.42857142857143,100C66.66666666666667,100,61.904761904761905,100,57.14285714285714,100C52.38095238095237,100,47.61904761904761,100,42.857142857142854,100C38.095238095238095,100,33.333333333333336,100,28.57142857142857,100C23.809523809523803,100,19.047619047619044,100,14.285714285714285,100C9.523809523809526,100,4.761904761904763,100,0,100Z"
                      role="presentation"
                      shapeRendering="auto"
                      style={
                        Object {
                          "fill": "rgb(247, 193, 97)",
                          "stroke": "rgb(247, 193, 97)",
                        }
                      }
                    />
                  </g>
                </svg>
              </span>
              <span>
                Financial
              </span>
            </div>
          </div>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SmallMultiplesLegend/LegendItem all 1`] = `
<div
  className="visualization"
>
  <div
    className="SmallMultiplesLegend"
  >
    <div
      className="LegendItem all"
    >
      <span
        className="stream"
      />
      <span>
        All Filings
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SmallMultiplesLegend/LegendItem basic usage 1`] = `
<div
  className="visualization"
>
  <div
    className="SmallMultiplesLegend"
  >
    <div
      className="LegendItem"
    >
      <span
        className="stream"
      >
        <svg
          height="100%"
          preserveAspectRatio="none"
          viewBox="0 0 100 100"
          width="100%"
        >
          <g
            clipPath="url(#victory-clip-1)"
            style={
              Object {
                "height": "100%",
                "width": "100%",
              }
            }
          >
            <defs>
              <clipPath
                id="victory-clip-1"
              >
                <rect
                  height={100}
                  role="presentation"
                  shapeRendering="auto"
                  vectorEffect="non-scaling-stroke"
                  width={100}
                  x={0}
                  y={0}
                />
              </clipPath>
            </defs>
            <path
              d="M0,100C5.555555555555554,99.16892346105828,11.111111111111107,98.33784692211658,16.666666666666664,97.30337078651685C22.22222222222222,96.26889465091712,27.777777777777764,95.03101891865937,33.33333333333333,94.8314606741573C38.88888888888889,94.63190242965523,44.44444444444446,95.47066167290886,50,93.25842696629213C55.55555555555554,91.04619225967541,61.1111111111111,85.7829636031883,66.66666666666666,66.29213483146067C72.22222222222221,46.80130605973303,77.77777777777777,13.082877172764814,83.33333333333334,0C88.88888888888891,-13.082877172764814,94.44444444444446,-5.530202631326228,100,2.0224719101123583L100,100C94.44444444444444,100,88.88888888888889,100,83.33333333333334,100C77.7777777777778,100,72.22222222222221,100,66.66666666666666,100C61.1111111111111,100,55.555555555555564,100,50,100C44.444444444444436,100,38.888888888888886,100,33.33333333333333,100C27.777777777777768,100,22.222222222222218,100,16.666666666666664,100C11.11111111111111,100,5.555555555555555,100,0,100Z"
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "rgb(221, 10, 10)",
                  "stroke": "rgb(221, 10, 10)",
                }
              }
            />
          </g>
        </svg>
      </span>
      <span>
        Security
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|SmallMultiplesLegend/LegendItem faded 1`] = `
<div
  className="visualization"
>
  <div
    className="SmallMultiplesLegend"
  >
    <div
      className="LegendItem faded"
    >
      <span
        className="stream"
      >
        <svg
          height="100%"
          preserveAspectRatio="none"
          viewBox="0 0 100 100"
          width="100%"
        >
          <g
            clipPath="url(#victory-clip-2)"
            style={
              Object {
                "height": "100%",
                "width": "100%",
              }
            }
          >
            <defs>
              <clipPath
                id="victory-clip-2"
              >
                <rect
                  height={100}
                  role="presentation"
                  shapeRendering="auto"
                  vectorEffect="non-scaling-stroke"
                  width={100}
                  x={0}
                  y={0}
                />
              </clipPath>
            </defs>
            <path
              d="M0,90C4.761904761904763,86.16700201207243,9.523809523809526,82.33400402414486,14.285714285714285,78.57142857142857C19.047619047619044,74.80885311871228,23.809523809523796,71.11670020120724,28.57142857142857,67.14285714285714C33.33333333333334,63.16901408450703,38.0952380952381,58.913480885311856,42.857142857142854,53.57142857142857C47.619047619047606,48.22937625754528,52.380952380952365,41.800804828973845,57.14285714285714,40.714285714285715C61.90476190476191,39.627766599597585,66.66666666666669,43.88329979879275,71.42857142857143,32.14285714285714C76.19047619047618,20.402414486921526,80.95238095238095,-7.3340040241448685,85.71428571428571,0C90.47619047619047,7.3340040241448685,95.23809523809524,49.73843058350101,100,92.14285714285714L100,100C95.23809523809526,100,90.47619047619048,100,85.71428571428571,100C80.95238095238093,100,76.19047619047619,100,71.42857142857143,100C66.66666666666667,100,61.904761904761905,100,57.14285714285714,100C52.38095238095237,100,47.61904761904761,100,42.857142857142854,100C38.095238095238095,100,33.333333333333336,100,28.57142857142857,100C23.809523809523803,100,19.047619047619044,100,14.285714285714285,100C9.523809523809526,100,4.761904761904763,100,0,100Z"
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "rgb(247, 193, 97)",
                  "stroke": "rgb(247, 193, 97)",
                }
              }
            />
          </g>
        </svg>
      </span>
      <span>
        Financial
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|StreamGraph default 1`] = `
<div
  className="visualization"
>
  <div
    className="StreamGraph"
  >
    <h1>
      Themes Across All Conditions
    </h1>
    <div
      className="VictoryContainer"
      style={
        Object {
          "height": "100%",
          "pointerEvents": "none",
          "position": "relative",
          "touchAction": "none",
          "userSelect": "none",
          "width": "100%",
        }
      }
    >
      <svg
        aria-labelledby="victory-container-12-title victory-container-12-desc"
        height={300}
        role="img"
        style={
          Object {
            "height": "100%",
            "pointerEvents": "all",
            "width": "100%",
          }
        }
        viewBox="0 0 450 300"
        width={450}
      >
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shapeRendering="auto"
            style={
              Object {
                "fill": "transparent",
                "stroke": "#252525",
                "strokeLinecap": "round",
                "strokeLinejoin": "round",
                "strokeWidth": 1,
              }
            }
            vectorEffect="non-scaling-stroke"
            x1={50}
            x2={50}
            y1={50}
            y2={250}
          />
          <text
            direction="inherit"
            dx={0}
            dy={-1.7400000000000002}
            transform="rotate(-90,25,150)"
            x={25}
            y={150}
          >
            <tspan
              dx={0}
              style={
                Object {
                  "fill": "#252525",
                  "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                  "fontSize": 12,
                  "letterSpacing": "normal",
                  "padding": 25,
                  "stroke": "transparent",
                  "textAnchor": "middle",
                }
              }
              textAnchor="middle"
              x={25}
            >
              Number of Conditions
            </tspan>
          </text>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={50}
              x2={400}
              y1={250}
              y2={250}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={50}
              x2={49}
              y1={250}
              y2={250}
            />
            <text
              direction="inherit"
              dx={0}
              dy={3.55}
              x={39}
              y={250}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="end"
                x={39}
              >
                0
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={50}
              x2={400}
              y1={50}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={50}
              x2={49}
              y1={50}
              y2={50}
            />
            <text
              direction="inherit"
              dx={0}
              dy={3.55}
              x={39}
              y={50}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="end"
                x={39}
              >
                684
              </tspan>
            </text>
          </g>
        </g>
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shapeRendering="auto"
            style={
              Object {
                "fill": "transparent",
                "stroke": "#252525",
                "strokeLinecap": "round",
                "strokeLinejoin": "round",
                "strokeWidth": 1,
              }
            }
            vectorEffect="non-scaling-stroke"
            x1={50}
            x2={400}
            y1={250}
            y2={250}
          />
          <text
            direction="inherit"
            dx={0}
            dy={10.26}
            x={225}
            y={275}
          >
            <tspan
              dx={0}
              style={
                Object {
                  "fill": "#252525",
                  "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                  "fontSize": 12,
                  "letterSpacing": "normal",
                  "padding": 25,
                  "stroke": "transparent",
                  "textAnchor": "middle",
                }
              }
              textAnchor="middle"
              x={225}
            >
              Effective Date
            </tspan>
          </text>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={50}
              x2={50}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={50}
              x2={50}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={50}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={50}
              >
                2010
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={100}
              x2={100}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={100}
              x2={100}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={100}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={100}
              >
                2011
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={150}
              x2={150}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={150}
              x2={150}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={150}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={150}
              >
                2012
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={200}
              x2={200}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={200}
              x2={200}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={200}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={200}
              >
                2013
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={250}
              x2={250}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={250}
              x2={250}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={250}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={250}
              >
                2014
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={300}
              x2={300}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={300}
              x2={300}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={300}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={300}
              >
                2015
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={350}
              x2={350}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={350}
              x2={350}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={350}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={350}
              >
                2016
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={400}
              x2={400}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={400}
              x2={400}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={400}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={400}
              >
                2017
              </tspan>
            </text>
          </g>
        </g>
        <g
          className="StackGroup"
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseMove={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role="button"
          tabIndex="0"
        >
          <g
            clipPath="url(#victory-clip-13)"
            style={
              Object {
                "height": "100%",
                "userSelect": "none",
                "width": "100%",
              }
            }
          >
            <defs>
              <clipPath
                id="victory-clip-13"
              >
                <rect
                  height={200}
                  role="presentation"
                  shapeRendering="auto"
                  vectorEffect="non-scaling-stroke"
                  width={350}
                  x={50}
                  y={50}
                />
              </clipPath>
            </defs>
            <path
              d="M50,250C66.66666666666667,249.2746475525047,83.33333333333334,248.54929510500938,100,246.49122807017545C116.66666666666666,244.43316103534153,133.33333333333331,241.04237941316896,150,243.2748538011696C166.66666666666669,245.50732818917024,183.33333333333337,253.36305858734403,200,241.2280701754386C216.66666666666663,229.09308176353318,233.33333333333331,196.96737454154874,250,206.140350877193C266.6666666666667,215.31332721283724,283.33333333333337,265.7849871061103,300,250C316.66666666666663,234.21501289388974,333.3333333333333,152.17337878839623,350,119.88304093567251C366.6666666666667,87.59270308294879,383.33333333333337,105.05366148299487,400,122.51461988304094L400,250C383.33333333333337,250,366.6666666666667,250,350,250C333.3333333333333,250,316.66666666666663,249.99999999999997,300,250C283.33333333333337,250.00000000000003,266.6666666666667,250.00000000000003,250,250C233.33333333333331,249.99999999999997,216.66666666666663,249.99999999999997,200,250C183.33333333333337,250.00000000000003,166.66666666666669,250,150,250C133.33333333333331,250,116.66666666666666,250,100,250C83.33333333333334,250,66.66666666666667,250,50,250Z"
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "rgb(221, 10, 10)",
                  "stroke": "rgb(221, 10, 10)",
                  "strokeWidth": 0,
                }
              }
            />
          </g>
          <g
            clipPath="url(#victory-clip-14)"
            style={
              Object {
                "height": "100%",
                "userSelect": "none",
                "width": "100%",
              }
            }
          >
            <defs>
              <clipPath
                id="victory-clip-14"
              >
                <rect
                  height={200}
                  role="presentation"
                  shapeRendering="auto"
                  vectorEffect="non-scaling-stroke"
                  width={350}
                  x={50}
                  y={50}
                />
              </clipPath>
            </defs>
            <path
              d="M50,246.78362573099415C66.66666666666667,244.96197457650382,83.33333333333334,243.14032342201352,100,239.76608187134502C116.66666666666666,236.39184032067652,133.33333333333331,231.46500837382976,150,233.33333333333334C166.66666666666669,235.20165829283692,183.33333333333337,243.86514015869093,200,229.23976608187135C216.66666666666663,214.61439200505177,233.33333333333331,176.70016198555857,250,183.62573099415204C266.6666666666667,190.5513000027455,283.33333333333337,242.3166680394256,300,226.0233918128655C316.66666666666663,209.7301155863054,333.3333333333333,125.37819509650498,350,90.93567251461988C366.6666666666667,56.49314993273478,383.33333333333337,71.96002525876504,400,87.4269005847953L400,122.51461988304094C383.33333333333337,105.05366148299488,366.6666666666667,87.59270308294882,350,119.88304093567251C333.3333333333333,152.1733787883962,316.66666666666663,234.2150128938897,300,250C283.33333333333337,265.7849871061103,266.6666666666667,215.31332721283724,250,206.140350877193C233.33333333333331,196.96737454154874,216.66666666666663,229.0930817635332,200,241.2280701754386C183.33333333333337,253.363058587344,166.66666666666669,245.50732818917018,150,243.2748538011696C133.33333333333331,241.04237941316902,116.66666666666666,244.43316103534153,100,246.49122807017545C83.33333333333334,248.54929510500938,66.66666666666667,249.2746475525047,50,250Z"
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "rgb(36, 91, 64)",
                  "stroke": "rgb(36, 91, 64)",
                  "strokeWidth": 0,
                }
              }
            />
          </g>
          <g
            clipPath="url(#victory-clip-15)"
            style={
              Object {
                "height": "100%",
                "userSelect": "none",
                "width": "100%",
              }
            }
          >
            <defs>
              <clipPath
                id="victory-clip-15"
              >
                <rect
                  height={200}
                  role="presentation"
                  shapeRendering="auto"
                  vectorEffect="non-scaling-stroke"
                  width={350}
                  x={50}
                  y={50}
                />
              </clipPath>
            </defs>
            <path
              d="M50,242.69005847953215C66.66666666666667,239.2993438212119,83.33333333333334,235.90862916289157,100,230.99415204678363C116.66666666666666,226.07967493067568,133.33333333333331,219.64143535678005,150,219.8830409356725C166.66666666666669,220.12464651456497,183.33333333333337,227.0460972462455,200,210.23391812865498C216.66666666666663,193.42173901106446,233.33333333333331,152.87593004420285,250,159.3567251461988C266.6666666666667,165.83752024819478,283.33333333333337,219.3449194190484,300,198.24561403508773C316.66666666666663,177.14630865112704,333.3333333333333,81.44029871235209,350,50C366.6666666666667,18.559701287647908,383.33333333333337,51.385113801718695,400,84.21052631578948L400,87.4269005847953C383.33333333333337,71.96002525876506,366.6666666666667,56.493149932734795,350,90.93567251461988C333.3333333333333,125.37819509650497,316.66666666666663,209.73011558630537,300,226.0233918128655C283.33333333333337,242.31666803942562,266.6666666666667,190.5513000027455,250,183.62573099415204C233.33333333333331,176.70016198555857,216.66666666666663,214.61439200505174,200,229.23976608187135C183.33333333333337,243.86514015869096,166.66666666666669,235.2016582928369,150,233.33333333333334C133.33333333333331,231.4650083738298,116.66666666666666,236.39184032067652,100,239.76608187134502C83.33333333333334,243.14032342201352,66.66666666666667,244.96197457650385,50,246.78362573099415Z"
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "rgb(247, 193, 97)",
                  "stroke": "rgb(247, 193, 97)",
                  "strokeWidth": 0,
                }
              }
            />
          </g>
        </g>
      </svg>
      <div
        style={
          Object {
            "height": "100%",
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
            "zIndex": 99,
          }
        }
      >
        <svg
          height={300}
          style={
            Object {
              "height": "100%",
              "overflow": "visible",
              "width": "100%",
            }
          }
          viewBox="0 0 450 300"
          width={450}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|StreamGraph streamOnly 1`] = `
<div
  className="visualization"
>
  <div
    className="StreamGraph"
  >
    <svg
      height="100%"
      preserveAspectRatio="none"
      viewBox="0 0 450 350"
      width="100%"
    >
      <g>
        <g
          className="StackGroup"
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseMove={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role="button"
          tabIndex="0"
        >
          <g
            clipPath="url(#victory-clip-18)"
            style={
              Object {
                "height": "100%",
                "width": "100%",
              }
            }
          >
            <defs>
              <clipPath
                id="victory-clip-18"
              >
                <rect
                  height={300}
                  role="presentation"
                  shapeRendering="auto"
                  vectorEffect="non-scaling-stroke"
                  width={450}
                  x={0}
                  y={0}
                />
              </clipPath>
            </defs>
            <path
              d="M0,300C21.42857142857143,298.3276143570108,42.85714285714286,296.6552287140216,64.28571428571428,291.91011235955057C85.7142857142857,287.16499600507956,107.14285714285711,279.34714893912667,128.57142857142856,284.4943820224719C150,289.6416151058171,171.42857142857144,307.75392833846047,192.85714285714283,279.7752808988764C214.28571428571422,251.7966334592924,235.7142857142856,177.72702534748092,257.1428571428571,198.87640449438203C278.5714285714286,220.02578364128314,300.0000000000001,336.3941500468969,321.42857142857144,300C342.8571428571428,263.6058499531031,364.2857142857142,74.4491834536956,385.71428571428567,0C407.1428571428571,-74.4491834536956,428.57142857142856,-34.19088386167926,450,6.067415730337075L450,300C428.57142857142856,300,407.14285714285717,300,385.71428571428567,300C364.28571428571416,300,342.85714285714283,300,321.42857142857144,300C300.00000000000006,300,278.57142857142856,300,257.1428571428571,300C235.7142857142857,300,214.28571428571428,300.00000000000006,192.85714285714283,300C171.4285714285714,299.99999999999994,150,300,128.57142857142856,300C107.14285714285711,300,85.7142857142857,300,64.28571428571428,300C42.85714285714286,300,21.42857142857143,300,0,300Z"
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "rgb(221, 10, 10)",
                  "stroke": "rgb(221, 10, 10)",
                  "strokeWidth": 0,
                  "width": 10,
                }
              }
            />
          </g>
          <g
            clipPath="url(#victory-clip-19)"
            style={
              Object {
                "height": "100%",
                "width": "100%",
              }
            }
          >
            <defs>
              <clipPath
                id="victory-clip-19"
              >
                <rect
                  height={300}
                  role="presentation"
                  shapeRendering="auto"
                  vectorEffect="non-scaling-stroke"
                  width={450}
                  x={0}
                  y={0}
                />
              </clipPath>
            </defs>
            <path
              d="M0,292.5842696629214C21.42857142857143,288.3842380123437,42.85714285714286,284.1842063617661,64.28571428571428,276.40449438202245C85.7142857142857,268.6247824022788,107.14285714285711,257.2653900933692,128.57142857142856,261.5730337078652C150,265.8806773223612,171.42857142857144,285.85535686026265,192.85714285714283,252.13483146067415C214.28571428571422,218.41430606108563,235.7142857142856,130.9985757240069,257.1428571428571,146.96629213483146C278.5714285714286,162.934008545656,300.0000000000001,282.28517170438363,321.42857142857144,244.71910112359552C342.8571428571428,207.15303054280741,364.2857142857142,12.669726222503556,385.71428571428567,-66.74157303370788C407.1428571428571,-146.15287228991932,428.57142857142856,-110.49216648203831,450,-74.83146067415731L450,6.067415730337075C428.57142857142856,-34.19088386167926,407.14285714285717,-74.4491834536956,385.71428571428567,0C364.28571428571416,74.4491834536956,342.85714285714283,263.6058499531031,321.42857142857144,300C300.00000000000006,336.3941500468969,278.57142857142856,220.0257836412832,257.1428571428571,198.87640449438203C235.7142857142857,177.72702534748086,214.28571428571428,251.7966334592923,192.85714285714283,279.7752808988764C171.4285714285714,307.7539283384605,150,289.6416151058171,128.57142857142856,284.4943820224719C107.14285714285711,279.34714893912667,85.7142857142857,287.1649960050795,64.28571428571428,291.91011235955057C42.85714285714286,296.65522871402163,21.42857142857143,298.3276143570108,0,300Z"
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "rgb(36, 91, 64)",
                  "stroke": "rgb(36, 91, 64)",
                  "strokeWidth": 0,
                  "width": 10,
                }
              }
            />
          </g>
          <g
            clipPath="url(#victory-clip-20)"
            style={
              Object {
                "height": "100%",
                "width": "100%",
              }
            }
          >
            <defs>
              <clipPath
                id="victory-clip-20"
              >
                <rect
                  height={300}
                  role="presentation"
                  shapeRendering="auto"
                  vectorEffect="non-scaling-stroke"
                  width={450}
                  x={0}
                  y={0}
                />
              </clipPath>
            </defs>
            <path
              d="M0,283.14606741573033C21.42857142857143,275.32837474283906,42.85714285714286,267.51068206994773,64.28571428571428,256.17977528089887C85.7142857142857,244.84886849185,107.14285714285711,230.0047475866435,128.57142857142856,230.56179775280899C150,231.11884791897447,171.42857142857144,247.07706915651207,192.85714285714283,208.31460674157302C214.28571428571422,169.55214432663396,235.7142857142856,76.06899825921822,257.1428571428571,91.01123595505618C278.5714285714286,105.95347365089414,300.0000000000001,229.32109510998578,321.42857142857144,180.6741573033708C342.8571428571428,132.02721949675583,364.2857142857142,-88.63427757556573,385.71428571428567,-161.12359550561797C407.1428571428571,-233.6129134356702,428.57142857142856,-157.93005222345306,450,-82.24719101123594L450,-74.83146067415731C428.57142857142856,-110.49216648203831,407.14285714285717,-146.15287228991932,385.71428571428567,-66.74157303370788C364.28571428571416,12.66972622250356,342.85714285714283,207.15303054280747,321.42857142857144,244.71910112359552C300.00000000000006,282.2851717043836,278.57142857142856,162.93400854565596,257.1428571428571,146.96629213483146C235.7142857142857,130.99857572400697,214.28571428571428,218.4143060610856,192.85714285714283,252.13483146067415C171.4285714285714,285.8553568602627,150,265.8806773223611,128.57142857142856,261.5730337078652C107.14285714285711,257.26539009336926,85.7142857142857,268.6247824022788,64.28571428571428,276.40449438202245C42.85714285714286,284.1842063617661,21.42857142857143,288.38423801234376,0,292.5842696629214Z"
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "rgb(247, 193, 97)",
                  "stroke": "rgb(247, 193, 97)",
                  "strokeWidth": 0,
                  "width": 10,
                }
              }
            />
          </g>
        </g>
      </g>
    </svg>
  </div>
</div>
`;

exports[`Storyshots Components|StreamGraph subFeature 1`] = `
<div
  className="visualization"
>
  <div
    className="StreamGraph"
  >
    <h1>
      Themes Across All Conditions
    </h1>
    <div
      className="VictoryContainer"
      style={
        Object {
          "height": "100%",
          "pointerEvents": "none",
          "position": "relative",
          "touchAction": "none",
          "userSelect": "none",
          "width": "100%",
        }
      }
    >
      <svg
        aria-labelledby="victory-container-16-title victory-container-16-desc"
        height={300}
        role="img"
        style={
          Object {
            "height": "100%",
            "pointerEvents": "all",
            "width": "100%",
          }
        }
        viewBox="0 0 450 300"
        width={450}
      >
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shapeRendering="auto"
            style={
              Object {
                "fill": "transparent",
                "stroke": "#252525",
                "strokeLinecap": "round",
                "strokeLinejoin": "round",
                "strokeWidth": 1,
              }
            }
            vectorEffect="non-scaling-stroke"
            x1={50}
            x2={50}
            y1={50}
            y2={250}
          />
          <text
            direction="inherit"
            dx={0}
            dy={-1.7400000000000002}
            transform="rotate(-90,25,150)"
            x={25}
            y={150}
          >
            <tspan
              dx={0}
              style={
                Object {
                  "fill": "#252525",
                  "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                  "fontSize": 12,
                  "letterSpacing": "normal",
                  "padding": 25,
                  "stroke": "transparent",
                  "textAnchor": "middle",
                }
              }
              textAnchor="middle"
              x={25}
            >
              Number of Conditions
            </tspan>
          </text>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={50}
              x2={400}
              y1={250}
              y2={250}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={50}
              x2={49}
              y1={250}
              y2={250}
            />
            <text
              direction="inherit"
              dx={0}
              dy={3.55}
              x={39}
              y={250}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="end"
                x={39}
              >
                0
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={50}
              x2={400}
              y1={50}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={50}
              x2={49}
              y1={50}
              y2={50}
            />
            <text
              direction="inherit"
              dx={0}
              dy={3.55}
              x={39}
              y={50}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="end"
                x={39}
              >
                445
              </tspan>
            </text>
          </g>
        </g>
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shapeRendering="auto"
            style={
              Object {
                "fill": "transparent",
                "stroke": "#252525",
                "strokeLinecap": "round",
                "strokeLinejoin": "round",
                "strokeWidth": 1,
              }
            }
            vectorEffect="non-scaling-stroke"
            x1={50}
            x2={400}
            y1={250}
            y2={250}
          />
          <text
            direction="inherit"
            dx={0}
            dy={10.26}
            x={225}
            y={275}
          >
            <tspan
              dx={0}
              style={
                Object {
                  "fill": "#252525",
                  "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                  "fontSize": 12,
                  "letterSpacing": "normal",
                  "padding": 25,
                  "stroke": "transparent",
                  "textAnchor": "middle",
                }
              }
              textAnchor="middle"
              x={225}
            >
              Effective Date
            </tspan>
          </text>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={50}
              x2={50}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={50}
              x2={50}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={50}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={50}
              >
                2010
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={100}
              x2={100}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={100}
              x2={100}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={100}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={100}
              >
                2011
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={150}
              x2={150}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={150}
              x2={150}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={150}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={150}
              >
                2012
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={200}
              x2={200}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={200}
              x2={200}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={200}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={200}
              >
                2013
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={250}
              x2={250}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={250}
              x2={250}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={250}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={250}
              >
                2014
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={300}
              x2={300}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={300}
              x2={300}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={300}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={300}
              >
                2015
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={350}
              x2={350}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={350}
              x2={350}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={350}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={350}
              >
                2016
              </tspan>
            </text>
          </g>
          <g
            role="presentation"
          >
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "none",
                  "pointerEvents": "painted",
                  "stroke": "none",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={400}
              x2={400}
              y1={250}
              y2={50}
            />
            <line
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "transparent",
                  "size": 1,
                  "stroke": "transparent",
                }
              }
              vectorEffect="non-scaling-stroke"
              x1={400}
              x2={400}
              y1={250}
              y2={251}
            />
            <text
              direction="inherit"
              dx={0}
              dy={8.55}
              x={400}
              y={261}
            >
              <tspan
                dx={0}
                style={
                  Object {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Gill Sans MT', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 10,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  }
                }
                textAnchor="middle"
                x={400}
              >
                2017
              </tspan>
            </text>
          </g>
        </g>
        <g
          className="StackGroup"
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseMove={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role="button"
          tabIndex="0"
        >
          <g
            clipPath="url(#victory-clip-17)"
            style={
              Object {
                "height": "100%",
                "userSelect": "none",
                "width": "100%",
              }
            }
          >
            <defs>
              <clipPath
                id="victory-clip-17"
              >
                <rect
                  height={200}
                  role="presentation"
                  shapeRendering="auto"
                  vectorEffect="non-scaling-stroke"
                  width={350}
                  x={50}
                  y={50}
                />
              </clipPath>
            </defs>
            <path
              d="M50,250C66.77350427350427,248.33784692211657,83.54700854700855,246.67569384423322,100,244.6067415730337C116.45299145299145,242.53778930183418,132.5854700854701,240.0620378373187,150,239.6629213483146C167.4145299145299,239.26380485931048,186.11111111111111,240.94132334581772,200,236.51685393258427C213.88888888888889,232.09238451935082,222.97008547008545,221.56592720637664,250,182.58426966292134C277.02991452991455,143.60261211946604,322.008547008547,76.16575434552962,350,50C377.991452991453,23.834245654470376,388.9957264957265,38.93959473734755,400,54.04494382022472L400,250C388.9957264957265,250,377.991452991453,250,350,250C322.008547008547,250,277.02991452991455,249.99999999999997,250,250C222.97008547008548,250.00000000000003,213.88888888888889,250.00000000000003,200,250C186.11111111111111,249.99999999999997,167.4145299145299,249.99999999999997,150,250C132.5854700854701,250.00000000000003,116.45299145299144,250,100,250C83.54700854700856,250,66.77350427350427,250,50,250Z"
              role="presentation"
              shapeRendering="auto"
              style={
                Object {
                  "fill": "rgb(221, 10, 10)",
                  "stroke": "rgb(221, 10, 10)",
                  "strokeWidth": 0,
                }
              }
            />
          </g>
        </g>
      </svg>
      <div
        style={
          Object {
            "height": "100%",
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
            "zIndex": 99,
          }
        }
      >
        <svg
          height={300}
          style={
            Object {
              "height": "100%",
              "overflow": "visible",
              "width": "100%",
            }
          }
          viewBox="0 0 450 300"
          width={450}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|StreamGraph/StackGroup documentation 1`] = `
<div
  className="visualization"
>
  <div />
</div>
`;

exports[`Storyshots Components|StreamGraph/StackGroupProps documentation 1`] = `
<div
  className="visualization"
>
  <div />
</div>
`;

exports[`Storyshots Components|TrendButton Default StreamGraph Button 1`] = `
<div
  className="visualization"
>
  <div
    className="TrendButton"
    focusable={true}
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={0}
  >
    <div
      className="buttonText"
    >
      <div
        className="StreamGraph"
      >
        <svg
          height="100%"
          preserveAspectRatio="none"
          viewBox="0 0 450 350"
          width="100%"
        >
          <g>
            <g
              className="StackGroup"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDown={[Function]}
              onMouseMove={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              role="button"
              tabIndex="0"
            >
              <g
                clipPath="url(#victory-clip-21)"
                style={
                  Object {
                    "height": "100%",
                    "width": "100%",
                  }
                }
              >
                <defs>
                  <clipPath
                    id="victory-clip-21"
                  >
                    <rect
                      height={300}
                      role="presentation"
                      shapeRendering="auto"
                      vectorEffect="non-scaling-stroke"
                      width={450}
                      x={0}
                      y={0}
                    />
                  </clipPath>
                </defs>
                <path
                  d="M0,300C21.42857142857143,298.3276143570108,42.85714285714286,296.6552287140216,64.28571428571428,291.91011235955057C85.7142857142857,287.16499600507956,107.14285714285711,279.34714893912667,128.57142857142856,284.4943820224719C150,289.6416151058171,171.42857142857144,307.75392833846047,192.85714285714283,279.7752808988764C214.28571428571422,251.7966334592924,235.7142857142856,177.72702534748092,257.1428571428571,198.87640449438203C278.5714285714286,220.02578364128314,300.0000000000001,336.3941500468969,321.42857142857144,300C342.8571428571428,263.6058499531031,364.2857142857142,74.4491834536956,385.71428571428567,0C407.1428571428571,-74.4491834536956,428.57142857142856,-34.19088386167926,450,6.067415730337075L450,300C428.57142857142856,300,407.14285714285717,300,385.71428571428567,300C364.28571428571416,300,342.85714285714283,300,321.42857142857144,300C300.00000000000006,300,278.57142857142856,300,257.1428571428571,300C235.7142857142857,300,214.28571428571428,300.00000000000006,192.85714285714283,300C171.4285714285714,299.99999999999994,150,300,128.57142857142856,300C107.14285714285711,300,85.7142857142857,300,64.28571428571428,300C42.85714285714286,300,21.42857142857143,300,0,300Z"
                  role="presentation"
                  shapeRendering="auto"
                  style={
                    Object {
                      "fill": "rgb(221, 10, 10)",
                      "stroke": "rgb(221, 10, 10)",
                      "strokeWidth": 0,
                      "width": 10,
                    }
                  }
                />
              </g>
              <g
                clipPath="url(#victory-clip-22)"
                style={
                  Object {
                    "height": "100%",
                    "width": "100%",
                  }
                }
              >
                <defs>
                  <clipPath
                    id="victory-clip-22"
                  >
                    <rect
                      height={300}
                      role="presentation"
                      shapeRendering="auto"
                      vectorEffect="non-scaling-stroke"
                      width={450}
                      x={0}
                      y={0}
                    />
                  </clipPath>
                </defs>
                <path
                  d="M0,292.5842696629214C21.42857142857143,288.3842380123437,42.85714285714286,284.1842063617661,64.28571428571428,276.40449438202245C85.7142857142857,268.6247824022788,107.14285714285711,257.2653900933692,128.57142857142856,261.5730337078652C150,265.8806773223612,171.42857142857144,285.85535686026265,192.85714285714283,252.13483146067415C214.28571428571422,218.41430606108563,235.7142857142856,130.9985757240069,257.1428571428571,146.96629213483146C278.5714285714286,162.934008545656,300.0000000000001,282.28517170438363,321.42857142857144,244.71910112359552C342.8571428571428,207.15303054280741,364.2857142857142,12.669726222503556,385.71428571428567,-66.74157303370788C407.1428571428571,-146.15287228991932,428.57142857142856,-110.49216648203831,450,-74.83146067415731L450,6.067415730337075C428.57142857142856,-34.19088386167926,407.14285714285717,-74.4491834536956,385.71428571428567,0C364.28571428571416,74.4491834536956,342.85714285714283,263.6058499531031,321.42857142857144,300C300.00000000000006,336.3941500468969,278.57142857142856,220.0257836412832,257.1428571428571,198.87640449438203C235.7142857142857,177.72702534748086,214.28571428571428,251.7966334592923,192.85714285714283,279.7752808988764C171.4285714285714,307.7539283384605,150,289.6416151058171,128.57142857142856,284.4943820224719C107.14285714285711,279.34714893912667,85.7142857142857,287.1649960050795,64.28571428571428,291.91011235955057C42.85714285714286,296.65522871402163,21.42857142857143,298.3276143570108,0,300Z"
                  role="presentation"
                  shapeRendering="auto"
                  style={
                    Object {
                      "fill": "rgb(36, 91, 64)",
                      "stroke": "rgb(36, 91, 64)",
                      "strokeWidth": 0,
                      "width": 10,
                    }
                  }
                />
              </g>
              <g
                clipPath="url(#victory-clip-23)"
                style={
                  Object {
                    "height": "100%",
                    "width": "100%",
                  }
                }
              >
                <defs>
                  <clipPath
                    id="victory-clip-23"
                  >
                    <rect
                      height={300}
                      role="presentation"
                      shapeRendering="auto"
                      vectorEffect="non-scaling-stroke"
                      width={450}
                      x={0}
                      y={0}
                    />
                  </clipPath>
                </defs>
                <path
                  d="M0,283.14606741573033C21.42857142857143,275.32837474283906,42.85714285714286,267.51068206994773,64.28571428571428,256.17977528089887C85.7142857142857,244.84886849185,107.14285714285711,230.0047475866435,128.57142857142856,230.56179775280899C150,231.11884791897447,171.42857142857144,247.07706915651207,192.85714285714283,208.31460674157302C214.28571428571422,169.55214432663396,235.7142857142856,76.06899825921822,257.1428571428571,91.01123595505618C278.5714285714286,105.95347365089414,300.0000000000001,229.32109510998578,321.42857142857144,180.6741573033708C342.8571428571428,132.02721949675583,364.2857142857142,-88.63427757556573,385.71428571428567,-161.12359550561797C407.1428571428571,-233.6129134356702,428.57142857142856,-157.93005222345306,450,-82.24719101123594L450,-74.83146067415731C428.57142857142856,-110.49216648203831,407.14285714285717,-146.15287228991932,385.71428571428567,-66.74157303370788C364.28571428571416,12.66972622250356,342.85714285714283,207.15303054280747,321.42857142857144,244.71910112359552C300.00000000000006,282.2851717043836,278.57142857142856,162.93400854565596,257.1428571428571,146.96629213483146C235.7142857142857,130.99857572400697,214.28571428571428,218.4143060610856,192.85714285714283,252.13483146067415C171.4285714285714,285.8553568602627,150,265.8806773223611,128.57142857142856,261.5730337078652C107.14285714285711,257.26539009336926,85.7142857142857,268.6247824022788,64.28571428571428,276.40449438202245C42.85714285714286,284.1842063617661,21.42857142857143,288.38423801234376,0,292.5842696629214Z"
                  role="presentation"
                  shapeRendering="auto"
                  style={
                    Object {
                      "fill": "rgb(247, 193, 97)",
                      "stroke": "rgb(247, 193, 97)",
                      "strokeWidth": 0,
                      "width": 10,
                    }
                  }
                />
              </g>
            </g>
          </g>
        </svg>
      </div>
      <span
        className="descriptionText"
      >
        <p>
          Trends &
        </p>
        <p>
          Definitions
        </p>
      </span>
      <svg
        className="trendArrow"
        viewBox="0 0 427.5 427.5"
        width={10}
      >
        <path
          d="M60.9,0l338.1,170.6v85.3L60.9,427.5l-32.5-68l295.5-146.2L28.4,69.1L60.9,0z"
          fill="#D1057A"
        />
      </svg>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components|TrendButton Instrument Bubble Button 1`] = `
<div
  className="visualization"
>
  <div
    className="TrendButton"
    focusable={true}
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={0}
  >
    <div
      className="buttonText"
    >
      <div
        style={
          Object {
            "height": "50px",
            "width": "120px",
          }
        }
      >
        <svg
          className="BubbleChart"
          height="100%"
          viewBox="0 0 850 400"
          width="100%"
        >
          <g
            onMouseDown={[Function]}
            onMouseOver={[Function]}
            onMouseUp={[Function]}
          >
            <g
              className="InstrumentBubble"
            >
              <g
                className="depth-2"
                data-name="OIL"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  className="CommodityCircle"
                  r={80.5}
                  transform="translate(243.16912586 192.49143055)"
                />
                <path
                  d="
          M 162.66912586 191.49143055
          A 80.5 80.5 0 0 1 323.66912586 191.49143055"
                  id="OILpath"
                  style={
                    Object {
                      "fill": "none",
                      "stroke": "transparent",
                    }
                  }
                />
                <text
                  className="bubbleTitle"
                >
                  <textPath
                    href="#OILpath"
                    startOffset="50%"
                    textAnchor="middle"
                  >
                    Oil
                  </textPath>
                </text>
              </g>
              <g
                className="depth-2"
                data-name="GAS"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  className="CommodityCircle"
                  r={39}
                  transform="translate(367.66912586 192.49143055)"
                />
                <path
                  d="
          M 328.66912586 191.49143055
          A 39 39 0 0 1 406.66912586 191.49143055"
                  id="GASpath"
                  style={
                    Object {
                      "fill": "none",
                      "stroke": "transparent",
                    }
                  }
                />
                <text
                  className="bubbleTitle"
                >
                  <textPath
                    href="#GASpath"
                    startOffset="50%"
                    textAnchor="middle"
                  >
                    Gas
                  </textPath>
                </text>
              </g>
              <g
                className="depth-2"
                data-name="POWER"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  className="CommodityCircle"
                  r={36}
                  transform="translate(339.00245920 267.17892764)"
                />
                <path
                  d="
          M 303.00245920 266.17892764
          A 36 36 0 0 1 375.00245920 266.17892764"
                  id="POWERpath"
                  style={
                    Object {
                      "fill": "none",
                      "stroke": "transparent",
                    }
                  }
                />
                <text
                  className="bubbleTitle"
                >
                  <textPath
                    href="#POWERpath"
                    startOffset="50%"
                    textAnchor="middle"
                  >
                    Power
                  </textPath>
                </text>
              </g>
              <g
                className="depth-2"
                data-name="ANY_COMMODITY_TYPES"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  className="CommodityCircle"
                  r={89.5}
                  transform="translate(506.50737759 200.00000000)"
                />
                <path
                  d="
          M 417.00737759 199.00000000
          A 89.5 89.5 0 0 1 596.00737759 199.00000000"
                  id="ANY_COMMODITY_TYPESpath"
                  style={
                    Object {
                      "fill": "none",
                      "stroke": "transparent",
                    }
                  }
                />
                <text
                  className="bubbleTitle"
                >
                  <textPath
                    href="#ANY_COMMODITY_TYPESpath"
                    startOffset="50%"
                    textAnchor="middle"
                  >
                    Any Commodity Types
                  </textPath>
                </text>
              </g>
              <g
                className="depth-2"
                data-name="NOT_SPECIFIED"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  className="CommodityCircle"
                  r={43.5}
                  transform="translate(644.50737759 200.00000000)"
                />
                <path
                  d="
          M 601.00737759 199.00000000
          A 43.5 43.5 0 0 1 688.00737759 199.00000000"
                  id="NOT_SPECIFIEDpath"
                  style={
                    Object {
                      "fill": "none",
                      "stroke": "transparent",
                    }
                  }
                />
                <text
                  className="bubbleTitle"
                >
                  <textPath
                    href="#NOT_SPECIFIEDpath"
                    startOffset="50%"
                    textAnchor="middle"
                  >
                    Not Specified
                  </textPath>
                </text>
              </g>
              <g
                className="depth-3"
                data-name="XO"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  r={40}
                  style={
                    Object {
                      "fill": "rgb(14, 43, 140)",
                    }
                  }
                  transform="translate(207.66912586 192.49143055)"
                />
                <text
                  alignmentBaseline="middle"
                  fill="white"
                  stroke="transparent"
                  textAnchor="middle"
                  x={207.66912586371723}
                  y="192.49143055"
                >
                  XO
                </text>
              </g>
              <g
                className="depth-3"
                data-name="OPSO"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  r={33}
                  style={
                    Object {
                      "fill": "rgb(22, 78, 248)",
                    }
                  }
                  transform="translate(285.66912586 192.49143055)"
                />
                <text
                  alignmentBaseline="middle"
                  fill="white"
                  stroke="transparent"
                  textAnchor="middle"
                  x={285.6691258637172}
                  y="192.49143055"
                >
                  OPSO
                </text>
              </g>
              <g
                className="depth-3"
                data-name="OPLO"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  r={20}
                  style={
                    Object {
                      "fill": "rgb(22, 78, 248)",
                    }
                  }
                  transform="translate(252.18835663 239.85215364)"
                />
                <text
                  alignmentBaseline="middle"
                  fill="white"
                  stroke="transparent"
                  textAnchor="middle"
                  x={252.188356632948}
                  y="239.85215364"
                >
                  OPLO
                </text>
              </g>
              <g
                className="depth-3"
                data-name="OPL"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  r={10}
                  style={
                    Object {
                      "fill": "rgb(14, 43, 140)",
                    }
                  }
                  transform="translate(367.66912586 192.49143055)"
                />
                <text
                  alignmentBaseline="middle"
                  fill="black"
                  stroke="transparent"
                  textAnchor=""
                  x={379.6691258637172}
                  y="192.49143055"
                >
                  OPL
                </text>
              </g>
              <g
                className="depth-3"
                data-name="EPE"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  r={7}
                  style={
                    Object {
                      "fill": "rgb(39, 165, 249)",
                    }
                  }
                  transform="translate(339.00245920 267.17892764)"
                />
                <text
                  alignmentBaseline="middle"
                  fill="black"
                  stroke="transparent"
                  textAnchor=""
                  x={348.00245919705054}
                  y="267.17892764"
                >
                  EPE
                </text>
              </g>
              <g
                className="depth-3"
                data-name="GPLO"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  r={40}
                  style={
                    Object {
                      "fill": "rgb(22, 78, 248)",
                    }
                  }
                  transform="translate(478.21632047 165.65082116)"
                />
                <text
                  alignmentBaseline="middle"
                  fill="white"
                  stroke="transparent"
                  textAnchor="middle"
                  x={478.216320468198}
                  y="165.65082116"
                >
                  GPLO
                </text>
              </g>
              <g
                className="depth-3"
                data-name="EC"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  r={21}
                  style={
                    Object {
                      "fill": "rgb(39, 165, 249)",
                    }
                  }
                  transform="translate(544.21632047 165.65082116)"
                />
                <text
                  alignmentBaseline="middle"
                  fill="white"
                  stroke="transparent"
                  textAnchor="middle"
                  x={544.216320468198}
                  y="165.65082116"
                >
                  EC
                </text>
              </g>
              <g
                className="depth-3"
                data-name="GPSO"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  r={10}
                  style={
                    Object {
                      "fill": "rgb(22, 78, 248)",
                    }
                  }
                  transform="translate(533.52692653 232.80539552)"
                />
                <text
                  alignmentBaseline="middle"
                  fill="black"
                  stroke="transparent"
                  textAnchor=""
                  x={545.5269265288041}
                  y="232.80539552"
                >
                  GPSO
                </text>
              </g>
              <g
                className="depth-3"
                data-name="AO"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  r={15}
                  style={
                    Object {
                      "fill": "rgb(212, 169, 42)",
                    }
                  }
                  transform="translate(621.00737759 200.00000000)"
                />
                <text
                  alignmentBaseline="middle"
                  fill="white"
                  stroke="transparent"
                  textAnchor="middle"
                  x={621.0073775911517}
                  y="200.00000000"
                >
                  AO
                </text>
              </g>
              <g
                className="depth-3"
                data-name="MO"
                focusable={true}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
              >
                <circle
                  r={5}
                  style={
                    Object {
                      "fill": "rgb(212, 169, 42)",
                    }
                  }
                  transform="translate(662.00737759 200.00000000)"
                />
                <text
                  alignmentBaseline="middle"
                  fill="black"
                  stroke="transparent"
                  textAnchor=""
                  x={669.0073775911517}
                  y="200.00000000"
                >
                  MO
                </text>
              </g>
            </g>
          </g>
        </svg>
      </div>
      <span
        className="descriptionText"
      >
        <p>
          Trends &
        </p>
        <p>
          Definitions
        </p>
      </span>
      <svg
        className="trendArrow"
        viewBox="0 0 427.5 427.5"
        width={10}
      >
        <path
          d="M60.9,0l338.1,170.6v85.3L60.9,427.5l-32.5-68l295.5-146.2L28.4,69.1L60.9,0z"
          fill="#D1057A"
        />
      </svg>
    </div>
  </div>
</div>
`;
