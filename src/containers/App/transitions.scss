$defaultTransition: 1s ease-in-out;

$fastEnd: 1s cubic-bezier(0.8, 0, 1, 0.2);
$fastestEnd: 1s cubic-bezier(1, 0, 1, 0);

$fastStart: 1s cubic-bezier(0, 0.8, 0.2, 1);
$fastestStart: 1s cubic-bezier(0, 1, 0, 1);

$faded: 0.3;

/**
 *  Each state inherits the previous values, so we only have to declare the parts
 *  that change at each step.
 */
$states: (
  0: (
    ".Guide": (
      left: 14%,
      top: 28%,
    ),
    ".ViewTwo .header": (opacity: 0),
    ".ViewTwo .wheel": (opacity: 0),
    ".ViewTwo .companyBreakdown": (opacity: 0),
    ".ViewTwo .menus": (opacity: 0),
    ".ViewTwo .ConditionDetails .listPane": (opacity: 0),
    ".ViewTwo .ConditionDetails .ProjectHeader": (opacity: 0),
    ".ViewTwo .ConditionDetails .contentPane": (opacity: 0),
    ".Footer": (
      opacity: 0,

      transition: "opacity $fastStart, visibility 0s 1s",
    ),
  ),
  // 9 resets from View 2 -> 1, just with different transitions
  9: (),
  1: (
    ".Guide": (
      left: 38%,
      top: 62%,
    ),
    ".browseBy .BrowseByBtn.location": (opacity: $faded),
    ".ViewOne .row.buttons .ShortcutInfoBar": (opacity: $faded),
    ".ViewOne .row.intro": (top: -50%),
    ".ViewOne .row.explorer": (top: -50%),
  ),
  2: (
    ".Guide": (
      left: 52%,
      top: 75%,
    ),
    ".browseBy": (top: 81%),
    ".browseBy .BrowseByBtn.location": (opacity: 0),
    ".ViewOne .row.buttons .ShortcutInfoBar": (opacity: 0),
    ".ViewOne .row.intro": (top: -100%),
    ".ViewOne .row.explorer": (top: -100%),
    ".ViewTwo .ConditionDetails .contentPane": (opacity: 1),
  ),
  3: (
    ".Guide": (
      left: 66%,
      top: 122px,
    ),
    ".ViewTwo .ConditionDetails .contentPane": (opacity: $faded),
    ".ViewTwo .menus": (opacity: 1),
  ),
  4: (
    ".Guide": (
      left: 35%,
      top: 553px,
    ),
    ".ViewTwo .menus": (opacity: $faded),
    ".ViewTwo .ConditionDetails .listPane": (opacity: 1),
    ".ViewTwo .ConditionDetails .ProjectHeader": (opacity: 1),
  ),
  5: (
    ".Guide": (
      left: 57%,
      top: -16px,
    ),
    ".ViewTwo .ConditionDetails .listPane": (opacity: $faded),
    ".ViewTwo .ConditionDetails .ProjectHeader": (opacity: $faded),
    ".ViewTwo .companyBreakdown": (opacity: 1),
  ),
  6: (
    ".Guide": (
      left: 3%,
      top: 450px,
    ),
    ".browseBy .SkipIntro": (opacity: 0),
    ".browseBy .BrowseByBtn.company": (opacity: 0),
    ".browseBy .BrowseByBtn.location": (opacity: 0),
    ".ViewTwo .companyBreakdown": (opacity: $faded),
    ".ViewTwo .wheel": (opacity: 1),
  ),
  7: (
    ".Guide": (
      left: 73%,
      top: -4px,
    ),
    ".browseBy .SkipIntro": (opacity: 1),
    ".browseBy .BrowseByBtn.company": (opacity: 1),
    ".browseBy .BrowseByBtn.location": (opacity: 1),
    ".ViewTwo .header": (opacity: 1),
    ".ViewTwo .wheel": (opacity: 1),
    ".ViewTwo .companyBreakdown": (opacity: 1),
    ".ViewTwo .menus": (opacity: 1),
    ".ViewTwo .ConditionDetails .listPane": (opacity: 1),
    ".ViewTwo .ConditionDetails .ProjectHeader": (opacity: 1),
    ".ViewTwo .ConditionDetails .contentPane": (opacity: 1),
    ".Footer": (
      opacity: 1,
      visibility: visible,

      transition: opacity $defaultTransition,
    ),
  ),
  8: (
    ".Guide": (
      opacity: 0,
    ),
  ),
  10: (
    ".ViewTwo": (
      opacity: 0,
      // left: -100%,
    ),
    ".ViewThree": (
      opacity: 1,
      // left: 0,
    ),
  ),
);

$combinedState: ();

.App {
  @each $stage, $rules in $states {
    &.transition-state-#{$stage} {
      @each $selector, $properties in $rules {
        @if map_has_key($combinedState, $selector) == false {
          $combinedState: map-merge($combinedState, ($selector: ())) !global;
        }

        $combinedState: map-merge(
          $combinedState,
          ($selector: map-merge(map-get($combinedState, $selector), $properties)),
        ) !global;
      }

      @each $selector, $properties in $combinedState {
        #{$selector} {
          @each $property, $value in map-get($combinedState, $selector) {
            #{$property}: #{$value};
          }
        }
      }
    }
  }
}
